// Package client provides primitives to interact with the openapi HTTP API.
//
// Code generated by github.com/oapi-codegen/oapi-codegen/v2 version v2.4.1 DO NOT EDIT.
package ometa

import (
	"time"

	openapi_types "github.com/oapi-codegen/runtime/types"
)

const (
	BearerAuthScopes = "BearerAuth.Scopes"
)

// Defines values for APICollectionProvider.
const (
	APICollectionProviderSystem APICollectionProvider = "system"
	APICollectionProviderUser   APICollectionProvider = "user"
)

// Defines values for APICollectionServiceType.
const (
	APICollectionServiceTypeRest    APICollectionServiceType = "Rest"
	APICollectionServiceTypeWEBHOOK APICollectionServiceType = "WEBHOOK"
)

// Defines values for APIEndpointProvider.
const (
	APIEndpointProviderSystem APIEndpointProvider = "system"
	APIEndpointProviderUser   APIEndpointProvider = "user"
)

// Defines values for APIEndpointRequestMethod.
const (
	APIEndpointRequestMethodCONNECT APIEndpointRequestMethod = "CONNECT"
	APIEndpointRequestMethodDELETE  APIEndpointRequestMethod = "DELETE"
	APIEndpointRequestMethodGET     APIEndpointRequestMethod = "GET"
	APIEndpointRequestMethodHEAD    APIEndpointRequestMethod = "HEAD"
	APIEndpointRequestMethodOPTIONS APIEndpointRequestMethod = "OPTIONS"
	APIEndpointRequestMethodPATCH   APIEndpointRequestMethod = "PATCH"
	APIEndpointRequestMethodPOST    APIEndpointRequestMethod = "POST"
	APIEndpointRequestMethodPUT     APIEndpointRequestMethod = "PUT"
	APIEndpointRequestMethodTRACE   APIEndpointRequestMethod = "TRACE"
)

// Defines values for APIEndpointServiceType.
const (
	APIEndpointServiceTypeRest    APIEndpointServiceType = "Rest"
	APIEndpointServiceTypeWEBHOOK APIEndpointServiceType = "WEBHOOK"
)

// Defines values for APISchemaSchemaType.
const (
	APISchemaSchemaTypeAvro     APISchemaSchemaType = "Avro"
	APISchemaSchemaTypeJSON     APISchemaSchemaType = "JSON"
	APISchemaSchemaTypeNone     APISchemaSchemaType = "None"
	APISchemaSchemaTypeOther    APISchemaSchemaType = "Other"
	APISchemaSchemaTypeProtobuf APISchemaSchemaType = "Protobuf"
)

// Defines values for AddGlossaryToAssetsRequestOperation.
const (
	AddGlossaryToAssetsRequestOperationAddAssets       AddGlossaryToAssetsRequestOperation = "AddAssets"
	AddGlossaryToAssetsRequestOperationAddGlossaryTags AddGlossaryToAssetsRequestOperation = "AddGlossaryTags"
)

// Defines values for AddTagToAssetsRequestOperation.
const (
	AddTagToAssetsRequestOperationAddAssets             AddTagToAssetsRequestOperation = "AddAssets"
	AddTagToAssetsRequestOperationAddClassificationTags AddTagToAssetsRequestOperation = "AddClassificationTags"
)

// Defines values for ApiServiceProvider.
const (
	ApiServiceProviderSystem ApiServiceProvider = "system"
	ApiServiceProviderUser   ApiServiceProvider = "user"
)

// Defines values for ApiServiceServiceType.
const (
	ApiServiceServiceTypeRest    ApiServiceServiceType = "Rest"
	ApiServiceServiceTypeWEBHOOK ApiServiceServiceType = "WEBHOOK"
)

// Defines values for AppAgentType.
const (
	AppAgentTypeCollateAI AppAgentType = "CollateAI"
	AppAgentTypeMetadata  AppAgentType = "Metadata"
)

// Defines values for AppAppType.
const (
	AppAppTypeExternal AppAppType = "external"
	AppAppTypeInternal AppAppType = "internal"
)

// Defines values for AppPermission.
const (
	AppPermissionAll AppPermission = "All"
)

// Defines values for AppProvider.
const (
	AppProviderSystem AppProvider = "system"
	AppProviderUser   AppProvider = "user"
)

// Defines values for AppScheduleType.
const (
	AppScheduleTypeLive              AppScheduleType = "Live"
	AppScheduleTypeNoSchedule        AppScheduleType = "NoSchedule"
	AppScheduleTypeScheduled         AppScheduleType = "Scheduled"
	AppScheduleTypeScheduledOrManual AppScheduleType = "ScheduledOrManual"
)

// Defines values for AppExtensionExtension.
const (
	AppExtensionExtensionCustom AppExtensionExtension = "custom"
	AppExtensionExtensionLimits AppExtensionExtension = "limits"
	AppExtensionExtensionStatus AppExtensionExtension = "status"
)

// Defines values for AppMarketPlaceDefinitionAgentType.
const (
	AppMarketPlaceDefinitionAgentTypeCollateAI AppMarketPlaceDefinitionAgentType = "CollateAI"
	AppMarketPlaceDefinitionAgentTypeMetadata  AppMarketPlaceDefinitionAgentType = "Metadata"
)

// Defines values for AppMarketPlaceDefinitionAppType.
const (
	AppMarketPlaceDefinitionAppTypeExternal AppMarketPlaceDefinitionAppType = "external"
	AppMarketPlaceDefinitionAppTypeInternal AppMarketPlaceDefinitionAppType = "internal"
)

// Defines values for AppMarketPlaceDefinitionPermission.
const (
	AppMarketPlaceDefinitionPermissionAll AppMarketPlaceDefinitionPermission = "All"
)

// Defines values for AppMarketPlaceDefinitionProvider.
const (
	AppMarketPlaceDefinitionProviderSystem AppMarketPlaceDefinitionProvider = "system"
	AppMarketPlaceDefinitionProviderUser   AppMarketPlaceDefinitionProvider = "user"
)

// Defines values for AppMarketPlaceDefinitionScheduleType.
const (
	AppMarketPlaceDefinitionScheduleTypeLive              AppMarketPlaceDefinitionScheduleType = "Live"
	AppMarketPlaceDefinitionScheduleTypeNoSchedule        AppMarketPlaceDefinitionScheduleType = "NoSchedule"
	AppMarketPlaceDefinitionScheduleTypeScheduled         AppMarketPlaceDefinitionScheduleType = "Scheduled"
	AppMarketPlaceDefinitionScheduleTypeScheduledOrManual AppMarketPlaceDefinitionScheduleType = "ScheduledOrManual"
)

// Defines values for AppRunRecordStatus.
const (
	AppRunRecordStatusActive      AppRunRecordStatus = "active"
	AppRunRecordStatusActiveError AppRunRecordStatus = "activeError"
	AppRunRecordStatusCompleted   AppRunRecordStatus = "completed"
	AppRunRecordStatusFailed      AppRunRecordStatus = "failed"
	AppRunRecordStatusPending     AppRunRecordStatus = "pending"
	AppRunRecordStatusRunning     AppRunRecordStatus = "running"
	AppRunRecordStatusStarted     AppRunRecordStatus = "started"
	AppRunRecordStatusStopped     AppRunRecordStatus = "stopped"
	AppRunRecordStatusSuccess     AppRunRecordStatus = "success"
)

// Defines values for AppScheduleScheduleTimeline.
const (
	AppScheduleScheduleTimelineCustom  AppScheduleScheduleTimeline = "Custom"
	AppScheduleScheduleTimelineDaily   AppScheduleScheduleTimeline = " Daily"
	AppScheduleScheduleTimelineHourly  AppScheduleScheduleTimeline = "Hourly"
	AppScheduleScheduleTimelineMonthly AppScheduleScheduleTimeline = "Monthly"
	AppScheduleScheduleTimelineNone    AppScheduleScheduleTimeline = "None"
	AppScheduleScheduleTimelineWeekly  AppScheduleScheduleTimeline = "Weekly"
)

// Defines values for ArgumentsInputEffect.
const (
	ArgumentsInputEffectExclude ArgumentsInputEffect = "exclude"
	ArgumentsInputEffectInclude ArgumentsInputEffect = "include"
)

// Defines values for ArgumentsInputPrefixCondition.
const (
	ArgumentsInputPrefixConditionAND ArgumentsInputPrefixCondition = "AND"
	ArgumentsInputPrefixConditionOR  ArgumentsInputPrefixCondition = "OR"
)

// Defines values for AssetTypeConfigurationBoostMode.
const (
	AssetTypeConfigurationBoostModeAvg      AssetTypeConfigurationBoostMode = "avg"
	AssetTypeConfigurationBoostModeMax      AssetTypeConfigurationBoostMode = "max"
	AssetTypeConfigurationBoostModeMin      AssetTypeConfigurationBoostMode = "min"
	AssetTypeConfigurationBoostModeMultiply AssetTypeConfigurationBoostMode = "multiply"
	AssetTypeConfigurationBoostModeReplace  AssetTypeConfigurationBoostMode = "replace"
	AssetTypeConfigurationBoostModeSum      AssetTypeConfigurationBoostMode = "sum"
)

// Defines values for AssetTypeConfigurationScoreMode.
const (
	AssetTypeConfigurationScoreModeAvg      AssetTypeConfigurationScoreMode = "avg"
	AssetTypeConfigurationScoreModeFirst    AssetTypeConfigurationScoreMode = "first"
	AssetTypeConfigurationScoreModeMax      AssetTypeConfigurationScoreMode = "max"
	AssetTypeConfigurationScoreModeMin      AssetTypeConfigurationScoreMode = "min"
	AssetTypeConfigurationScoreModeMultiply AssetTypeConfigurationScoreMode = "multiply"
	AssetTypeConfigurationScoreModeSum      AssetTypeConfigurationScoreMode = "sum"
)

// Defines values for AuthenticationMechanismAuthType.
const (
	BASIC AuthenticationMechanismAuthType = "BASIC"
	JWT   AuthenticationMechanismAuthType = "JWT"
	SSO   AuthenticationMechanismAuthType = "SSO"
)

// Defines values for BotProvider.
const (
	BotProviderSystem BotProvider = "system"
	BotProviderUser   BotProvider = "user"
)

// Defines values for BulkOperationResultStatus.
const (
	BulkOperationResultStatusAborted        BulkOperationResultStatus = "aborted"
	BulkOperationResultStatusFailure        BulkOperationResultStatus = "failure"
	BulkOperationResultStatusPartialSuccess BulkOperationResultStatus = "partialSuccess"
	BulkOperationResultStatusSuccess        BulkOperationResultStatus = "success"
)

// Defines values for ChangeEventEventType.
const (
	ChangeEventEventTypeEntityCreated        ChangeEventEventType = "entityCreated"
	ChangeEventEventTypeEntityDeleted        ChangeEventEventType = "entityDeleted"
	ChangeEventEventTypeEntityFieldsChanged  ChangeEventEventType = "entityFieldsChanged"
	ChangeEventEventTypeEntityNoChange       ChangeEventEventType = "entityNoChange"
	ChangeEventEventTypeEntityRestored       ChangeEventEventType = "entityRestored"
	ChangeEventEventTypeEntitySoftDeleted    ChangeEventEventType = "entitySoftDeleted"
	ChangeEventEventTypeEntityUpdated        ChangeEventEventType = "entityUpdated"
	ChangeEventEventTypeLogicalTestCaseAdded ChangeEventEventType = "logicalTestCaseAdded"
	ChangeEventEventTypePostCreated          ChangeEventEventType = "postCreated"
	ChangeEventEventTypePostUpdated          ChangeEventEventType = "postUpdated"
	ChangeEventEventTypeSuggestionAccepted   ChangeEventEventType = "suggestionAccepted"
	ChangeEventEventTypeSuggestionCreated    ChangeEventEventType = "suggestionCreated"
	ChangeEventEventTypeSuggestionDeleted    ChangeEventEventType = "suggestionDeleted"
	ChangeEventEventTypeSuggestionRejected   ChangeEventEventType = "suggestionRejected"
	ChangeEventEventTypeSuggestionUpdated    ChangeEventEventType = "suggestionUpdated"
	ChangeEventEventTypeTaskClosed           ChangeEventEventType = "taskClosed"
	ChangeEventEventTypeTaskResolved         ChangeEventEventType = "taskResolved"
	ChangeEventEventTypeThreadCreated        ChangeEventEventType = "threadCreated"
	ChangeEventEventTypeThreadUpdated        ChangeEventEventType = "threadUpdated"
)

// Defines values for ChangePasswordRequestRequestType.
const (
	SELF ChangePasswordRequestRequestType = "SELF"
	USER ChangePasswordRequestRequestType = "USER"
)

// Defines values for ChartChartType.
const (
	ChartChartTypeArea      ChartChartType = "Area"
	ChartChartTypeBar       ChartChartType = "Bar"
	ChartChartTypeBoxPlot   ChartChartType = "BoxPlot"
	ChartChartTypeHistogram ChartChartType = "Histogram"
	ChartChartTypeLine      ChartChartType = "Line"
	ChartChartTypeOther     ChartChartType = "Other"
	ChartChartTypePie       ChartChartType = "Pie"
	ChartChartTypeScatter   ChartChartType = "Scatter"
	ChartChartTypeTable     ChartChartType = "Table"
	ChartChartTypeText      ChartChartType = "Text"
)

// Defines values for ChartProvider.
const (
	ChartProviderSystem ChartProvider = "system"
	ChartProviderUser   ChartProvider = "user"
)

// Defines values for ChartServiceType.
const (
	ChartServiceTypeCustomDashboard     ChartServiceType = "CustomDashboard"
	ChartServiceTypeDomoDashboard       ChartServiceType = "DomoDashboard"
	ChartServiceTypeLightdash           ChartServiceType = "Lightdash"
	ChartServiceTypeLooker              ChartServiceType = "Looker"
	ChartServiceTypeMetabase            ChartServiceType = "Metabase"
	ChartServiceTypeMicroStrategy       ChartServiceType = "MicroStrategy"
	ChartServiceTypeMode                ChartServiceType = "Mode"
	ChartServiceTypePowerBI             ChartServiceType = "PowerBI"
	ChartServiceTypePowerBIReportServer ChartServiceType = "PowerBIReportServer"
	ChartServiceTypeQlikCloud           ChartServiceType = "QlikCloud"
	ChartServiceTypeQlikSense           ChartServiceType = "QlikSense"
	ChartServiceTypeQuickSight          ChartServiceType = "QuickSight"
	ChartServiceTypeRedash              ChartServiceType = "Redash"
	ChartServiceTypeSigma               ChartServiceType = "Sigma"
	ChartServiceTypeSuperset            ChartServiceType = "Superset"
	ChartServiceTypeTableau             ChartServiceType = "Tableau"
)

// Defines values for ClassificationProvider.
const (
	ClassificationProviderSystem ClassificationProvider = "system"
	ClassificationProviderUser   ClassificationProvider = "user"
)

// Defines values for ColumnArrayDataType.
const (
	ColumnArrayDataTypeAGGREGATEFUNCTION ColumnArrayDataType = "AGGREGATEFUNCTION"
	ColumnArrayDataTypeAGGSTATE          ColumnArrayDataType = "AGG_STATE"
	ColumnArrayDataTypeARRAY             ColumnArrayDataType = "ARRAY"
	ColumnArrayDataTypeBIGINT            ColumnArrayDataType = "BIGINT"
	ColumnArrayDataTypeBINARY            ColumnArrayDataType = "BINARY"
	ColumnArrayDataTypeBIT               ColumnArrayDataType = "BIT"
	ColumnArrayDataTypeBITMAP            ColumnArrayDataType = "BITMAP"
	ColumnArrayDataTypeBLOB              ColumnArrayDataType = "BLOB"
	ColumnArrayDataTypeBOOLEAN           ColumnArrayDataType = "BOOLEAN"
	ColumnArrayDataTypeBYTEA             ColumnArrayDataType = "BYTEA"
	ColumnArrayDataTypeBYTEINT           ColumnArrayDataType = "BYTEINT"
	ColumnArrayDataTypeBYTES             ColumnArrayDataType = "BYTES"
	ColumnArrayDataTypeCHAR              ColumnArrayDataType = "CHAR"
	ColumnArrayDataTypeCIDR              ColumnArrayDataType = "CIDR"
	ColumnArrayDataTypeCLOB              ColumnArrayDataType = "CLOB"
	ColumnArrayDataTypeDATE              ColumnArrayDataType = "DATE"
	ColumnArrayDataTypeDATETIME          ColumnArrayDataType = "DATETIME"
	ColumnArrayDataTypeDATETIMERANGE     ColumnArrayDataType = "DATETIMERANGE"
	ColumnArrayDataTypeDECIMAL           ColumnArrayDataType = "DECIMAL"
	ColumnArrayDataTypeDOUBLE            ColumnArrayDataType = "DOUBLE"
	ColumnArrayDataTypeENUM              ColumnArrayDataType = "ENUM"
	ColumnArrayDataTypeERROR             ColumnArrayDataType = "ERROR"
	ColumnArrayDataTypeFIXED             ColumnArrayDataType = "FIXED"
	ColumnArrayDataTypeFLOAT             ColumnArrayDataType = "FLOAT"
	ColumnArrayDataTypeGEOGRAPHY         ColumnArrayDataType = "GEOGRAPHY"
	ColumnArrayDataTypeGEOMETRY          ColumnArrayDataType = "GEOMETRY"
	ColumnArrayDataTypeHLL               ColumnArrayDataType = "HLL"
	ColumnArrayDataTypeHLLSKETCH         ColumnArrayDataType = "HLLSKETCH"
	ColumnArrayDataTypeIMAGE             ColumnArrayDataType = "IMAGE"
	ColumnArrayDataTypeINET              ColumnArrayDataType = "INET"
	ColumnArrayDataTypeINT               ColumnArrayDataType = "INT"
	ColumnArrayDataTypeINTERVAL          ColumnArrayDataType = "INTERVAL"
	ColumnArrayDataTypeIPV4              ColumnArrayDataType = "IPV4"
	ColumnArrayDataTypeIPV6              ColumnArrayDataType = "IPV6"
	ColumnArrayDataTypeJSON              ColumnArrayDataType = "JSON"
	ColumnArrayDataTypeLARGEINT          ColumnArrayDataType = "LARGEINT"
	ColumnArrayDataTypeLONG              ColumnArrayDataType = "LONG"
	ColumnArrayDataTypeLONGBLOB          ColumnArrayDataType = "LONGBLOB"
	ColumnArrayDataTypeLOWCARDINALITY    ColumnArrayDataType = "LOWCARDINALITY"
	ColumnArrayDataTypeMACADDR           ColumnArrayDataType = "MACADDR"
	ColumnArrayDataTypeMAP               ColumnArrayDataType = "MAP"
	ColumnArrayDataTypeMEASUREHIDDEN     ColumnArrayDataType = "MEASURE HIDDEN"
	ColumnArrayDataTypeMEASUREVISIBLE    ColumnArrayDataType = "MEASURE VISIBLE"
	ColumnArrayDataTypeMEDIUMBLOB        ColumnArrayDataType = "MEDIUMBLOB"
	ColumnArrayDataTypeMEDIUMTEXT        ColumnArrayDataType = "MEDIUMTEXT"
	ColumnArrayDataTypeMONEY             ColumnArrayDataType = "MONEY"
	ColumnArrayDataTypeNTEXT             ColumnArrayDataType = "NTEXT"
	ColumnArrayDataTypeNULL              ColumnArrayDataType = "NULL"
	ColumnArrayDataTypeNUMBER            ColumnArrayDataType = "NUMBER"
	ColumnArrayDataTypeNUMERIC           ColumnArrayDataType = "NUMERIC"
	ColumnArrayDataTypePGLSN             ColumnArrayDataType = "PG_LSN"
	ColumnArrayDataTypePGSNAPSHOT        ColumnArrayDataType = "PG_SNAPSHOT"
	ColumnArrayDataTypePOINT             ColumnArrayDataType = "POINT"
	ColumnArrayDataTypePOLYGON           ColumnArrayDataType = "POLYGON"
	ColumnArrayDataTypeQUANTILESTATE     ColumnArrayDataType = "QUANTILE_STATE"
	ColumnArrayDataTypeRECORD            ColumnArrayDataType = "RECORD"
	ColumnArrayDataTypeROWID             ColumnArrayDataType = "ROWID"
	ColumnArrayDataTypeSET               ColumnArrayDataType = "SET"
	ColumnArrayDataTypeSMALLINT          ColumnArrayDataType = "SMALLINT"
	ColumnArrayDataTypeSPATIAL           ColumnArrayDataType = "SPATIAL"
	ColumnArrayDataTypeSTRING            ColumnArrayDataType = "STRING"
	ColumnArrayDataTypeSTRUCT            ColumnArrayDataType = "STRUCT"
	ColumnArrayDataTypeSUPER             ColumnArrayDataType = "SUPER"
	ColumnArrayDataTypeTABLE             ColumnArrayDataType = "TABLE"
	ColumnArrayDataTypeTEXT              ColumnArrayDataType = "TEXT"
	ColumnArrayDataTypeTIME              ColumnArrayDataType = "TIME"
	ColumnArrayDataTypeTIMESTAMP         ColumnArrayDataType = "TIMESTAMP"
	ColumnArrayDataTypeTIMESTAMPZ        ColumnArrayDataType = "TIMESTAMPZ"
	ColumnArrayDataTypeTINYINT           ColumnArrayDataType = "TINYINT"
	ColumnArrayDataTypeTSQUERY           ColumnArrayDataType = "TSQUERY"
	ColumnArrayDataTypeTSVECTOR          ColumnArrayDataType = "TSVECTOR"
	ColumnArrayDataTypeTUPLE             ColumnArrayDataType = "TUPLE"
	ColumnArrayDataTypeTXIDSNAPSHOT      ColumnArrayDataType = "TXID_SNAPSHOT"
	ColumnArrayDataTypeUINT              ColumnArrayDataType = "UINT"
	ColumnArrayDataTypeUNION             ColumnArrayDataType = "UNION"
	ColumnArrayDataTypeUNKNOWN           ColumnArrayDataType = "UNKNOWN"
	ColumnArrayDataTypeUUID              ColumnArrayDataType = "UUID"
	ColumnArrayDataTypeVARBINARY         ColumnArrayDataType = "VARBINARY"
	ColumnArrayDataTypeVARCHAR           ColumnArrayDataType = "VARCHAR"
	ColumnArrayDataTypeVARIANT           ColumnArrayDataType = "VARIANT"
	ColumnArrayDataTypeXML               ColumnArrayDataType = "XML"
	ColumnArrayDataTypeYEAR              ColumnArrayDataType = "YEAR"
)

// Defines values for ColumnConstraint.
const (
	ColumnConstraintNOTNULL    ColumnConstraint = "NOT_NULL"
	ColumnConstraintNULL       ColumnConstraint = "NULL"
	ColumnConstraintPRIMARYKEY ColumnConstraint = "PRIMARY_KEY"
	ColumnConstraintUNIQUE     ColumnConstraint = "UNIQUE"
)

// Defines values for ColumnDataType.
const (
	ColumnDataTypeAGGREGATEFUNCTION ColumnDataType = "AGGREGATEFUNCTION"
	ColumnDataTypeAGGSTATE          ColumnDataType = "AGG_STATE"
	ColumnDataTypeARRAY             ColumnDataType = "ARRAY"
	ColumnDataTypeBIGINT            ColumnDataType = "BIGINT"
	ColumnDataTypeBINARY            ColumnDataType = "BINARY"
	ColumnDataTypeBIT               ColumnDataType = "BIT"
	ColumnDataTypeBITMAP            ColumnDataType = "BITMAP"
	ColumnDataTypeBLOB              ColumnDataType = "BLOB"
	ColumnDataTypeBOOLEAN           ColumnDataType = "BOOLEAN"
	ColumnDataTypeBYTEA             ColumnDataType = "BYTEA"
	ColumnDataTypeBYTEINT           ColumnDataType = "BYTEINT"
	ColumnDataTypeBYTES             ColumnDataType = "BYTES"
	ColumnDataTypeCHAR              ColumnDataType = "CHAR"
	ColumnDataTypeCIDR              ColumnDataType = "CIDR"
	ColumnDataTypeCLOB              ColumnDataType = "CLOB"
	ColumnDataTypeDATE              ColumnDataType = "DATE"
	ColumnDataTypeDATETIME          ColumnDataType = "DATETIME"
	ColumnDataTypeDATETIMERANGE     ColumnDataType = "DATETIMERANGE"
	ColumnDataTypeDECIMAL           ColumnDataType = "DECIMAL"
	ColumnDataTypeDOUBLE            ColumnDataType = "DOUBLE"
	ColumnDataTypeENUM              ColumnDataType = "ENUM"
	ColumnDataTypeERROR             ColumnDataType = "ERROR"
	ColumnDataTypeFIXED             ColumnDataType = "FIXED"
	ColumnDataTypeFLOAT             ColumnDataType = "FLOAT"
	ColumnDataTypeGEOGRAPHY         ColumnDataType = "GEOGRAPHY"
	ColumnDataTypeGEOMETRY          ColumnDataType = "GEOMETRY"
	ColumnDataTypeHLL               ColumnDataType = "HLL"
	ColumnDataTypeHLLSKETCH         ColumnDataType = "HLLSKETCH"
	ColumnDataTypeIMAGE             ColumnDataType = "IMAGE"
	ColumnDataTypeINET              ColumnDataType = "INET"
	ColumnDataTypeINT               ColumnDataType = "INT"
	ColumnDataTypeINTERVAL          ColumnDataType = "INTERVAL"
	ColumnDataTypeIPV4              ColumnDataType = "IPV4"
	ColumnDataTypeIPV6              ColumnDataType = "IPV6"
	ColumnDataTypeJSON              ColumnDataType = "JSON"
	ColumnDataTypeLARGEINT          ColumnDataType = "LARGEINT"
	ColumnDataTypeLONG              ColumnDataType = "LONG"
	ColumnDataTypeLONGBLOB          ColumnDataType = "LONGBLOB"
	ColumnDataTypeLOWCARDINALITY    ColumnDataType = "LOWCARDINALITY"
	ColumnDataTypeMACADDR           ColumnDataType = "MACADDR"
	ColumnDataTypeMAP               ColumnDataType = "MAP"
	ColumnDataTypeMEASUREHIDDEN     ColumnDataType = "MEASURE HIDDEN"
	ColumnDataTypeMEASUREVISIBLE    ColumnDataType = "MEASURE VISIBLE"
	ColumnDataTypeMEDIUMBLOB        ColumnDataType = "MEDIUMBLOB"
	ColumnDataTypeMEDIUMTEXT        ColumnDataType = "MEDIUMTEXT"
	ColumnDataTypeMONEY             ColumnDataType = "MONEY"
	ColumnDataTypeNTEXT             ColumnDataType = "NTEXT"
	ColumnDataTypeNULL              ColumnDataType = "NULL"
	ColumnDataTypeNUMBER            ColumnDataType = "NUMBER"
	ColumnDataTypeNUMERIC           ColumnDataType = "NUMERIC"
	ColumnDataTypePGLSN             ColumnDataType = "PG_LSN"
	ColumnDataTypePGSNAPSHOT        ColumnDataType = "PG_SNAPSHOT"
	ColumnDataTypePOINT             ColumnDataType = "POINT"
	ColumnDataTypePOLYGON           ColumnDataType = "POLYGON"
	ColumnDataTypeQUANTILESTATE     ColumnDataType = "QUANTILE_STATE"
	ColumnDataTypeRECORD            ColumnDataType = "RECORD"
	ColumnDataTypeROWID             ColumnDataType = "ROWID"
	ColumnDataTypeSET               ColumnDataType = "SET"
	ColumnDataTypeSMALLINT          ColumnDataType = "SMALLINT"
	ColumnDataTypeSPATIAL           ColumnDataType = "SPATIAL"
	ColumnDataTypeSTRING            ColumnDataType = "STRING"
	ColumnDataTypeSTRUCT            ColumnDataType = "STRUCT"
	ColumnDataTypeSUPER             ColumnDataType = "SUPER"
	ColumnDataTypeTABLE             ColumnDataType = "TABLE"
	ColumnDataTypeTEXT              ColumnDataType = "TEXT"
	ColumnDataTypeTIME              ColumnDataType = "TIME"
	ColumnDataTypeTIMESTAMP         ColumnDataType = "TIMESTAMP"
	ColumnDataTypeTIMESTAMPZ        ColumnDataType = "TIMESTAMPZ"
	ColumnDataTypeTINYINT           ColumnDataType = "TINYINT"
	ColumnDataTypeTSQUERY           ColumnDataType = "TSQUERY"
	ColumnDataTypeTSVECTOR          ColumnDataType = "TSVECTOR"
	ColumnDataTypeTUPLE             ColumnDataType = "TUPLE"
	ColumnDataTypeTXIDSNAPSHOT      ColumnDataType = "TXID_SNAPSHOT"
	ColumnDataTypeUINT              ColumnDataType = "UINT"
	ColumnDataTypeUNION             ColumnDataType = "UNION"
	ColumnDataTypeUNKNOWN           ColumnDataType = "UNKNOWN"
	ColumnDataTypeUUID              ColumnDataType = "UUID"
	ColumnDataTypeVARBINARY         ColumnDataType = "VARBINARY"
	ColumnDataTypeVARCHAR           ColumnDataType = "VARCHAR"
	ColumnDataTypeVARIANT           ColumnDataType = "VARIANT"
	ColumnDataTypeXML               ColumnDataType = "XML"
	ColumnDataTypeYEAR              ColumnDataType = "YEAR"
)

// Defines values for ContainerFileFormats.
const (
	ContainerFileFormatsAvro    ContainerFileFormats = "avro"
	ContainerFileFormatsCsv     ContainerFileFormats = "csv"
	ContainerFileFormatsGz      ContainerFileFormats = "gz"
	ContainerFileFormatsJson    ContainerFileFormats = "json"
	ContainerFileFormatsParquet ContainerFileFormats = "parquet"
	ContainerFileFormatsTsv     ContainerFileFormats = "tsv"
	ContainerFileFormatsZip     ContainerFileFormats = "zip"
	ContainerFileFormatsZstd    ContainerFileFormats = "zstd"
)

// Defines values for ContainerProvider.
const (
	ContainerProviderSystem ContainerProvider = "system"
	ContainerProviderUser   ContainerProvider = "user"
)

// Defines values for ContainerServiceType.
const (
	ContainerServiceTypeADLS          ContainerServiceType = "ADLS"
	ContainerServiceTypeCustomStorage ContainerServiceType = "CustomStorage"
	ContainerServiceTypeGCS           ContainerServiceType = "GCS"
	ContainerServiceTypeS3            ContainerServiceType = "S3"
)

// Defines values for CreateAPIEndpointRequestMethod.
const (
	CreateAPIEndpointRequestMethodCONNECT CreateAPIEndpointRequestMethod = "CONNECT"
	CreateAPIEndpointRequestMethodDELETE  CreateAPIEndpointRequestMethod = "DELETE"
	CreateAPIEndpointRequestMethodGET     CreateAPIEndpointRequestMethod = "GET"
	CreateAPIEndpointRequestMethodHEAD    CreateAPIEndpointRequestMethod = "HEAD"
	CreateAPIEndpointRequestMethodOPTIONS CreateAPIEndpointRequestMethod = "OPTIONS"
	CreateAPIEndpointRequestMethodPATCH   CreateAPIEndpointRequestMethod = "PATCH"
	CreateAPIEndpointRequestMethodPOST    CreateAPIEndpointRequestMethod = "POST"
	CreateAPIEndpointRequestMethodPUT     CreateAPIEndpointRequestMethod = "PUT"
	CreateAPIEndpointRequestMethodTRACE   CreateAPIEndpointRequestMethod = "TRACE"
)

// Defines values for CreateApiServiceServiceType.
const (
	CreateApiServiceServiceTypeRest    CreateApiServiceServiceType = "Rest"
	CreateApiServiceServiceTypeWEBHOOK CreateApiServiceServiceType = "WEBHOOK"
)

// Defines values for CreateAppMarketPlaceDefinitionReqAgentType.
const (
	CreateAppMarketPlaceDefinitionReqAgentTypeCollateAI CreateAppMarketPlaceDefinitionReqAgentType = "CollateAI"
	CreateAppMarketPlaceDefinitionReqAgentTypeMetadata  CreateAppMarketPlaceDefinitionReqAgentType = "Metadata"
)

// Defines values for CreateAppMarketPlaceDefinitionReqAppType.
const (
	CreateAppMarketPlaceDefinitionReqAppTypeExternal CreateAppMarketPlaceDefinitionReqAppType = "external"
	CreateAppMarketPlaceDefinitionReqAppTypeInternal CreateAppMarketPlaceDefinitionReqAppType = "internal"
)

// Defines values for CreateAppMarketPlaceDefinitionReqPermission.
const (
	CreateAppMarketPlaceDefinitionReqPermissionAll CreateAppMarketPlaceDefinitionReqPermission = "All"
)

// Defines values for CreateAppMarketPlaceDefinitionReqScheduleType.
const (
	CreateAppMarketPlaceDefinitionReqScheduleTypeLive              CreateAppMarketPlaceDefinitionReqScheduleType = "Live"
	CreateAppMarketPlaceDefinitionReqScheduleTypeNoSchedule        CreateAppMarketPlaceDefinitionReqScheduleType = "NoSchedule"
	CreateAppMarketPlaceDefinitionReqScheduleTypeScheduled         CreateAppMarketPlaceDefinitionReqScheduleType = "Scheduled"
	CreateAppMarketPlaceDefinitionReqScheduleTypeScheduledOrManual CreateAppMarketPlaceDefinitionReqScheduleType = "ScheduledOrManual"
)

// Defines values for CreateBotProvider.
const (
	CreateBotProviderSystem CreateBotProvider = "system"
	CreateBotProviderUser   CreateBotProvider = "user"
)

// Defines values for CreateChartChartType.
const (
	CreateChartChartTypeArea      CreateChartChartType = "Area"
	CreateChartChartTypeBar       CreateChartChartType = "Bar"
	CreateChartChartTypeBoxPlot   CreateChartChartType = "BoxPlot"
	CreateChartChartTypeHistogram CreateChartChartType = "Histogram"
	CreateChartChartTypeLine      CreateChartChartType = "Line"
	CreateChartChartTypeOther     CreateChartChartType = "Other"
	CreateChartChartTypePie       CreateChartChartType = "Pie"
	CreateChartChartTypeScatter   CreateChartChartType = "Scatter"
	CreateChartChartTypeTable     CreateChartChartType = "Table"
	CreateChartChartTypeText      CreateChartChartType = "Text"
)

// Defines values for CreateClassificationProvider.
const (
	CreateClassificationProviderSystem CreateClassificationProvider = "system"
	CreateClassificationProviderUser   CreateClassificationProvider = "user"
)

// Defines values for CreateContainerFileFormats.
const (
	CreateContainerFileFormatsAvro    CreateContainerFileFormats = "avro"
	CreateContainerFileFormatsCsv     CreateContainerFileFormats = "csv"
	CreateContainerFileFormatsGz      CreateContainerFileFormats = "gz"
	CreateContainerFileFormatsJson    CreateContainerFileFormats = "json"
	CreateContainerFileFormatsParquet CreateContainerFileFormats = "parquet"
	CreateContainerFileFormatsTsv     CreateContainerFileFormats = "tsv"
	CreateContainerFileFormatsZip     CreateContainerFileFormats = "zip"
	CreateContainerFileFormatsZstd    CreateContainerFileFormats = "zstd"
)

// Defines values for CreateDashboardDashboardType.
const (
	CreateDashboardDashboardTypeDashboard CreateDashboardDashboardType = "Dashboard"
	CreateDashboardDashboardTypeReport    CreateDashboardDashboardType = "Report"
)

// Defines values for CreateDashboardDataModelDataModelType.
const (
	CreateDashboardDataModelDataModelTypeLookMlExplore              CreateDashboardDataModelDataModelType = "LookMlExplore"
	CreateDashboardDataModelDataModelTypeLookMlView                 CreateDashboardDataModelDataModelType = "LookMlView"
	CreateDashboardDataModelDataModelTypeMetabaseDataModel          CreateDashboardDataModelDataModelType = "MetabaseDataModel"
	CreateDashboardDataModelDataModelTypePowerBIDataModel           CreateDashboardDataModelDataModelType = "PowerBIDataModel"
	CreateDashboardDataModelDataModelTypeQlikDataModel              CreateDashboardDataModelDataModelType = "QlikDataModel"
	CreateDashboardDataModelDataModelTypeQuickSightDataModel        CreateDashboardDataModelDataModelType = "QuickSightDataModel"
	CreateDashboardDataModelDataModelTypeSigmaDataModel             CreateDashboardDataModelDataModelType = "SigmaDataModel"
	CreateDashboardDataModelDataModelTypeSupersetDataModel          CreateDashboardDataModelDataModelType = "SupersetDataModel"
	CreateDashboardDataModelDataModelTypeTableauDataModel           CreateDashboardDataModelDataModelType = "TableauDataModel"
	CreateDashboardDataModelDataModelTypeTableauEmbeddedDatasource  CreateDashboardDataModelDataModelType = "TableauEmbeddedDatasource"
	CreateDashboardDataModelDataModelTypeTableauPublishedDatasource CreateDashboardDataModelDataModelType = "TableauPublishedDatasource"
)

// Defines values for CreateDashboardDataModelServiceType.
const (
	CreateDashboardDataModelServiceTypeCustomDashboard     CreateDashboardDataModelServiceType = "CustomDashboard"
	CreateDashboardDataModelServiceTypeDomoDashboard       CreateDashboardDataModelServiceType = "DomoDashboard"
	CreateDashboardDataModelServiceTypeLightdash           CreateDashboardDataModelServiceType = "Lightdash"
	CreateDashboardDataModelServiceTypeLooker              CreateDashboardDataModelServiceType = "Looker"
	CreateDashboardDataModelServiceTypeMetabase            CreateDashboardDataModelServiceType = "Metabase"
	CreateDashboardDataModelServiceTypeMicroStrategy       CreateDashboardDataModelServiceType = "MicroStrategy"
	CreateDashboardDataModelServiceTypeMode                CreateDashboardDataModelServiceType = "Mode"
	CreateDashboardDataModelServiceTypePowerBI             CreateDashboardDataModelServiceType = "PowerBI"
	CreateDashboardDataModelServiceTypePowerBIReportServer CreateDashboardDataModelServiceType = "PowerBIReportServer"
	CreateDashboardDataModelServiceTypeQlikCloud           CreateDashboardDataModelServiceType = "QlikCloud"
	CreateDashboardDataModelServiceTypeQlikSense           CreateDashboardDataModelServiceType = "QlikSense"
	CreateDashboardDataModelServiceTypeQuickSight          CreateDashboardDataModelServiceType = "QuickSight"
	CreateDashboardDataModelServiceTypeRedash              CreateDashboardDataModelServiceType = "Redash"
	CreateDashboardDataModelServiceTypeSigma               CreateDashboardDataModelServiceType = "Sigma"
	CreateDashboardDataModelServiceTypeSuperset            CreateDashboardDataModelServiceType = "Superset"
	CreateDashboardDataModelServiceTypeTableau             CreateDashboardDataModelServiceType = "Tableau"
)

// Defines values for CreateDashboardServiceServiceType.
const (
	CreateDashboardServiceServiceTypeCustomDashboard     CreateDashboardServiceServiceType = "CustomDashboard"
	CreateDashboardServiceServiceTypeDomoDashboard       CreateDashboardServiceServiceType = "DomoDashboard"
	CreateDashboardServiceServiceTypeLightdash           CreateDashboardServiceServiceType = "Lightdash"
	CreateDashboardServiceServiceTypeLooker              CreateDashboardServiceServiceType = "Looker"
	CreateDashboardServiceServiceTypeMetabase            CreateDashboardServiceServiceType = "Metabase"
	CreateDashboardServiceServiceTypeMicroStrategy       CreateDashboardServiceServiceType = "MicroStrategy"
	CreateDashboardServiceServiceTypeMode                CreateDashboardServiceServiceType = "Mode"
	CreateDashboardServiceServiceTypePowerBI             CreateDashboardServiceServiceType = "PowerBI"
	CreateDashboardServiceServiceTypePowerBIReportServer CreateDashboardServiceServiceType = "PowerBIReportServer"
	CreateDashboardServiceServiceTypeQlikCloud           CreateDashboardServiceServiceType = "QlikCloud"
	CreateDashboardServiceServiceTypeQlikSense           CreateDashboardServiceServiceType = "QlikSense"
	CreateDashboardServiceServiceTypeQuickSight          CreateDashboardServiceServiceType = "QuickSight"
	CreateDashboardServiceServiceTypeRedash              CreateDashboardServiceServiceType = "Redash"
	CreateDashboardServiceServiceTypeSigma               CreateDashboardServiceServiceType = "Sigma"
	CreateDashboardServiceServiceTypeSuperset            CreateDashboardServiceServiceType = "Superset"
	CreateDashboardServiceServiceTypeTableau             CreateDashboardServiceServiceType = "Tableau"
)

// Defines values for CreateDatabaseServiceServiceType.
const (
	CreateDatabaseServiceServiceTypeAthena         CreateDatabaseServiceServiceType = "Athena"
	CreateDatabaseServiceServiceTypeAzureSQL       CreateDatabaseServiceServiceType = "AzureSQL"
	CreateDatabaseServiceServiceTypeBigQuery       CreateDatabaseServiceServiceType = "BigQuery"
	CreateDatabaseServiceServiceTypeBigTable       CreateDatabaseServiceServiceType = "BigTable"
	CreateDatabaseServiceServiceTypeCassandra      CreateDatabaseServiceServiceType = "Cassandra"
	CreateDatabaseServiceServiceTypeClickhouse     CreateDatabaseServiceServiceType = "Clickhouse"
	CreateDatabaseServiceServiceTypeCockroach      CreateDatabaseServiceServiceType = "Cockroach"
	CreateDatabaseServiceServiceTypeCouchbase      CreateDatabaseServiceServiceType = "Couchbase"
	CreateDatabaseServiceServiceTypeCustomDatabase CreateDatabaseServiceServiceType = "CustomDatabase"
	CreateDatabaseServiceServiceTypeDatabricks     CreateDatabaseServiceServiceType = "Databricks"
	CreateDatabaseServiceServiceTypeDatalake       CreateDatabaseServiceServiceType = "Datalake"
	CreateDatabaseServiceServiceTypeDb2            CreateDatabaseServiceServiceType = "Db2"
	CreateDatabaseServiceServiceTypeDbt            CreateDatabaseServiceServiceType = "Dbt"
	CreateDatabaseServiceServiceTypeDeltaLake      CreateDatabaseServiceServiceType = "DeltaLake"
	CreateDatabaseServiceServiceTypeDomoDatabase   CreateDatabaseServiceServiceType = "DomoDatabase"
	CreateDatabaseServiceServiceTypeDoris          CreateDatabaseServiceServiceType = "Doris"
	CreateDatabaseServiceServiceTypeDruid          CreateDatabaseServiceServiceType = "Druid"
	CreateDatabaseServiceServiceTypeDynamoDB       CreateDatabaseServiceServiceType = "DynamoDB"
	CreateDatabaseServiceServiceTypeExasol         CreateDatabaseServiceServiceType = "Exasol"
	CreateDatabaseServiceServiceTypeGlue           CreateDatabaseServiceServiceType = "Glue"
	CreateDatabaseServiceServiceTypeGreenplum      CreateDatabaseServiceServiceType = "Greenplum"
	CreateDatabaseServiceServiceTypeHive           CreateDatabaseServiceServiceType = "Hive"
	CreateDatabaseServiceServiceTypeIceberg        CreateDatabaseServiceServiceType = "Iceberg"
	CreateDatabaseServiceServiceTypeImpala         CreateDatabaseServiceServiceType = "Impala"
	CreateDatabaseServiceServiceTypeMariaDB        CreateDatabaseServiceServiceType = "MariaDB"
	CreateDatabaseServiceServiceTypeMongoDB        CreateDatabaseServiceServiceType = "MongoDB"
	CreateDatabaseServiceServiceTypeMssql          CreateDatabaseServiceServiceType = "Mssql"
	CreateDatabaseServiceServiceTypeMysql          CreateDatabaseServiceServiceType = "Mysql"
	CreateDatabaseServiceServiceTypeOracle         CreateDatabaseServiceServiceType = "Oracle"
	CreateDatabaseServiceServiceTypePinotDB        CreateDatabaseServiceServiceType = "PinotDB"
	CreateDatabaseServiceServiceTypePostgres       CreateDatabaseServiceServiceType = "Postgres"
	CreateDatabaseServiceServiceTypePresto         CreateDatabaseServiceServiceType = "Presto"
	CreateDatabaseServiceServiceTypeQueryLog       CreateDatabaseServiceServiceType = "QueryLog"
	CreateDatabaseServiceServiceTypeRedshift       CreateDatabaseServiceServiceType = "Redshift"
	CreateDatabaseServiceServiceTypeSAS            CreateDatabaseServiceServiceType = "SAS"
	CreateDatabaseServiceServiceTypeSQLite         CreateDatabaseServiceServiceType = "SQLite"
	CreateDatabaseServiceServiceTypeSalesforce     CreateDatabaseServiceServiceType = "Salesforce"
	CreateDatabaseServiceServiceTypeSapErp         CreateDatabaseServiceServiceType = "SapErp"
	CreateDatabaseServiceServiceTypeSapHana        CreateDatabaseServiceServiceType = "SapHana"
	CreateDatabaseServiceServiceTypeSingleStore    CreateDatabaseServiceServiceType = "SingleStore"
	CreateDatabaseServiceServiceTypeSnowflake      CreateDatabaseServiceServiceType = "Snowflake"
	CreateDatabaseServiceServiceTypeSynapse        CreateDatabaseServiceServiceType = "Synapse"
	CreateDatabaseServiceServiceTypeTeradata       CreateDatabaseServiceServiceType = "Teradata"
	CreateDatabaseServiceServiceTypeTrino          CreateDatabaseServiceServiceType = "Trino"
	CreateDatabaseServiceServiceTypeUnityCatalog   CreateDatabaseServiceServiceType = "UnityCatalog"
	CreateDatabaseServiceServiceTypeVertica        CreateDatabaseServiceServiceType = "Vertica"
)

// Defines values for CreateDomainDomainType.
const (
	CreateDomainDomainTypeAggregate       CreateDomainDomainType = "Aggregate"
	CreateDomainDomainTypeConsumerAligned CreateDomainDomainType = "Consumer-aligned"
	CreateDomainDomainTypeSourceAligned   CreateDomainDomainType = "Source-aligned"
)

// Defines values for CreateEventSubscriptionAlertType.
const (
	CreateEventSubscriptionAlertTypeActivityFeed                  CreateEventSubscriptionAlertType = "ActivityFeed"
	CreateEventSubscriptionAlertTypeCustom                        CreateEventSubscriptionAlertType = "Custom"
	CreateEventSubscriptionAlertTypeGovernanceWorkflowChangeEvent CreateEventSubscriptionAlertType = "GovernanceWorkflowChangeEvent"
	CreateEventSubscriptionAlertTypeNotification                  CreateEventSubscriptionAlertType = "Notification"
	CreateEventSubscriptionAlertTypeObservability                 CreateEventSubscriptionAlertType = "Observability"
)

// Defines values for CreateEventSubscriptionProvider.
const (
	CreateEventSubscriptionProviderSystem CreateEventSubscriptionProvider = "system"
	CreateEventSubscriptionProviderUser   CreateEventSubscriptionProvider = "user"
)

// Defines values for CreateGlossaryProvider.
const (
	CreateGlossaryProviderSystem CreateGlossaryProvider = "system"
	CreateGlossaryProviderUser   CreateGlossaryProvider = "user"
)

// Defines values for CreateGlossaryTermProvider.
const (
	CreateGlossaryTermProviderSystem CreateGlossaryTermProvider = "system"
	CreateGlossaryTermProviderUser   CreateGlossaryTermProvider = "user"
)

// Defines values for CreateIngestionPipelineLoggerLevel.
const (
	CreateIngestionPipelineLoggerLevelDEBUG CreateIngestionPipelineLoggerLevel = "DEBUG"
	CreateIngestionPipelineLoggerLevelERROR CreateIngestionPipelineLoggerLevel = "ERROR"
	CreateIngestionPipelineLoggerLevelINFO  CreateIngestionPipelineLoggerLevel = "INFO"
	CreateIngestionPipelineLoggerLevelWARN  CreateIngestionPipelineLoggerLevel = "WARN"
)

// Defines values for CreateIngestionPipelinePipelineType.
const (
	CreateIngestionPipelinePipelineTypeApplication          CreateIngestionPipelinePipelineType = "application"
	CreateIngestionPipelinePipelineTypeAutoClassification   CreateIngestionPipelinePipelineType = "autoClassification"
	CreateIngestionPipelinePipelineTypeDataInsight          CreateIngestionPipelinePipelineType = "dataInsight"
	CreateIngestionPipelinePipelineTypeDbt                  CreateIngestionPipelinePipelineType = "dbt"
	CreateIngestionPipelinePipelineTypeElasticSearchReindex CreateIngestionPipelinePipelineType = "elasticSearchReindex"
	CreateIngestionPipelinePipelineTypeLineage              CreateIngestionPipelinePipelineType = "lineage"
	CreateIngestionPipelinePipelineTypeMetadata             CreateIngestionPipelinePipelineType = "metadata"
	CreateIngestionPipelinePipelineTypeProfiler             CreateIngestionPipelinePipelineType = "profiler"
	CreateIngestionPipelinePipelineTypeTestSuite            CreateIngestionPipelinePipelineType = "TestSuite"
	CreateIngestionPipelinePipelineTypeUsage                CreateIngestionPipelinePipelineType = "usage"
)

// Defines values for CreateMessagingServiceServiceType.
const (
	CreateMessagingServiceServiceTypeCustomMessaging CreateMessagingServiceServiceType = "CustomMessaging"
	CreateMessagingServiceServiceTypeKafka           CreateMessagingServiceServiceType = "Kafka"
	CreateMessagingServiceServiceTypeKinesis         CreateMessagingServiceServiceType = "Kinesis"
	CreateMessagingServiceServiceTypeRedpanda        CreateMessagingServiceServiceType = "Redpanda"
)

// Defines values for CreateMetadataServiceServiceType.
const (
	CreateMetadataServiceServiceTypeAlation      CreateMetadataServiceServiceType = "Alation"
	CreateMetadataServiceServiceTypeAlationSink  CreateMetadataServiceServiceType = "AlationSink"
	CreateMetadataServiceServiceTypeAmundsen     CreateMetadataServiceServiceType = "Amundsen"
	CreateMetadataServiceServiceTypeAtlas        CreateMetadataServiceServiceType = "Atlas"
	CreateMetadataServiceServiceTypeMetadataES   CreateMetadataServiceServiceType = "MetadataES"
	CreateMetadataServiceServiceTypeOpenMetadata CreateMetadataServiceServiceType = "OpenMetadata"
)

// Defines values for CreateMetricGranularity.
const (
	CreateMetricGranularityDAY     CreateMetricGranularity = "DAY"
	CreateMetricGranularityHOUR    CreateMetricGranularity = "HOUR"
	CreateMetricGranularityMINUTE  CreateMetricGranularity = "MINUTE"
	CreateMetricGranularityMONTH   CreateMetricGranularity = "MONTH"
	CreateMetricGranularityQUARTER CreateMetricGranularity = "QUARTER"
	CreateMetricGranularitySECOND  CreateMetricGranularity = "SECOND"
	CreateMetricGranularityWEEK    CreateMetricGranularity = "WEEK"
	CreateMetricGranularityYEAR    CreateMetricGranularity = "YEAR"
)

// Defines values for CreateMetricMetricType.
const (
	CreateMetricMetricTypeAVERAGE           CreateMetricMetricType = "AVERAGE"
	CreateMetricMetricTypeCOUNT             CreateMetricMetricType = "COUNT"
	CreateMetricMetricTypeMAX               CreateMetricMetricType = "MAX"
	CreateMetricMetricTypeMEDIAN            CreateMetricMetricType = "MEDIAN"
	CreateMetricMetricTypeMIN               CreateMetricMetricType = "MIN"
	CreateMetricMetricTypeMODE              CreateMetricMetricType = "MODE"
	CreateMetricMetricTypeOTHER             CreateMetricMetricType = "OTHER"
	CreateMetricMetricTypePERCENTAGE        CreateMetricMetricType = "PERCENTAGE"
	CreateMetricMetricTypeRATIO             CreateMetricMetricType = "RATIO"
	CreateMetricMetricTypeSTANDARDDEVIATION CreateMetricMetricType = "STANDARD_DEVIATION"
	CreateMetricMetricTypeSUM               CreateMetricMetricType = "SUM"
	CreateMetricMetricTypeVARIANCE          CreateMetricMetricType = "VARIANCE"
)

// Defines values for CreateMetricUnitOfMeasurement.
const (
	CreateMetricUnitOfMeasurementCOUNT        CreateMetricUnitOfMeasurement = "COUNT"
	CreateMetricUnitOfMeasurementDOLLARS      CreateMetricUnitOfMeasurement = "DOLLARS"
	CreateMetricUnitOfMeasurementEVENTS       CreateMetricUnitOfMeasurement = "EVENTS"
	CreateMetricUnitOfMeasurementPERCENTAGE   CreateMetricUnitOfMeasurement = "PERCENTAGE"
	CreateMetricUnitOfMeasurementREQUESTS     CreateMetricUnitOfMeasurement = "REQUESTS"
	CreateMetricUnitOfMeasurementSIZE         CreateMetricUnitOfMeasurement = "SIZE"
	CreateMetricUnitOfMeasurementTIMESTAMP    CreateMetricUnitOfMeasurement = "TIMESTAMP"
	CreateMetricUnitOfMeasurementTRANSACTIONS CreateMetricUnitOfMeasurement = "TRANSACTIONS"
)

// Defines values for CreateMlModelServiceServiceType.
const (
	CreateMlModelServiceServiceTypeCustomMlModel CreateMlModelServiceServiceType = "CustomMlModel"
	CreateMlModelServiceServiceTypeMlflow        CreateMlModelServiceServiceType = "Mlflow"
	CreateMlModelServiceServiceTypeSageMaker     CreateMlModelServiceServiceType = "SageMaker"
	CreateMlModelServiceServiceTypeSklearn       CreateMlModelServiceServiceType = "Sklearn"
	CreateMlModelServiceServiceTypeVertexAI      CreateMlModelServiceServiceType = "VertexAI"
)

// Defines values for CreatePersonalTokenJWTTokenExpiry.
const (
	CreatePersonalTokenJWTTokenExpiryN1        CreatePersonalTokenJWTTokenExpiry = "1"
	CreatePersonalTokenJWTTokenExpiryN30       CreatePersonalTokenJWTTokenExpiry = "30"
	CreatePersonalTokenJWTTokenExpiryN60       CreatePersonalTokenJWTTokenExpiry = "60"
	CreatePersonalTokenJWTTokenExpiryN7        CreatePersonalTokenJWTTokenExpiry = "7"
	CreatePersonalTokenJWTTokenExpiryN90       CreatePersonalTokenJWTTokenExpiry = "90"
	CreatePersonalTokenJWTTokenExpiryOneHour   CreatePersonalTokenJWTTokenExpiry = "OneHour"
	CreatePersonalTokenJWTTokenExpiryUnlimited CreatePersonalTokenJWTTokenExpiry = "Unlimited"
)

// Defines values for CreatePipelineState.
const (
	CreatePipelineStateActive   CreatePipelineState = "Active"
	CreatePipelineStateInactive CreatePipelineState = "Inactive"
)

// Defines values for CreatePipelineServiceServiceType.
const (
	CreatePipelineServiceServiceTypeAirbyte            CreatePipelineServiceServiceType = "Airbyte"
	CreatePipelineServiceServiceTypeAirflow            CreatePipelineServiceServiceType = "Airflow"
	CreatePipelineServiceServiceTypeCustomPipeline     CreatePipelineServiceServiceType = "CustomPipeline"
	CreatePipelineServiceServiceTypeDBTCloud           CreatePipelineServiceServiceType = "DBTCloud"
	CreatePipelineServiceServiceTypeDagster            CreatePipelineServiceServiceType = "Dagster"
	CreatePipelineServiceServiceTypeDataFactory        CreatePipelineServiceServiceType = "DataFactory"
	CreatePipelineServiceServiceTypeDatabricksPipeline CreatePipelineServiceServiceType = "DatabricksPipeline"
	CreatePipelineServiceServiceTypeDomoPipeline       CreatePipelineServiceServiceType = "DomoPipeline"
	CreatePipelineServiceServiceTypeFivetran           CreatePipelineServiceServiceType = "Fivetran"
	CreatePipelineServiceServiceTypeFlink              CreatePipelineServiceServiceType = "Flink"
	CreatePipelineServiceServiceTypeGluePipeline       CreatePipelineServiceServiceType = "GluePipeline"
	CreatePipelineServiceServiceTypeKafkaConnect       CreatePipelineServiceServiceType = "KafkaConnect"
	CreatePipelineServiceServiceTypeMatillion          CreatePipelineServiceServiceType = "Matillion"
	CreatePipelineServiceServiceTypeNifi               CreatePipelineServiceServiceType = "Nifi"
	CreatePipelineServiceServiceTypeOpenLineage        CreatePipelineServiceServiceType = "OpenLineage"
	CreatePipelineServiceServiceTypeSpark              CreatePipelineServiceServiceType = "Spark"
	CreatePipelineServiceServiceTypeSpline             CreatePipelineServiceServiceType = "Spline"
	CreatePipelineServiceServiceTypeStitch             CreatePipelineServiceServiceType = "Stitch"
	CreatePipelineServiceServiceTypeWherescape         CreatePipelineServiceServiceType = "Wherescape"
)

// Defines values for CreateSearchIndexIndexType.
const (
	CreateSearchIndexIndexTypeIndex         CreateSearchIndexIndexType = "Index"
	CreateSearchIndexIndexTypeIndexTemplate CreateSearchIndexIndexType = "IndexTemplate"
)

// Defines values for CreateSearchServiceServiceType.
const (
	CreateSearchServiceServiceTypeCustomSearch  CreateSearchServiceServiceType = "CustomSearch"
	CreateSearchServiceServiceTypeElasticSearch CreateSearchServiceServiceType = "ElasticSearch"
	CreateSearchServiceServiceTypeOpenSearch    CreateSearchServiceServiceType = "OpenSearch"
)

// Defines values for CreateStorageServiceServiceType.
const (
	CreateStorageServiceServiceTypeADLS          CreateStorageServiceServiceType = "ADLS"
	CreateStorageServiceServiceTypeCustomStorage CreateStorageServiceServiceType = "CustomStorage"
	CreateStorageServiceServiceTypeGCS           CreateStorageServiceServiceType = "GCS"
	CreateStorageServiceServiceTypeS3            CreateStorageServiceServiceType = "S3"
)

// Defines values for CreateStoredProcedureStoredProcedureType.
const (
	CreateStoredProcedureStoredProcedureTypeFunction        CreateStoredProcedureStoredProcedureType = "Function"
	CreateStoredProcedureStoredProcedureTypeStoredPackage   CreateStoredProcedureStoredProcedureType = "StoredPackage"
	CreateStoredProcedureStoredProcedureTypeStoredProcedure CreateStoredProcedureStoredProcedureType = "StoredProcedure"
	CreateStoredProcedureStoredProcedureTypeUDF             CreateStoredProcedureStoredProcedureType = "UDF"
)

// Defines values for CreateSuggestionType.
const (
	CreateSuggestionTypeSuggestDescription CreateSuggestionType = "SuggestDescription"
	CreateSuggestionTypeSuggestTagLabel    CreateSuggestionType = "SuggestTagLabel"
)

// Defines values for CreateTableFileFormat.
const (
	CreateTableFileFormatAvro     CreateTableFileFormat = "avro"
	CreateTableFileFormatCsv      CreateTableFileFormat = "csv"
	CreateTableFileFormatJson     CreateTableFileFormat = "json"
	CreateTableFileFormatJsonGz   CreateTableFileFormat = "json.gz"
	CreateTableFileFormatJsonZip  CreateTableFileFormat = "json.zip"
	CreateTableFileFormatJsonl    CreateTableFileFormat = "jsonl"
	CreateTableFileFormatJsonlGz  CreateTableFileFormat = "jsonl.gz"
	CreateTableFileFormatJsonlZip CreateTableFileFormat = "jsonl.zip"
	CreateTableFileFormatParquet  CreateTableFileFormat = "parquet"
	CreateTableFileFormatTsv      CreateTableFileFormat = "tsv"
)

// Defines values for CreateTableTableType.
const (
	CreateTableTableTypeDynamic          CreateTableTableType = "Dynamic"
	CreateTableTableTypeExternal         CreateTableTableType = "External"
	CreateTableTableTypeForeign          CreateTableTableType = "Foreign"
	CreateTableTableTypeIceberg          CreateTableTableType = "Iceberg"
	CreateTableTableTypeLocal            CreateTableTableType = "Local"
	CreateTableTableTypeMaterializedView CreateTableTableType = "MaterializedView"
	CreateTableTableTypePartitioned      CreateTableTableType = "Partitioned"
	CreateTableTableTypeRegular          CreateTableTableType = "Regular"
	CreateTableTableTypeSecureView       CreateTableTableType = "SecureView"
	CreateTableTableTypeStream           CreateTableTableType = "Stream"
	CreateTableTableTypeTransient        CreateTableTableType = "Transient"
	CreateTableTableTypeView             CreateTableTableType = "View"
)

// Defines values for CreateTagProvider.
const (
	CreateTagProviderSystem CreateTagProvider = "system"
	CreateTagProviderUser   CreateTagProvider = "user"
)

// Defines values for CreateTaskDetailsType.
const (
	CreateTaskDetailsTypeGeneric                          CreateTaskDetailsType = "Generic"
	CreateTaskDetailsTypeRequestApproval                  CreateTaskDetailsType = "RequestApproval"
	CreateTaskDetailsTypeRequestDescription               CreateTaskDetailsType = "RequestDescription"
	CreateTaskDetailsTypeRequestTag                       CreateTaskDetailsType = "RequestTag"
	CreateTaskDetailsTypeRequestTestCaseFailureResolution CreateTaskDetailsType = "RequestTestCaseFailureResolution"
	CreateTaskDetailsTypeUpdateDescription                CreateTaskDetailsType = "UpdateDescription"
	CreateTaskDetailsTypeUpdateTag                        CreateTaskDetailsType = "UpdateTag"
)

// Defines values for CreateTeamTeamType.
const (
	CreateTeamTeamTypeBusinessUnit CreateTeamTeamType = "BusinessUnit"
	CreateTeamTeamTypeDepartment   CreateTeamTeamType = "Department"
	CreateTeamTeamTypeDivision     CreateTeamTeamType = "Division"
	CreateTeamTeamTypeGroup        CreateTeamTeamType = "Group"
	CreateTeamTeamTypeOrganization CreateTeamTeamType = "Organization"
)

// Defines values for CreateTestCaseResolutionStatusSeverity.
const (
	CreateTestCaseResolutionStatusSeveritySeverity1 CreateTestCaseResolutionStatusSeverity = "Severity1"
	CreateTestCaseResolutionStatusSeveritySeverity2 CreateTestCaseResolutionStatusSeverity = "Severity2"
	CreateTestCaseResolutionStatusSeveritySeverity3 CreateTestCaseResolutionStatusSeverity = "Severity3"
	CreateTestCaseResolutionStatusSeveritySeverity4 CreateTestCaseResolutionStatusSeverity = "Severity4"
	CreateTestCaseResolutionStatusSeveritySeverity5 CreateTestCaseResolutionStatusSeverity = "Severity5"
)

// Defines values for CreateTestCaseResolutionStatusTestCaseResolutionStatusType.
const (
	CreateTestCaseResolutionStatusTestCaseResolutionStatusTypeAck      CreateTestCaseResolutionStatusTestCaseResolutionStatusType = "Ack"
	CreateTestCaseResolutionStatusTestCaseResolutionStatusTypeAssigned CreateTestCaseResolutionStatusTestCaseResolutionStatusType = "Assigned"
	CreateTestCaseResolutionStatusTestCaseResolutionStatusTypeNew      CreateTestCaseResolutionStatusTestCaseResolutionStatusType = "New"
	CreateTestCaseResolutionStatusTestCaseResolutionStatusTypeResolved CreateTestCaseResolutionStatusTestCaseResolutionStatusType = "Resolved"
)

// Defines values for CreateTestCaseResultTestCaseStatus.
const (
	CreateTestCaseResultTestCaseStatusAborted CreateTestCaseResultTestCaseStatus = "Aborted"
	CreateTestCaseResultTestCaseStatusFailed  CreateTestCaseResultTestCaseStatus = "Failed"
	CreateTestCaseResultTestCaseStatusQueued  CreateTestCaseResultTestCaseStatus = "Queued"
	CreateTestCaseResultTestCaseStatusSuccess CreateTestCaseResultTestCaseStatus = "Success"
)

// Defines values for CreateTestDefinitionEntityType.
const (
	CreateTestDefinitionEntityTypeCOLUMN CreateTestDefinitionEntityType = "COLUMN"
	CreateTestDefinitionEntityTypeTABLE  CreateTestDefinitionEntityType = "TABLE"
)

// Defines values for CreateTestDefinitionProvider.
const (
	CreateTestDefinitionProviderSystem CreateTestDefinitionProvider = "system"
	CreateTestDefinitionProviderUser   CreateTestDefinitionProvider = "user"
)

// Defines values for CreateTestDefinitionSupportedDataTypes.
const (
	CreateTestDefinitionSupportedDataTypesAGGREGATEFUNCTION CreateTestDefinitionSupportedDataTypes = "AGGREGATEFUNCTION"
	CreateTestDefinitionSupportedDataTypesAGGSTATE          CreateTestDefinitionSupportedDataTypes = "AGG_STATE"
	CreateTestDefinitionSupportedDataTypesARRAY             CreateTestDefinitionSupportedDataTypes = "ARRAY"
	CreateTestDefinitionSupportedDataTypesBIGINT            CreateTestDefinitionSupportedDataTypes = "BIGINT"
	CreateTestDefinitionSupportedDataTypesBINARY            CreateTestDefinitionSupportedDataTypes = "BINARY"
	CreateTestDefinitionSupportedDataTypesBIT               CreateTestDefinitionSupportedDataTypes = "BIT"
	CreateTestDefinitionSupportedDataTypesBITMAP            CreateTestDefinitionSupportedDataTypes = "BITMAP"
	CreateTestDefinitionSupportedDataTypesBLOB              CreateTestDefinitionSupportedDataTypes = "BLOB"
	CreateTestDefinitionSupportedDataTypesBOOLEAN           CreateTestDefinitionSupportedDataTypes = "BOOLEAN"
	CreateTestDefinitionSupportedDataTypesBYTEA             CreateTestDefinitionSupportedDataTypes = "BYTEA"
	CreateTestDefinitionSupportedDataTypesBYTEINT           CreateTestDefinitionSupportedDataTypes = "BYTEINT"
	CreateTestDefinitionSupportedDataTypesBYTES             CreateTestDefinitionSupportedDataTypes = "BYTES"
	CreateTestDefinitionSupportedDataTypesCHAR              CreateTestDefinitionSupportedDataTypes = "CHAR"
	CreateTestDefinitionSupportedDataTypesCIDR              CreateTestDefinitionSupportedDataTypes = "CIDR"
	CreateTestDefinitionSupportedDataTypesCLOB              CreateTestDefinitionSupportedDataTypes = "CLOB"
	CreateTestDefinitionSupportedDataTypesDATE              CreateTestDefinitionSupportedDataTypes = "DATE"
	CreateTestDefinitionSupportedDataTypesDATETIME          CreateTestDefinitionSupportedDataTypes = "DATETIME"
	CreateTestDefinitionSupportedDataTypesDATETIMERANGE     CreateTestDefinitionSupportedDataTypes = "DATETIMERANGE"
	CreateTestDefinitionSupportedDataTypesDECIMAL           CreateTestDefinitionSupportedDataTypes = "DECIMAL"
	CreateTestDefinitionSupportedDataTypesDOUBLE            CreateTestDefinitionSupportedDataTypes = "DOUBLE"
	CreateTestDefinitionSupportedDataTypesENUM              CreateTestDefinitionSupportedDataTypes = "ENUM"
	CreateTestDefinitionSupportedDataTypesERROR             CreateTestDefinitionSupportedDataTypes = "ERROR"
	CreateTestDefinitionSupportedDataTypesFIXED             CreateTestDefinitionSupportedDataTypes = "FIXED"
	CreateTestDefinitionSupportedDataTypesFLOAT             CreateTestDefinitionSupportedDataTypes = "FLOAT"
	CreateTestDefinitionSupportedDataTypesGEOGRAPHY         CreateTestDefinitionSupportedDataTypes = "GEOGRAPHY"
	CreateTestDefinitionSupportedDataTypesGEOMETRY          CreateTestDefinitionSupportedDataTypes = "GEOMETRY"
	CreateTestDefinitionSupportedDataTypesHLL               CreateTestDefinitionSupportedDataTypes = "HLL"
	CreateTestDefinitionSupportedDataTypesHLLSKETCH         CreateTestDefinitionSupportedDataTypes = "HLLSKETCH"
	CreateTestDefinitionSupportedDataTypesIMAGE             CreateTestDefinitionSupportedDataTypes = "IMAGE"
	CreateTestDefinitionSupportedDataTypesINET              CreateTestDefinitionSupportedDataTypes = "INET"
	CreateTestDefinitionSupportedDataTypesINT               CreateTestDefinitionSupportedDataTypes = "INT"
	CreateTestDefinitionSupportedDataTypesINTERVAL          CreateTestDefinitionSupportedDataTypes = "INTERVAL"
	CreateTestDefinitionSupportedDataTypesIPV4              CreateTestDefinitionSupportedDataTypes = "IPV4"
	CreateTestDefinitionSupportedDataTypesIPV6              CreateTestDefinitionSupportedDataTypes = "IPV6"
	CreateTestDefinitionSupportedDataTypesJSON              CreateTestDefinitionSupportedDataTypes = "JSON"
	CreateTestDefinitionSupportedDataTypesLARGEINT          CreateTestDefinitionSupportedDataTypes = "LARGEINT"
	CreateTestDefinitionSupportedDataTypesLONG              CreateTestDefinitionSupportedDataTypes = "LONG"
	CreateTestDefinitionSupportedDataTypesLONGBLOB          CreateTestDefinitionSupportedDataTypes = "LONGBLOB"
	CreateTestDefinitionSupportedDataTypesLOWCARDINALITY    CreateTestDefinitionSupportedDataTypes = "LOWCARDINALITY"
	CreateTestDefinitionSupportedDataTypesMACADDR           CreateTestDefinitionSupportedDataTypes = "MACADDR"
	CreateTestDefinitionSupportedDataTypesMAP               CreateTestDefinitionSupportedDataTypes = "MAP"
	CreateTestDefinitionSupportedDataTypesMEASUREHIDDEN     CreateTestDefinitionSupportedDataTypes = "MEASURE HIDDEN"
	CreateTestDefinitionSupportedDataTypesMEASUREVISIBLE    CreateTestDefinitionSupportedDataTypes = "MEASURE VISIBLE"
	CreateTestDefinitionSupportedDataTypesMEDIUMBLOB        CreateTestDefinitionSupportedDataTypes = "MEDIUMBLOB"
	CreateTestDefinitionSupportedDataTypesMEDIUMTEXT        CreateTestDefinitionSupportedDataTypes = "MEDIUMTEXT"
	CreateTestDefinitionSupportedDataTypesMONEY             CreateTestDefinitionSupportedDataTypes = "MONEY"
	CreateTestDefinitionSupportedDataTypesNTEXT             CreateTestDefinitionSupportedDataTypes = "NTEXT"
	CreateTestDefinitionSupportedDataTypesNULL              CreateTestDefinitionSupportedDataTypes = "NULL"
	CreateTestDefinitionSupportedDataTypesNUMBER            CreateTestDefinitionSupportedDataTypes = "NUMBER"
	CreateTestDefinitionSupportedDataTypesNUMERIC           CreateTestDefinitionSupportedDataTypes = "NUMERIC"
	CreateTestDefinitionSupportedDataTypesPGLSN             CreateTestDefinitionSupportedDataTypes = "PG_LSN"
	CreateTestDefinitionSupportedDataTypesPGSNAPSHOT        CreateTestDefinitionSupportedDataTypes = "PG_SNAPSHOT"
	CreateTestDefinitionSupportedDataTypesPOINT             CreateTestDefinitionSupportedDataTypes = "POINT"
	CreateTestDefinitionSupportedDataTypesPOLYGON           CreateTestDefinitionSupportedDataTypes = "POLYGON"
	CreateTestDefinitionSupportedDataTypesQUANTILESTATE     CreateTestDefinitionSupportedDataTypes = "QUANTILE_STATE"
	CreateTestDefinitionSupportedDataTypesRECORD            CreateTestDefinitionSupportedDataTypes = "RECORD"
	CreateTestDefinitionSupportedDataTypesROWID             CreateTestDefinitionSupportedDataTypes = "ROWID"
	CreateTestDefinitionSupportedDataTypesSET               CreateTestDefinitionSupportedDataTypes = "SET"
	CreateTestDefinitionSupportedDataTypesSMALLINT          CreateTestDefinitionSupportedDataTypes = "SMALLINT"
	CreateTestDefinitionSupportedDataTypesSPATIAL           CreateTestDefinitionSupportedDataTypes = "SPATIAL"
	CreateTestDefinitionSupportedDataTypesSTRING            CreateTestDefinitionSupportedDataTypes = "STRING"
	CreateTestDefinitionSupportedDataTypesSTRUCT            CreateTestDefinitionSupportedDataTypes = "STRUCT"
	CreateTestDefinitionSupportedDataTypesSUPER             CreateTestDefinitionSupportedDataTypes = "SUPER"
	CreateTestDefinitionSupportedDataTypesTABLE             CreateTestDefinitionSupportedDataTypes = "TABLE"
	CreateTestDefinitionSupportedDataTypesTEXT              CreateTestDefinitionSupportedDataTypes = "TEXT"
	CreateTestDefinitionSupportedDataTypesTIME              CreateTestDefinitionSupportedDataTypes = "TIME"
	CreateTestDefinitionSupportedDataTypesTIMESTAMP         CreateTestDefinitionSupportedDataTypes = "TIMESTAMP"
	CreateTestDefinitionSupportedDataTypesTIMESTAMPZ        CreateTestDefinitionSupportedDataTypes = "TIMESTAMPZ"
	CreateTestDefinitionSupportedDataTypesTINYINT           CreateTestDefinitionSupportedDataTypes = "TINYINT"
	CreateTestDefinitionSupportedDataTypesTSQUERY           CreateTestDefinitionSupportedDataTypes = "TSQUERY"
	CreateTestDefinitionSupportedDataTypesTSVECTOR          CreateTestDefinitionSupportedDataTypes = "TSVECTOR"
	CreateTestDefinitionSupportedDataTypesTUPLE             CreateTestDefinitionSupportedDataTypes = "TUPLE"
	CreateTestDefinitionSupportedDataTypesTXIDSNAPSHOT      CreateTestDefinitionSupportedDataTypes = "TXID_SNAPSHOT"
	CreateTestDefinitionSupportedDataTypesUINT              CreateTestDefinitionSupportedDataTypes = "UINT"
	CreateTestDefinitionSupportedDataTypesUNION             CreateTestDefinitionSupportedDataTypes = "UNION"
	CreateTestDefinitionSupportedDataTypesUNKNOWN           CreateTestDefinitionSupportedDataTypes = "UNKNOWN"
	CreateTestDefinitionSupportedDataTypesUUID              CreateTestDefinitionSupportedDataTypes = "UUID"
	CreateTestDefinitionSupportedDataTypesVARBINARY         CreateTestDefinitionSupportedDataTypes = "VARBINARY"
	CreateTestDefinitionSupportedDataTypesVARCHAR           CreateTestDefinitionSupportedDataTypes = "VARCHAR"
	CreateTestDefinitionSupportedDataTypesVARIANT           CreateTestDefinitionSupportedDataTypes = "VARIANT"
	CreateTestDefinitionSupportedDataTypesXML               CreateTestDefinitionSupportedDataTypes = "XML"
	CreateTestDefinitionSupportedDataTypesYEAR              CreateTestDefinitionSupportedDataTypes = "YEAR"
)

// Defines values for CreateTestDefinitionTestPlatforms.
const (
	CreateTestDefinitionTestPlatformsDBT               CreateTestDefinitionTestPlatforms = "DBT"
	CreateTestDefinitionTestPlatformsDeequ             CreateTestDefinitionTestPlatforms = "Deequ"
	CreateTestDefinitionTestPlatformsGreatExpectations CreateTestDefinitionTestPlatforms = "GreatExpectations"
	CreateTestDefinitionTestPlatformsOpenMetadata      CreateTestDefinitionTestPlatforms = "OpenMetadata"
	CreateTestDefinitionTestPlatformsOther             CreateTestDefinitionTestPlatforms = "Other"
	CreateTestDefinitionTestPlatformsSoda              CreateTestDefinitionTestPlatforms = "Soda"
)

// Defines values for CreateThreadType.
const (
	CreateThreadTypeAnnouncement CreateThreadType = "Announcement"
	CreateThreadTypeChatbot      CreateThreadType = "Chatbot"
	CreateThreadTypeConversation CreateThreadType = "Conversation"
	CreateThreadTypeTask         CreateThreadType = "Task"
)

// Defines values for CreateTopicCleanupPolicies.
const (
	CreateTopicCleanupPoliciesCompact CreateTopicCleanupPolicies = "compact"
	CreateTopicCleanupPoliciesDelete  CreateTopicCleanupPolicies = "delete"
)

// Defines values for CreateTypeCategory.
const (
	CreateTypeCategoryEntity CreateTypeCategory = "entity"
	CreateTypeCategoryField  CreateTypeCategory = "field"
)

// Defines values for CreateUserCreatePasswordType.
const (
	ADMINCREATE CreateUserCreatePasswordType = "ADMIN_CREATE"
	USERCREATE  CreateUserCreatePasswordType = "USER_CREATE"
)

// Defines values for CreateWorkflowDefinitionType.
const (
	EventBasedEntity    CreateWorkflowDefinitionType = "eventBasedEntity"
	NoOp                CreateWorkflowDefinitionType = "noOp"
	PeriodicBatchEntity CreateWorkflowDefinitionType = "periodicBatchEntity"
)

// Defines values for CsvImportResultStatus.
const (
	CsvImportResultStatusAborted        CsvImportResultStatus = "aborted"
	CsvImportResultStatusFailure        CsvImportResultStatus = "failure"
	CsvImportResultStatusPartialSuccess CsvImportResultStatus = "partialSuccess"
	CsvImportResultStatusSuccess        CsvImportResultStatus = "success"
)

// Defines values for DashboardDashboardType.
const (
	DashboardDashboardTypeDashboard DashboardDashboardType = "Dashboard"
	DashboardDashboardTypeReport    DashboardDashboardType = "Report"
)

// Defines values for DashboardProvider.
const (
	DashboardProviderSystem DashboardProvider = "system"
	DashboardProviderUser   DashboardProvider = "user"
)

// Defines values for DashboardServiceType.
const (
	DashboardServiceTypeCustomDashboard     DashboardServiceType = "CustomDashboard"
	DashboardServiceTypeDomoDashboard       DashboardServiceType = "DomoDashboard"
	DashboardServiceTypeLightdash           DashboardServiceType = "Lightdash"
	DashboardServiceTypeLooker              DashboardServiceType = "Looker"
	DashboardServiceTypeMetabase            DashboardServiceType = "Metabase"
	DashboardServiceTypeMicroStrategy       DashboardServiceType = "MicroStrategy"
	DashboardServiceTypeMode                DashboardServiceType = "Mode"
	DashboardServiceTypePowerBI             DashboardServiceType = "PowerBI"
	DashboardServiceTypePowerBIReportServer DashboardServiceType = "PowerBIReportServer"
	DashboardServiceTypeQlikCloud           DashboardServiceType = "QlikCloud"
	DashboardServiceTypeQlikSense           DashboardServiceType = "QlikSense"
	DashboardServiceTypeQuickSight          DashboardServiceType = "QuickSight"
	DashboardServiceTypeRedash              DashboardServiceType = "Redash"
	DashboardServiceTypeSigma               DashboardServiceType = "Sigma"
	DashboardServiceTypeSuperset            DashboardServiceType = "Superset"
	DashboardServiceTypeTableau             DashboardServiceType = "Tableau"
)

// Defines values for DashboardDataModelDataModelType.
const (
	DashboardDataModelDataModelTypeLookMlExplore              DashboardDataModelDataModelType = "LookMlExplore"
	DashboardDataModelDataModelTypeLookMlView                 DashboardDataModelDataModelType = "LookMlView"
	DashboardDataModelDataModelTypeMetabaseDataModel          DashboardDataModelDataModelType = "MetabaseDataModel"
	DashboardDataModelDataModelTypePowerBIDataModel           DashboardDataModelDataModelType = "PowerBIDataModel"
	DashboardDataModelDataModelTypeQlikDataModel              DashboardDataModelDataModelType = "QlikDataModel"
	DashboardDataModelDataModelTypeQuickSightDataModel        DashboardDataModelDataModelType = "QuickSightDataModel"
	DashboardDataModelDataModelTypeSigmaDataModel             DashboardDataModelDataModelType = "SigmaDataModel"
	DashboardDataModelDataModelTypeSupersetDataModel          DashboardDataModelDataModelType = "SupersetDataModel"
	DashboardDataModelDataModelTypeTableauDataModel           DashboardDataModelDataModelType = "TableauDataModel"
	DashboardDataModelDataModelTypeTableauEmbeddedDatasource  DashboardDataModelDataModelType = "TableauEmbeddedDatasource"
	DashboardDataModelDataModelTypeTableauPublishedDatasource DashboardDataModelDataModelType = "TableauPublishedDatasource"
)

// Defines values for DashboardDataModelProvider.
const (
	DashboardDataModelProviderSystem DashboardDataModelProvider = "system"
	DashboardDataModelProviderUser   DashboardDataModelProvider = "user"
)

// Defines values for DashboardDataModelServiceType.
const (
	DashboardDataModelServiceTypeCustomDashboard     DashboardDataModelServiceType = "CustomDashboard"
	DashboardDataModelServiceTypeDomoDashboard       DashboardDataModelServiceType = "DomoDashboard"
	DashboardDataModelServiceTypeLightdash           DashboardDataModelServiceType = "Lightdash"
	DashboardDataModelServiceTypeLooker              DashboardDataModelServiceType = "Looker"
	DashboardDataModelServiceTypeMetabase            DashboardDataModelServiceType = "Metabase"
	DashboardDataModelServiceTypeMicroStrategy       DashboardDataModelServiceType = "MicroStrategy"
	DashboardDataModelServiceTypeMode                DashboardDataModelServiceType = "Mode"
	DashboardDataModelServiceTypePowerBI             DashboardDataModelServiceType = "PowerBI"
	DashboardDataModelServiceTypePowerBIReportServer DashboardDataModelServiceType = "PowerBIReportServer"
	DashboardDataModelServiceTypeQlikCloud           DashboardDataModelServiceType = "QlikCloud"
	DashboardDataModelServiceTypeQlikSense           DashboardDataModelServiceType = "QlikSense"
	DashboardDataModelServiceTypeQuickSight          DashboardDataModelServiceType = "QuickSight"
	DashboardDataModelServiceTypeRedash              DashboardDataModelServiceType = "Redash"
	DashboardDataModelServiceTypeSigma               DashboardDataModelServiceType = "Sigma"
	DashboardDataModelServiceTypeSuperset            DashboardDataModelServiceType = "Superset"
	DashboardDataModelServiceTypeTableau             DashboardDataModelServiceType = "Tableau"
)

// Defines values for DashboardServiceProvider.
const (
	DashboardServiceProviderSystem DashboardServiceProvider = "system"
	DashboardServiceProviderUser   DashboardServiceProvider = "user"
)

// Defines values for DashboardServiceServiceType.
const (
	DashboardServiceServiceTypeCustomDashboard     DashboardServiceServiceType = "CustomDashboard"
	DashboardServiceServiceTypeDomoDashboard       DashboardServiceServiceType = "DomoDashboard"
	DashboardServiceServiceTypeLightdash           DashboardServiceServiceType = "Lightdash"
	DashboardServiceServiceTypeLooker              DashboardServiceServiceType = "Looker"
	DashboardServiceServiceTypeMetabase            DashboardServiceServiceType = "Metabase"
	DashboardServiceServiceTypeMicroStrategy       DashboardServiceServiceType = "MicroStrategy"
	DashboardServiceServiceTypeMode                DashboardServiceServiceType = "Mode"
	DashboardServiceServiceTypePowerBI             DashboardServiceServiceType = "PowerBI"
	DashboardServiceServiceTypePowerBIReportServer DashboardServiceServiceType = "PowerBIReportServer"
	DashboardServiceServiceTypeQlikCloud           DashboardServiceServiceType = "QlikCloud"
	DashboardServiceServiceTypeQlikSense           DashboardServiceServiceType = "QlikSense"
	DashboardServiceServiceTypeQuickSight          DashboardServiceServiceType = "QuickSight"
	DashboardServiceServiceTypeRedash              DashboardServiceServiceType = "Redash"
	DashboardServiceServiceTypeSigma               DashboardServiceServiceType = "Sigma"
	DashboardServiceServiceTypeSuperset            DashboardServiceServiceType = "Superset"
	DashboardServiceServiceTypeTableau             DashboardServiceServiceType = "Tableau"
)

// Defines values for DataModelModelType.
const (
	DataModelModelTypeDBT DataModelModelType = "DBT"
	DataModelModelTypeDDL DataModelModelType = "DDL"
)

// Defines values for DataProductProvider.
const (
	DataProductProviderSystem DataProductProvider = "system"
	DataProductProviderUser   DataProductProvider = "user"
)

// Defines values for DatabaseProvider.
const (
	DatabaseProviderSystem DatabaseProvider = "system"
	DatabaseProviderUser   DatabaseProvider = "user"
)

// Defines values for DatabaseServiceType.
const (
	DatabaseServiceTypeAthena         DatabaseServiceType = "Athena"
	DatabaseServiceTypeAzureSQL       DatabaseServiceType = "AzureSQL"
	DatabaseServiceTypeBigQuery       DatabaseServiceType = "BigQuery"
	DatabaseServiceTypeBigTable       DatabaseServiceType = "BigTable"
	DatabaseServiceTypeCassandra      DatabaseServiceType = "Cassandra"
	DatabaseServiceTypeClickhouse     DatabaseServiceType = "Clickhouse"
	DatabaseServiceTypeCockroach      DatabaseServiceType = "Cockroach"
	DatabaseServiceTypeCouchbase      DatabaseServiceType = "Couchbase"
	DatabaseServiceTypeCustomDatabase DatabaseServiceType = "CustomDatabase"
	DatabaseServiceTypeDatabricks     DatabaseServiceType = "Databricks"
	DatabaseServiceTypeDatalake       DatabaseServiceType = "Datalake"
	DatabaseServiceTypeDb2            DatabaseServiceType = "Db2"
	DatabaseServiceTypeDbt            DatabaseServiceType = "Dbt"
	DatabaseServiceTypeDeltaLake      DatabaseServiceType = "DeltaLake"
	DatabaseServiceTypeDomoDatabase   DatabaseServiceType = "DomoDatabase"
	DatabaseServiceTypeDoris          DatabaseServiceType = "Doris"
	DatabaseServiceTypeDruid          DatabaseServiceType = "Druid"
	DatabaseServiceTypeDynamoDB       DatabaseServiceType = "DynamoDB"
	DatabaseServiceTypeExasol         DatabaseServiceType = "Exasol"
	DatabaseServiceTypeGlue           DatabaseServiceType = "Glue"
	DatabaseServiceTypeGreenplum      DatabaseServiceType = "Greenplum"
	DatabaseServiceTypeHive           DatabaseServiceType = "Hive"
	DatabaseServiceTypeIceberg        DatabaseServiceType = "Iceberg"
	DatabaseServiceTypeImpala         DatabaseServiceType = "Impala"
	DatabaseServiceTypeMariaDB        DatabaseServiceType = "MariaDB"
	DatabaseServiceTypeMongoDB        DatabaseServiceType = "MongoDB"
	DatabaseServiceTypeMssql          DatabaseServiceType = "Mssql"
	DatabaseServiceTypeMysql          DatabaseServiceType = "Mysql"
	DatabaseServiceTypeOracle         DatabaseServiceType = "Oracle"
	DatabaseServiceTypePinotDB        DatabaseServiceType = "PinotDB"
	DatabaseServiceTypePostgres       DatabaseServiceType = "Postgres"
	DatabaseServiceTypePresto         DatabaseServiceType = "Presto"
	DatabaseServiceTypeQueryLog       DatabaseServiceType = "QueryLog"
	DatabaseServiceTypeRedshift       DatabaseServiceType = "Redshift"
	DatabaseServiceTypeSAS            DatabaseServiceType = "SAS"
	DatabaseServiceTypeSQLite         DatabaseServiceType = "SQLite"
	DatabaseServiceTypeSalesforce     DatabaseServiceType = "Salesforce"
	DatabaseServiceTypeSapErp         DatabaseServiceType = "SapErp"
	DatabaseServiceTypeSapHana        DatabaseServiceType = "SapHana"
	DatabaseServiceTypeSingleStore    DatabaseServiceType = "SingleStore"
	DatabaseServiceTypeSnowflake      DatabaseServiceType = "Snowflake"
	DatabaseServiceTypeSynapse        DatabaseServiceType = "Synapse"
	DatabaseServiceTypeTeradata       DatabaseServiceType = "Teradata"
	DatabaseServiceTypeTrino          DatabaseServiceType = "Trino"
	DatabaseServiceTypeUnityCatalog   DatabaseServiceType = "UnityCatalog"
	DatabaseServiceTypeVertica        DatabaseServiceType = "Vertica"
)

// Defines values for DatabaseProfilerConfigProfileSampleType.
const (
	DatabaseProfilerConfigProfileSampleTypePERCENTAGE DatabaseProfilerConfigProfileSampleType = "PERCENTAGE"
	DatabaseProfilerConfigProfileSampleTypeROWS       DatabaseProfilerConfigProfileSampleType = "ROWS"
)

// Defines values for DatabaseProfilerConfigSamplingMethodType.
const (
	DatabaseProfilerConfigSamplingMethodTypeBERNOULLI DatabaseProfilerConfigSamplingMethodType = "BERNOULLI"
	DatabaseProfilerConfigSamplingMethodTypeSYSTEM    DatabaseProfilerConfigSamplingMethodType = "SYSTEM"
)

// Defines values for DatabaseSchemaProvider.
const (
	DatabaseSchemaProviderSystem DatabaseSchemaProvider = "system"
	DatabaseSchemaProviderUser   DatabaseSchemaProvider = "user"
)

// Defines values for DatabaseSchemaServiceType.
const (
	DatabaseSchemaServiceTypeAthena         DatabaseSchemaServiceType = "Athena"
	DatabaseSchemaServiceTypeAzureSQL       DatabaseSchemaServiceType = "AzureSQL"
	DatabaseSchemaServiceTypeBigQuery       DatabaseSchemaServiceType = "BigQuery"
	DatabaseSchemaServiceTypeBigTable       DatabaseSchemaServiceType = "BigTable"
	DatabaseSchemaServiceTypeCassandra      DatabaseSchemaServiceType = "Cassandra"
	DatabaseSchemaServiceTypeClickhouse     DatabaseSchemaServiceType = "Clickhouse"
	DatabaseSchemaServiceTypeCockroach      DatabaseSchemaServiceType = "Cockroach"
	DatabaseSchemaServiceTypeCouchbase      DatabaseSchemaServiceType = "Couchbase"
	DatabaseSchemaServiceTypeCustomDatabase DatabaseSchemaServiceType = "CustomDatabase"
	DatabaseSchemaServiceTypeDatabricks     DatabaseSchemaServiceType = "Databricks"
	DatabaseSchemaServiceTypeDatalake       DatabaseSchemaServiceType = "Datalake"
	DatabaseSchemaServiceTypeDb2            DatabaseSchemaServiceType = "Db2"
	DatabaseSchemaServiceTypeDbt            DatabaseSchemaServiceType = "Dbt"
	DatabaseSchemaServiceTypeDeltaLake      DatabaseSchemaServiceType = "DeltaLake"
	DatabaseSchemaServiceTypeDomoDatabase   DatabaseSchemaServiceType = "DomoDatabase"
	DatabaseSchemaServiceTypeDoris          DatabaseSchemaServiceType = "Doris"
	DatabaseSchemaServiceTypeDruid          DatabaseSchemaServiceType = "Druid"
	DatabaseSchemaServiceTypeDynamoDB       DatabaseSchemaServiceType = "DynamoDB"
	DatabaseSchemaServiceTypeExasol         DatabaseSchemaServiceType = "Exasol"
	DatabaseSchemaServiceTypeGlue           DatabaseSchemaServiceType = "Glue"
	DatabaseSchemaServiceTypeGreenplum      DatabaseSchemaServiceType = "Greenplum"
	DatabaseSchemaServiceTypeHive           DatabaseSchemaServiceType = "Hive"
	DatabaseSchemaServiceTypeIceberg        DatabaseSchemaServiceType = "Iceberg"
	DatabaseSchemaServiceTypeImpala         DatabaseSchemaServiceType = "Impala"
	DatabaseSchemaServiceTypeMariaDB        DatabaseSchemaServiceType = "MariaDB"
	DatabaseSchemaServiceTypeMongoDB        DatabaseSchemaServiceType = "MongoDB"
	DatabaseSchemaServiceTypeMssql          DatabaseSchemaServiceType = "Mssql"
	DatabaseSchemaServiceTypeMysql          DatabaseSchemaServiceType = "Mysql"
	DatabaseSchemaServiceTypeOracle         DatabaseSchemaServiceType = "Oracle"
	DatabaseSchemaServiceTypePinotDB        DatabaseSchemaServiceType = "PinotDB"
	DatabaseSchemaServiceTypePostgres       DatabaseSchemaServiceType = "Postgres"
	DatabaseSchemaServiceTypePresto         DatabaseSchemaServiceType = "Presto"
	DatabaseSchemaServiceTypeQueryLog       DatabaseSchemaServiceType = "QueryLog"
	DatabaseSchemaServiceTypeRedshift       DatabaseSchemaServiceType = "Redshift"
	DatabaseSchemaServiceTypeSAS            DatabaseSchemaServiceType = "SAS"
	DatabaseSchemaServiceTypeSQLite         DatabaseSchemaServiceType = "SQLite"
	DatabaseSchemaServiceTypeSalesforce     DatabaseSchemaServiceType = "Salesforce"
	DatabaseSchemaServiceTypeSapErp         DatabaseSchemaServiceType = "SapErp"
	DatabaseSchemaServiceTypeSapHana        DatabaseSchemaServiceType = "SapHana"
	DatabaseSchemaServiceTypeSingleStore    DatabaseSchemaServiceType = "SingleStore"
	DatabaseSchemaServiceTypeSnowflake      DatabaseSchemaServiceType = "Snowflake"
	DatabaseSchemaServiceTypeSynapse        DatabaseSchemaServiceType = "Synapse"
	DatabaseSchemaServiceTypeTeradata       DatabaseSchemaServiceType = "Teradata"
	DatabaseSchemaServiceTypeTrino          DatabaseSchemaServiceType = "Trino"
	DatabaseSchemaServiceTypeUnityCatalog   DatabaseSchemaServiceType = "UnityCatalog"
	DatabaseSchemaServiceTypeVertica        DatabaseSchemaServiceType = "Vertica"
)

// Defines values for DatabaseSchemaProfilerConfigProfileSampleType.
const (
	DatabaseSchemaProfilerConfigProfileSampleTypePERCENTAGE DatabaseSchemaProfilerConfigProfileSampleType = "PERCENTAGE"
	DatabaseSchemaProfilerConfigProfileSampleTypeROWS       DatabaseSchemaProfilerConfigProfileSampleType = "ROWS"
)

// Defines values for DatabaseSchemaProfilerConfigSamplingMethodType.
const (
	DatabaseSchemaProfilerConfigSamplingMethodTypeBERNOULLI DatabaseSchemaProfilerConfigSamplingMethodType = "BERNOULLI"
	DatabaseSchemaProfilerConfigSamplingMethodTypeSYSTEM    DatabaseSchemaProfilerConfigSamplingMethodType = "SYSTEM"
)

// Defines values for DatabaseServiceProvider.
const (
	DatabaseServiceProviderSystem DatabaseServiceProvider = "system"
	DatabaseServiceProviderUser   DatabaseServiceProvider = "user"
)

// Defines values for DatabaseServiceServiceType.
const (
	DatabaseServiceServiceTypeAthena         DatabaseServiceServiceType = "Athena"
	DatabaseServiceServiceTypeAzureSQL       DatabaseServiceServiceType = "AzureSQL"
	DatabaseServiceServiceTypeBigQuery       DatabaseServiceServiceType = "BigQuery"
	DatabaseServiceServiceTypeBigTable       DatabaseServiceServiceType = "BigTable"
	DatabaseServiceServiceTypeCassandra      DatabaseServiceServiceType = "Cassandra"
	DatabaseServiceServiceTypeClickhouse     DatabaseServiceServiceType = "Clickhouse"
	DatabaseServiceServiceTypeCockroach      DatabaseServiceServiceType = "Cockroach"
	DatabaseServiceServiceTypeCouchbase      DatabaseServiceServiceType = "Couchbase"
	DatabaseServiceServiceTypeCustomDatabase DatabaseServiceServiceType = "CustomDatabase"
	DatabaseServiceServiceTypeDatabricks     DatabaseServiceServiceType = "Databricks"
	DatabaseServiceServiceTypeDatalake       DatabaseServiceServiceType = "Datalake"
	DatabaseServiceServiceTypeDb2            DatabaseServiceServiceType = "Db2"
	DatabaseServiceServiceTypeDbt            DatabaseServiceServiceType = "Dbt"
	DatabaseServiceServiceTypeDeltaLake      DatabaseServiceServiceType = "DeltaLake"
	DatabaseServiceServiceTypeDomoDatabase   DatabaseServiceServiceType = "DomoDatabase"
	DatabaseServiceServiceTypeDoris          DatabaseServiceServiceType = "Doris"
	DatabaseServiceServiceTypeDruid          DatabaseServiceServiceType = "Druid"
	DatabaseServiceServiceTypeDynamoDB       DatabaseServiceServiceType = "DynamoDB"
	DatabaseServiceServiceTypeExasol         DatabaseServiceServiceType = "Exasol"
	DatabaseServiceServiceTypeGlue           DatabaseServiceServiceType = "Glue"
	DatabaseServiceServiceTypeGreenplum      DatabaseServiceServiceType = "Greenplum"
	DatabaseServiceServiceTypeHive           DatabaseServiceServiceType = "Hive"
	DatabaseServiceServiceTypeIceberg        DatabaseServiceServiceType = "Iceberg"
	DatabaseServiceServiceTypeImpala         DatabaseServiceServiceType = "Impala"
	DatabaseServiceServiceTypeMariaDB        DatabaseServiceServiceType = "MariaDB"
	DatabaseServiceServiceTypeMongoDB        DatabaseServiceServiceType = "MongoDB"
	DatabaseServiceServiceTypeMssql          DatabaseServiceServiceType = "Mssql"
	DatabaseServiceServiceTypeMysql          DatabaseServiceServiceType = "Mysql"
	DatabaseServiceServiceTypeOracle         DatabaseServiceServiceType = "Oracle"
	DatabaseServiceServiceTypePinotDB        DatabaseServiceServiceType = "PinotDB"
	DatabaseServiceServiceTypePostgres       DatabaseServiceServiceType = "Postgres"
	DatabaseServiceServiceTypePresto         DatabaseServiceServiceType = "Presto"
	DatabaseServiceServiceTypeQueryLog       DatabaseServiceServiceType = "QueryLog"
	DatabaseServiceServiceTypeRedshift       DatabaseServiceServiceType = "Redshift"
	DatabaseServiceServiceTypeSAS            DatabaseServiceServiceType = "SAS"
	DatabaseServiceServiceTypeSQLite         DatabaseServiceServiceType = "SQLite"
	DatabaseServiceServiceTypeSalesforce     DatabaseServiceServiceType = "Salesforce"
	DatabaseServiceServiceTypeSapErp         DatabaseServiceServiceType = "SapErp"
	DatabaseServiceServiceTypeSapHana        DatabaseServiceServiceType = "SapHana"
	DatabaseServiceServiceTypeSingleStore    DatabaseServiceServiceType = "SingleStore"
	DatabaseServiceServiceTypeSnowflake      DatabaseServiceServiceType = "Snowflake"
	DatabaseServiceServiceTypeSynapse        DatabaseServiceServiceType = "Synapse"
	DatabaseServiceServiceTypeTeradata       DatabaseServiceServiceType = "Teradata"
	DatabaseServiceServiceTypeTrino          DatabaseServiceServiceType = "Trino"
	DatabaseServiceServiceTypeUnityCatalog   DatabaseServiceServiceType = "UnityCatalog"
	DatabaseServiceServiceTypeVertica        DatabaseServiceServiceType = "Vertica"
)

// Defines values for DocumentProvider.
const (
	DocumentProviderSystem DocumentProvider = "system"
	DocumentProviderUser   DocumentProvider = "user"
)

// Defines values for DomainDomainType.
const (
	DomainDomainTypeAggregate       DomainDomainType = "Aggregate"
	DomainDomainTypeConsumerAligned DomainDomainType = "Consumer-aligned"
	DomainDomainTypeSourceAligned   DomainDomainType = "Source-aligned"
)

// Defines values for DomainProvider.
const (
	DomainProviderSystem DomainProvider = "system"
	DomainProviderUser   DomainProvider = "user"
)

// Defines values for EventFilterRuleEffect.
const (
	EventFilterRuleEffectExclude EventFilterRuleEffect = "exclude"
	EventFilterRuleEffectInclude EventFilterRuleEffect = "include"
)

// Defines values for EventFilterRuleInputType.
const (
	EventFilterRuleInputTypeNone    EventFilterRuleInputType = "none"
	EventFilterRuleInputTypeRuntime EventFilterRuleInputType = "runtime"
	EventFilterRuleInputTypeStatic  EventFilterRuleInputType = "static"
)

// Defines values for EventFilterRulePrefixCondition.
const (
	EventFilterRulePrefixConditionAND EventFilterRulePrefixCondition = "AND"
	EventFilterRulePrefixConditionOR  EventFilterRulePrefixCondition = "OR"
)

// Defines values for EventSubscriptionAlertType.
const (
	EventSubscriptionAlertTypeActivityFeed                  EventSubscriptionAlertType = "ActivityFeed"
	EventSubscriptionAlertTypeCustom                        EventSubscriptionAlertType = "Custom"
	EventSubscriptionAlertTypeGovernanceWorkflowChangeEvent EventSubscriptionAlertType = "GovernanceWorkflowChangeEvent"
	EventSubscriptionAlertTypeNotification                  EventSubscriptionAlertType = "Notification"
	EventSubscriptionAlertTypeObservability                 EventSubscriptionAlertType = "Observability"
)

// Defines values for EventSubscriptionProvider.
const (
	EventSubscriptionProviderSystem EventSubscriptionProvider = "system"
	EventSubscriptionProviderUser   EventSubscriptionProvider = "user"
)

// Defines values for FieldDataType.
const (
	FieldDataTypeARRAY      FieldDataType = "ARRAY"
	FieldDataTypeBOOLEAN    FieldDataType = "BOOLEAN"
	FieldDataTypeBYTES      FieldDataType = "BYTES"
	FieldDataTypeDATE       FieldDataType = "DATE"
	FieldDataTypeDOUBLE     FieldDataType = "DOUBLE"
	FieldDataTypeENUM       FieldDataType = "ENUM"
	FieldDataTypeERROR      FieldDataType = "ERROR"
	FieldDataTypeFIXED      FieldDataType = "FIXED"
	FieldDataTypeFLOAT      FieldDataType = "FLOAT"
	FieldDataTypeINT        FieldDataType = "INT"
	FieldDataTypeLONG       FieldDataType = "LONG"
	FieldDataTypeMAP        FieldDataType = "MAP"
	FieldDataTypeNULL       FieldDataType = "NULL"
	FieldDataTypeRECORD     FieldDataType = "RECORD"
	FieldDataTypeSTRING     FieldDataType = "STRING"
	FieldDataTypeTIME       FieldDataType = "TIME"
	FieldDataTypeTIMESTAMP  FieldDataType = "TIMESTAMP"
	FieldDataTypeTIMESTAMPZ FieldDataType = "TIMESTAMPZ"
	FieldDataTypeUNION      FieldDataType = "UNION"
	FieldDataTypeUNKNOWN    FieldDataType = "UNKNOWN"
)

// Defines values for FieldValueBoostModifier.
const (
	FieldValueBoostModifierLn         FieldValueBoostModifier = "ln"
	FieldValueBoostModifierLn1p       FieldValueBoostModifier = "ln1p"
	FieldValueBoostModifierLn2p       FieldValueBoostModifier = "ln2p"
	FieldValueBoostModifierLog        FieldValueBoostModifier = "log"
	FieldValueBoostModifierLog1p      FieldValueBoostModifier = "log1p"
	FieldValueBoostModifierLog2p      FieldValueBoostModifier = "log2p"
	FieldValueBoostModifierNone       FieldValueBoostModifier = "none"
	FieldValueBoostModifierReciprocal FieldValueBoostModifier = "reciprocal"
	FieldValueBoostModifierSqrt       FieldValueBoostModifier = "sqrt"
	FieldValueBoostModifierSquare     FieldValueBoostModifier = "square"
)

// Defines values for FunctionParameterInputType.
const (
	AllIndexElasticSearch         FunctionParameterInputType = "AllIndexElasticSearch"
	NotRequired                   FunctionParameterInputType = "NotRequired"
	ReadFromParamContext          FunctionParameterInputType = "ReadFromParamContext"
	ReadFromParamContextPerEntity FunctionParameterInputType = "ReadFromParamContextPerEntity"
	SpecificIndexElasticSearch    FunctionParameterInputType = "SpecificIndexElasticSearch"
)

// Defines values for GenerateTokenRequestJWTTokenExpiry.
const (
	GenerateTokenRequestJWTTokenExpiryN1        GenerateTokenRequestJWTTokenExpiry = "1"
	GenerateTokenRequestJWTTokenExpiryN30       GenerateTokenRequestJWTTokenExpiry = "30"
	GenerateTokenRequestJWTTokenExpiryN60       GenerateTokenRequestJWTTokenExpiry = "60"
	GenerateTokenRequestJWTTokenExpiryN7        GenerateTokenRequestJWTTokenExpiry = "7"
	GenerateTokenRequestJWTTokenExpiryN90       GenerateTokenRequestJWTTokenExpiry = "90"
	GenerateTokenRequestJWTTokenExpiryOneHour   GenerateTokenRequestJWTTokenExpiry = "OneHour"
	GenerateTokenRequestJWTTokenExpiryUnlimited GenerateTokenRequestJWTTokenExpiry = "Unlimited"
)

// Defines values for GlossaryProvider.
const (
	GlossaryProviderSystem GlossaryProvider = "system"
	GlossaryProviderUser   GlossaryProvider = "user"
)

// Defines values for GlossaryTermProvider.
const (
	GlossaryTermProviderSystem GlossaryTermProvider = "system"
	GlossaryTermProviderUser   GlossaryTermProvider = "user"
)

// Defines values for GlossaryTermStatus.
const (
	GlossaryTermStatusApproved   GlossaryTermStatus = "Approved"
	GlossaryTermStatusDeprecated GlossaryTermStatus = "Deprecated"
	GlossaryTermStatusDraft      GlossaryTermStatus = "Draft"
	GlossaryTermStatusInReview   GlossaryTermStatus = "In Review"
	GlossaryTermStatusRejected   GlossaryTermStatus = "Rejected"
)

// Defines values for IndexingErrorErrorSource.
const (
	Job       IndexingErrorErrorSource = "Job"
	Processor IndexingErrorErrorSource = "Processor"
	Reader    IndexingErrorErrorSource = "Reader"
	Sink      IndexingErrorErrorSource = "Sink"
)

// Defines values for IngestionPipelineLoggerLevel.
const (
	IngestionPipelineLoggerLevelDEBUG IngestionPipelineLoggerLevel = "DEBUG"
	IngestionPipelineLoggerLevelERROR IngestionPipelineLoggerLevel = "ERROR"
	IngestionPipelineLoggerLevelINFO  IngestionPipelineLoggerLevel = "INFO"
	IngestionPipelineLoggerLevelWARN  IngestionPipelineLoggerLevel = "WARN"
)

// Defines values for IngestionPipelinePipelineType.
const (
	IngestionPipelinePipelineTypeApplication          IngestionPipelinePipelineType = "application"
	IngestionPipelinePipelineTypeAutoClassification   IngestionPipelinePipelineType = "autoClassification"
	IngestionPipelinePipelineTypeDataInsight          IngestionPipelinePipelineType = "dataInsight"
	IngestionPipelinePipelineTypeDbt                  IngestionPipelinePipelineType = "dbt"
	IngestionPipelinePipelineTypeElasticSearchReindex IngestionPipelinePipelineType = "elasticSearchReindex"
	IngestionPipelinePipelineTypeLineage              IngestionPipelinePipelineType = "lineage"
	IngestionPipelinePipelineTypeMetadata             IngestionPipelinePipelineType = "metadata"
	IngestionPipelinePipelineTypeProfiler             IngestionPipelinePipelineType = "profiler"
	IngestionPipelinePipelineTypeTestSuite            IngestionPipelinePipelineType = "TestSuite"
	IngestionPipelinePipelineTypeUsage                IngestionPipelinePipelineType = "usage"
)

// Defines values for IngestionPipelineProvider.
const (
	IngestionPipelineProviderSystem IngestionPipelineProvider = "system"
	IngestionPipelineProviderUser   IngestionPipelineProvider = "user"
)

// Defines values for JWTAuthMechanismJWTTokenExpiry.
const (
	N1        JWTAuthMechanismJWTTokenExpiry = "1"
	N30       JWTAuthMechanismJWTTokenExpiry = "30"
	N60       JWTAuthMechanismJWTTokenExpiry = "60"
	N7        JWTAuthMechanismJWTTokenExpiry = "7"
	N90       JWTAuthMechanismJWTTokenExpiry = "90"
	OneHour   JWTAuthMechanismJWTTokenExpiry = "OneHour"
	Unlimited JWTAuthMechanismJWTTokenExpiry = "Unlimited"
)

// Defines values for LineageDetailsSource.
const (
	LineageDetailsSourceChildAssets          LineageDetailsSource = "ChildAssets"
	LineageDetailsSourceCrossDatabaseLineage LineageDetailsSource = "CrossDatabaseLineage"
	LineageDetailsSourceDashboardLineage     LineageDetailsSource = "DashboardLineage"
	LineageDetailsSourceDbtLineage           LineageDetailsSource = "DbtLineage"
	LineageDetailsSourceExternalTableLineage LineageDetailsSource = "ExternalTableLineage"
	LineageDetailsSourceManual               LineageDetailsSource = "Manual"
	LineageDetailsSourceOpenLineage          LineageDetailsSource = "OpenLineage"
	LineageDetailsSourcePipelineLineage      LineageDetailsSource = "PipelineLineage"
	LineageDetailsSourceQueryLineage         LineageDetailsSource = "QueryLineage"
	LineageDetailsSourceSparkLineage         LineageDetailsSource = "SparkLineage"
	LineageDetailsSourceViewLineage          LineageDetailsSource = "ViewLineage"
)

// Defines values for MessageSchemaSchemaType.
const (
	MessageSchemaSchemaTypeAvro     MessageSchemaSchemaType = "Avro"
	MessageSchemaSchemaTypeJSON     MessageSchemaSchemaType = "JSON"
	MessageSchemaSchemaTypeNone     MessageSchemaSchemaType = "None"
	MessageSchemaSchemaTypeOther    MessageSchemaSchemaType = "Other"
	MessageSchemaSchemaTypeProtobuf MessageSchemaSchemaType = "Protobuf"
)

// Defines values for MessagingServiceProvider.
const (
	MessagingServiceProviderSystem MessagingServiceProvider = "system"
	MessagingServiceProviderUser   MessagingServiceProvider = "user"
)

// Defines values for MessagingServiceServiceType.
const (
	MessagingServiceServiceTypeCustomMessaging MessagingServiceServiceType = "CustomMessaging"
	MessagingServiceServiceTypeKafka           MessagingServiceServiceType = "Kafka"
	MessagingServiceServiceTypeKinesis         MessagingServiceServiceType = "Kinesis"
	MessagingServiceServiceTypeRedpanda        MessagingServiceServiceType = "Redpanda"
)

// Defines values for MetadataServiceProvider.
const (
	MetadataServiceProviderSystem MetadataServiceProvider = "system"
	MetadataServiceProviderUser   MetadataServiceProvider = "user"
)

// Defines values for MetadataServiceServiceType.
const (
	MetadataServiceServiceTypeAlation      MetadataServiceServiceType = "Alation"
	MetadataServiceServiceTypeAlationSink  MetadataServiceServiceType = "AlationSink"
	MetadataServiceServiceTypeAmundsen     MetadataServiceServiceType = "Amundsen"
	MetadataServiceServiceTypeAtlas        MetadataServiceServiceType = "Atlas"
	MetadataServiceServiceTypeMetadataES   MetadataServiceServiceType = "MetadataES"
	MetadataServiceServiceTypeOpenMetadata MetadataServiceServiceType = "OpenMetadata"
)

// Defines values for MetricGranularity.
const (
	MetricGranularityDAY     MetricGranularity = "DAY"
	MetricGranularityHOUR    MetricGranularity = "HOUR"
	MetricGranularityMINUTE  MetricGranularity = "MINUTE"
	MetricGranularityMONTH   MetricGranularity = "MONTH"
	MetricGranularityQUARTER MetricGranularity = "QUARTER"
	MetricGranularitySECOND  MetricGranularity = "SECOND"
	MetricGranularityWEEK    MetricGranularity = "WEEK"
	MetricGranularityYEAR    MetricGranularity = "YEAR"
)

// Defines values for MetricMetricType.
const (
	MetricMetricTypeAVERAGE           MetricMetricType = "AVERAGE"
	MetricMetricTypeCOUNT             MetricMetricType = "COUNT"
	MetricMetricTypeMAX               MetricMetricType = "MAX"
	MetricMetricTypeMEDIAN            MetricMetricType = "MEDIAN"
	MetricMetricTypeMIN               MetricMetricType = "MIN"
	MetricMetricTypeMODE              MetricMetricType = "MODE"
	MetricMetricTypeOTHER             MetricMetricType = "OTHER"
	MetricMetricTypePERCENTAGE        MetricMetricType = "PERCENTAGE"
	MetricMetricTypeRATIO             MetricMetricType = "RATIO"
	MetricMetricTypeSTANDARDDEVIATION MetricMetricType = "STANDARD_DEVIATION"
	MetricMetricTypeSUM               MetricMetricType = "SUM"
	MetricMetricTypeVARIANCE          MetricMetricType = "VARIANCE"
)

// Defines values for MetricProvider.
const (
	MetricProviderSystem MetricProvider = "system"
	MetricProviderUser   MetricProvider = "user"
)

// Defines values for MetricUnitOfMeasurement.
const (
	MetricUnitOfMeasurementCOUNT        MetricUnitOfMeasurement = "COUNT"
	MetricUnitOfMeasurementDOLLARS      MetricUnitOfMeasurement = "DOLLARS"
	MetricUnitOfMeasurementEVENTS       MetricUnitOfMeasurement = "EVENTS"
	MetricUnitOfMeasurementPERCENTAGE   MetricUnitOfMeasurement = "PERCENTAGE"
	MetricUnitOfMeasurementREQUESTS     MetricUnitOfMeasurement = "REQUESTS"
	MetricUnitOfMeasurementSIZE         MetricUnitOfMeasurement = "SIZE"
	MetricUnitOfMeasurementTIMESTAMP    MetricUnitOfMeasurement = "TIMESTAMP"
	MetricUnitOfMeasurementTRANSACTIONS MetricUnitOfMeasurement = "TRANSACTIONS"
)

// Defines values for MetricExpressionLanguage.
const (
	MetricExpressionLanguageExternal   MetricExpressionLanguage = "External"
	MetricExpressionLanguageJava       MetricExpressionLanguage = "Java"
	MetricExpressionLanguageJavaScript MetricExpressionLanguage = "JavaScript"
	MetricExpressionLanguagePython     MetricExpressionLanguage = "Python"
	MetricExpressionLanguageSQL        MetricExpressionLanguage = "SQL"
)

// Defines values for MlFeatureDataType.
const (
	Categorical MlFeatureDataType = "categorical"
	Numerical   MlFeatureDataType = "numerical"
)

// Defines values for MlFeatureSourceDataType.
const (
	Array     MlFeatureSourceDataType = "array"
	Boolean   MlFeatureSourceDataType = "boolean"
	Date      MlFeatureSourceDataType = "date"
	Integer   MlFeatureSourceDataType = "integer"
	Number    MlFeatureSourceDataType = "number"
	Object    MlFeatureSourceDataType = "object"
	String    MlFeatureSourceDataType = "string"
	Timestamp MlFeatureSourceDataType = "timestamp"
)

// Defines values for MlModelProvider.
const (
	MlModelProviderSystem MlModelProvider = "system"
	MlModelProviderUser   MlModelProvider = "user"
)

// Defines values for MlModelServiceType.
const (
	MlModelServiceTypeCustomMlModel MlModelServiceType = "CustomMlModel"
	MlModelServiceTypeMlflow        MlModelServiceType = "Mlflow"
	MlModelServiceTypeSageMaker     MlModelServiceType = "SageMaker"
	MlModelServiceTypeSklearn       MlModelServiceType = "Sklearn"
	MlModelServiceTypeVertexAI      MlModelServiceType = "VertexAI"
)

// Defines values for MlModelServiceProvider.
const (
	MlModelServiceProviderSystem MlModelServiceProvider = "system"
	MlModelServiceProviderUser   MlModelServiceProvider = "user"
)

// Defines values for MlModelServiceServiceType.
const (
	CustomMlModel MlModelServiceServiceType = "CustomMlModel"
	Mlflow        MlModelServiceServiceType = "Mlflow"
	SageMaker     MlModelServiceServiceType = "SageMaker"
	Sklearn       MlModelServiceServiceType = "Sklearn"
	VertexAI      MlModelServiceServiceType = "VertexAI"
)

// Defines values for OpenMetadataConnectionAuthProvider.
const (
	Auth0        OpenMetadataConnectionAuthProvider = "auth0"
	AwsCognito   OpenMetadataConnectionAuthProvider = "aws-cognito"
	Azure        OpenMetadataConnectionAuthProvider = "azure"
	Basic        OpenMetadataConnectionAuthProvider = "basic"
	CustomOidc   OpenMetadataConnectionAuthProvider = "custom-oidc"
	Google       OpenMetadataConnectionAuthProvider = "google"
	Ldap         OpenMetadataConnectionAuthProvider = "ldap"
	Okta         OpenMetadataConnectionAuthProvider = "okta"
	Openmetadata OpenMetadataConnectionAuthProvider = "openmetadata"
	Saml         OpenMetadataConnectionAuthProvider = "saml"
)

// Defines values for OpenMetadataConnectionSecretsManagerLoader.
const (
	OpenMetadataConnectionSecretsManagerLoaderAirflow OpenMetadataConnectionSecretsManagerLoader = "airflow"
	OpenMetadataConnectionSecretsManagerLoaderEnv     OpenMetadataConnectionSecretsManagerLoader = "env"
	OpenMetadataConnectionSecretsManagerLoaderNoop    OpenMetadataConnectionSecretsManagerLoader = "noop"
)

// Defines values for OpenMetadataConnectionSecretsManagerProvider.
const (
	Aws            OpenMetadataConnectionSecretsManagerProvider = "aws"
	AwsSsm         OpenMetadataConnectionSecretsManagerProvider = "aws-ssm"
	AzureKv        OpenMetadataConnectionSecretsManagerProvider = "azure-kv"
	Db             OpenMetadataConnectionSecretsManagerProvider = "db"
	Gcp            OpenMetadataConnectionSecretsManagerProvider = "gcp"
	InMemory       OpenMetadataConnectionSecretsManagerProvider = "in-memory"
	ManagedAws     OpenMetadataConnectionSecretsManagerProvider = "managed-aws"
	ManagedAwsSsm  OpenMetadataConnectionSecretsManagerProvider = "managed-aws-ssm"
	ManagedAzureKv OpenMetadataConnectionSecretsManagerProvider = "managed-azure-kv"
)

// Defines values for OpenMetadataConnectionType.
const (
	OpenMetadataConnectionTypeOpenMetadata OpenMetadataConnectionType = "OpenMetadata"
)

// Defines values for OpenMetadataConnectionVerifySSL.
const (
	Ignore   OpenMetadataConnectionVerifySSL = "ignore"
	NoSsl    OpenMetadataConnectionVerifySSL = "no-ssl"
	Validate OpenMetadataConnectionVerifySSL = "validate"
)

// Defines values for PartitionColumnDetailsIntervalType.
const (
	PartitionColumnDetailsIntervalTypeCOLUMNVALUE   PartitionColumnDetailsIntervalType = "COLUMN-VALUE"
	PartitionColumnDetailsIntervalTypeENUM          PartitionColumnDetailsIntervalType = "ENUM"
	PartitionColumnDetailsIntervalTypeINGESTIONTIME PartitionColumnDetailsIntervalType = "INGESTION-TIME"
	PartitionColumnDetailsIntervalTypeINJECTED      PartitionColumnDetailsIntervalType = "INJECTED"
	PartitionColumnDetailsIntervalTypeINTEGERRANGE  PartitionColumnDetailsIntervalType = "INTEGER-RANGE"
	PartitionColumnDetailsIntervalTypeOTHER         PartitionColumnDetailsIntervalType = "OTHER"
	PartitionColumnDetailsIntervalTypeTIMEUNIT      PartitionColumnDetailsIntervalType = "TIME-UNIT"
)

// Defines values for PartitionProfilerConfigPartitionIntervalType.
const (
	PartitionProfilerConfigPartitionIntervalTypeCOLUMNVALUE   PartitionProfilerConfigPartitionIntervalType = "COLUMN-VALUE"
	PartitionProfilerConfigPartitionIntervalTypeENUM          PartitionProfilerConfigPartitionIntervalType = "ENUM"
	PartitionProfilerConfigPartitionIntervalTypeINGESTIONTIME PartitionProfilerConfigPartitionIntervalType = "INGESTION-TIME"
	PartitionProfilerConfigPartitionIntervalTypeINJECTED      PartitionProfilerConfigPartitionIntervalType = "INJECTED"
	PartitionProfilerConfigPartitionIntervalTypeINTEGERRANGE  PartitionProfilerConfigPartitionIntervalType = "INTEGER-RANGE"
	PartitionProfilerConfigPartitionIntervalTypeOTHER         PartitionProfilerConfigPartitionIntervalType = "OTHER"
	PartitionProfilerConfigPartitionIntervalTypeTIMEUNIT      PartitionProfilerConfigPartitionIntervalType = "TIME-UNIT"
)

// Defines values for PartitionProfilerConfigPartitionIntervalUnit.
const (
	PartitionProfilerConfigPartitionIntervalUnitDAY   PartitionProfilerConfigPartitionIntervalUnit = "DAY"
	PartitionProfilerConfigPartitionIntervalUnitHOUR  PartitionProfilerConfigPartitionIntervalUnit = "HOUR"
	PartitionProfilerConfigPartitionIntervalUnitMONTH PartitionProfilerConfigPartitionIntervalUnit = "MONTH"
	PartitionProfilerConfigPartitionIntervalUnitYEAR  PartitionProfilerConfigPartitionIntervalUnit = "YEAR"
)

// Defines values for PermissionAccess.
const (
	PermissionAccessAllow            PermissionAccess = "allow"
	PermissionAccessConditionalAllow PermissionAccess = "conditionalAllow"
	PermissionAccessConditionalDeny  PermissionAccess = "conditionalDeny"
	PermissionAccessDeny             PermissionAccess = "deny"
	PermissionAccessNotAllow         PermissionAccess = "notAllow"
)

// Defines values for PermissionOperation.
const (
	PermissionOperationAll                              PermissionOperation = "All"
	PermissionOperationCreate                           PermissionOperation = "Create"
	PermissionOperationCreateIngestionPipelineAutomator PermissionOperation = "CreateIngestionPipelineAutomator"
	PermissionOperationDelete                           PermissionOperation = "Delete"
	PermissionOperationDeleteTestCaseFailedRowsSample   PermissionOperation = "DeleteTestCaseFailedRowsSample"
	PermissionOperationDeploy                           PermissionOperation = "Deploy"
	PermissionOperationEditAll                          PermissionOperation = "EditAll"
	PermissionOperationEditCustomFields                 PermissionOperation = "EditCustomFields"
	PermissionOperationEditDataProfile                  PermissionOperation = "EditDataProfile"
	PermissionOperationEditDescription                  PermissionOperation = "EditDescription"
	PermissionOperationEditDisplayName                  PermissionOperation = "EditDisplayName"
	PermissionOperationEditEntityRelationship           PermissionOperation = "EditEntityRelationship"
	PermissionOperationEditGlossaryTerms                PermissionOperation = "EditGlossaryTerms"
	PermissionOperationEditIngestionPipelineStatus      PermissionOperation = "EditIngestionPipelineStatus"
	PermissionOperationEditKnowledgePanel               PermissionOperation = "EditKnowledgePanel"
	PermissionOperationEditLifeCycle                    PermissionOperation = "EditLifeCycle"
	PermissionOperationEditLineage                      PermissionOperation = "EditLineage"
	PermissionOperationEditOwners                       PermissionOperation = "EditOwners"
	PermissionOperationEditPage                         PermissionOperation = "EditPage"
	PermissionOperationEditPolicy                       PermissionOperation = "EditPolicy"
	PermissionOperationEditQueries                      PermissionOperation = "EditQueries"
	PermissionOperationEditReviewers                    PermissionOperation = "EditReviewers"
	PermissionOperationEditRole                         PermissionOperation = "EditRole"
	PermissionOperationEditSampleData                   PermissionOperation = "EditSampleData"
	PermissionOperationEditStatus                       PermissionOperation = "EditStatus"
	PermissionOperationEditTags                         PermissionOperation = "EditTags"
	PermissionOperationEditTeams                        PermissionOperation = "EditTeams"
	PermissionOperationEditTests                        PermissionOperation = "EditTests"
	PermissionOperationEditTier                         PermissionOperation = "EditTier"
	PermissionOperationEditUsage                        PermissionOperation = "EditUsage"
	PermissionOperationEditUsers                        PermissionOperation = "EditUsers"
	PermissionOperationGenerateToken                    PermissionOperation = "GenerateToken"
	PermissionOperationKill                             PermissionOperation = "Kill"
	PermissionOperationTrigger                          PermissionOperation = "Trigger"
	PermissionOperationViewAll                          PermissionOperation = "ViewAll"
	PermissionOperationViewBasic                        PermissionOperation = "ViewBasic"
	PermissionOperationViewDataProfile                  PermissionOperation = "ViewDataProfile"
	PermissionOperationViewProfilerGlobalConfiguration  PermissionOperation = "ViewProfilerGlobalConfiguration"
	PermissionOperationViewQueries                      PermissionOperation = "ViewQueries"
	PermissionOperationViewSampleData                   PermissionOperation = "ViewSampleData"
	PermissionOperationViewTestCaseFailedRowsSample     PermissionOperation = "ViewTestCaseFailedRowsSample"
	PermissionOperationViewTests                        PermissionOperation = "ViewTests"
	PermissionOperationViewUsage                        PermissionOperation = "ViewUsage"
)

// Defines values for PersonaProvider.
const (
	PersonaProviderSystem PersonaProvider = "system"
	PersonaProviderUser   PersonaProvider = "user"
)

// Defines values for PersonalAccessTokenTokenType.
const (
	EMAILVERIFICATION   PersonalAccessTokenTokenType = "EMAIL_VERIFICATION"
	PASSWORDRESET       PersonalAccessTokenTokenType = "PASSWORD_RESET"
	PERSONALACCESSTOKEN PersonalAccessTokenTokenType = "PERSONAL_ACCESS_TOKEN"
	REFRESHTOKEN        PersonalAccessTokenTokenType = "REFRESH_TOKEN"
)

// Defines values for PipelineProvider.
const (
	PipelineProviderSystem PipelineProvider = "system"
	PipelineProviderUser   PipelineProvider = "user"
)

// Defines values for PipelineServiceType.
const (
	PipelineServiceTypeAirbyte            PipelineServiceType = "Airbyte"
	PipelineServiceTypeAirflow            PipelineServiceType = "Airflow"
	PipelineServiceTypeCustomPipeline     PipelineServiceType = "CustomPipeline"
	PipelineServiceTypeDBTCloud           PipelineServiceType = "DBTCloud"
	PipelineServiceTypeDagster            PipelineServiceType = "Dagster"
	PipelineServiceTypeDataFactory        PipelineServiceType = "DataFactory"
	PipelineServiceTypeDatabricksPipeline PipelineServiceType = "DatabricksPipeline"
	PipelineServiceTypeDomoPipeline       PipelineServiceType = "DomoPipeline"
	PipelineServiceTypeFivetran           PipelineServiceType = "Fivetran"
	PipelineServiceTypeFlink              PipelineServiceType = "Flink"
	PipelineServiceTypeGluePipeline       PipelineServiceType = "GluePipeline"
	PipelineServiceTypeKafkaConnect       PipelineServiceType = "KafkaConnect"
	PipelineServiceTypeMatillion          PipelineServiceType = "Matillion"
	PipelineServiceTypeNifi               PipelineServiceType = "Nifi"
	PipelineServiceTypeOpenLineage        PipelineServiceType = "OpenLineage"
	PipelineServiceTypeSpark              PipelineServiceType = "Spark"
	PipelineServiceTypeSpline             PipelineServiceType = "Spline"
	PipelineServiceTypeStitch             PipelineServiceType = "Stitch"
	PipelineServiceTypeWherescape         PipelineServiceType = "Wherescape"
)

// Defines values for PipelineState.
const (
	PipelineStateActive   PipelineState = "Active"
	PipelineStateInactive PipelineState = "Inactive"
)

// Defines values for PipelineServiceProvider.
const (
	PipelineServiceProviderSystem PipelineServiceProvider = "system"
	PipelineServiceProviderUser   PipelineServiceProvider = "user"
)

// Defines values for PipelineServiceServiceType.
const (
	Airbyte            PipelineServiceServiceType = "Airbyte"
	Airflow            PipelineServiceServiceType = "Airflow"
	CustomPipeline     PipelineServiceServiceType = "CustomPipeline"
	DBTCloud           PipelineServiceServiceType = "DBTCloud"
	Dagster            PipelineServiceServiceType = "Dagster"
	DataFactory        PipelineServiceServiceType = "DataFactory"
	DatabricksPipeline PipelineServiceServiceType = "DatabricksPipeline"
	DomoPipeline       PipelineServiceServiceType = "DomoPipeline"
	Fivetran           PipelineServiceServiceType = "Fivetran"
	Flink              PipelineServiceServiceType = "Flink"
	GluePipeline       PipelineServiceServiceType = "GluePipeline"
	KafkaConnect       PipelineServiceServiceType = "KafkaConnect"
	Matillion          PipelineServiceServiceType = "Matillion"
	Nifi               PipelineServiceServiceType = "Nifi"
	OpenLineage        PipelineServiceServiceType = "OpenLineage"
	Spark              PipelineServiceServiceType = "Spark"
	Spline             PipelineServiceServiceType = "Spline"
	Stitch             PipelineServiceServiceType = "Stitch"
	Wherescape         PipelineServiceServiceType = "Wherescape"
)

// Defines values for PipelineStatusPipelineState.
const (
	PipelineStatusPipelineStateFailed         PipelineStatusPipelineState = "failed"
	PipelineStatusPipelineStatePartialSuccess PipelineStatusPipelineState = "partialSuccess"
	PipelineStatusPipelineStateQueued         PipelineStatusPipelineState = "queued"
	PipelineStatusPipelineStateRunning        PipelineStatusPipelineState = "running"
	PipelineStatusPipelineStateSuccess        PipelineStatusPipelineState = "success"
)

// Defines values for PolicyProvider.
const (
	PolicyProviderSystem PolicyProvider = "system"
	PolicyProviderUser   PolicyProvider = "user"
)

// Defines values for PreviewSearchRequestSortOrder.
const (
	PreviewSearchRequestSortOrderAsc  PreviewSearchRequestSortOrder = "asc"
	PreviewSearchRequestSortOrderDesc PreviewSearchRequestSortOrder = "desc"
)

// Defines values for QueryProvider.
const (
	QueryProviderSystem QueryProvider = "system"
	QueryProviderUser   QueryProvider = "user"
)

// Defines values for ReactionReactionType.
const (
	Confused   ReactionReactionType = "confused"
	Eyes       ReactionReactionType = "eyes"
	Heart      ReactionReactionType = "heart"
	Hooray     ReactionReactionType = "hooray"
	Laugh      ReactionReactionType = "laugh"
	Rocket     ReactionReactionType = "rocket"
	ThumbsDown ReactionReactionType = "thumbsDown"
	ThumbsUp   ReactionReactionType = "thumbsUp"
)

// Defines values for ReportProvider.
const (
	ReportProviderSystem ReportProvider = "system"
	ReportProviderUser   ReportProvider = "user"
)

// Defines values for ResolveTaskTestCaseFailureReason.
const (
	ResolveTaskTestCaseFailureReasonDuplicates    ResolveTaskTestCaseFailureReason = "Duplicates"
	ResolveTaskTestCaseFailureReasonFalsePositive ResolveTaskTestCaseFailureReason = "FalsePositive"
	ResolveTaskTestCaseFailureReasonMissingData   ResolveTaskTestCaseFailureReason = "MissingData"
	ResolveTaskTestCaseFailureReasonOther         ResolveTaskTestCaseFailureReason = "Other"
	ResolveTaskTestCaseFailureReasonOutOfBounds   ResolveTaskTestCaseFailureReason = "OutOfBounds"
)

// Defines values for ResourceDescriptorOperations.
const (
	ResourceDescriptorOperationsAll                              ResourceDescriptorOperations = "All"
	ResourceDescriptorOperationsCreate                           ResourceDescriptorOperations = "Create"
	ResourceDescriptorOperationsCreateIngestionPipelineAutomator ResourceDescriptorOperations = "CreateIngestionPipelineAutomator"
	ResourceDescriptorOperationsDelete                           ResourceDescriptorOperations = "Delete"
	ResourceDescriptorOperationsDeleteTestCaseFailedRowsSample   ResourceDescriptorOperations = "DeleteTestCaseFailedRowsSample"
	ResourceDescriptorOperationsDeploy                           ResourceDescriptorOperations = "Deploy"
	ResourceDescriptorOperationsEditAll                          ResourceDescriptorOperations = "EditAll"
	ResourceDescriptorOperationsEditCustomFields                 ResourceDescriptorOperations = "EditCustomFields"
	ResourceDescriptorOperationsEditDataProfile                  ResourceDescriptorOperations = "EditDataProfile"
	ResourceDescriptorOperationsEditDescription                  ResourceDescriptorOperations = "EditDescription"
	ResourceDescriptorOperationsEditDisplayName                  ResourceDescriptorOperations = "EditDisplayName"
	ResourceDescriptorOperationsEditEntityRelationship           ResourceDescriptorOperations = "EditEntityRelationship"
	ResourceDescriptorOperationsEditGlossaryTerms                ResourceDescriptorOperations = "EditGlossaryTerms"
	ResourceDescriptorOperationsEditIngestionPipelineStatus      ResourceDescriptorOperations = "EditIngestionPipelineStatus"
	ResourceDescriptorOperationsEditKnowledgePanel               ResourceDescriptorOperations = "EditKnowledgePanel"
	ResourceDescriptorOperationsEditLifeCycle                    ResourceDescriptorOperations = "EditLifeCycle"
	ResourceDescriptorOperationsEditLineage                      ResourceDescriptorOperations = "EditLineage"
	ResourceDescriptorOperationsEditOwners                       ResourceDescriptorOperations = "EditOwners"
	ResourceDescriptorOperationsEditPage                         ResourceDescriptorOperations = "EditPage"
	ResourceDescriptorOperationsEditPolicy                       ResourceDescriptorOperations = "EditPolicy"
	ResourceDescriptorOperationsEditQueries                      ResourceDescriptorOperations = "EditQueries"
	ResourceDescriptorOperationsEditReviewers                    ResourceDescriptorOperations = "EditReviewers"
	ResourceDescriptorOperationsEditRole                         ResourceDescriptorOperations = "EditRole"
	ResourceDescriptorOperationsEditSampleData                   ResourceDescriptorOperations = "EditSampleData"
	ResourceDescriptorOperationsEditStatus                       ResourceDescriptorOperations = "EditStatus"
	ResourceDescriptorOperationsEditTags                         ResourceDescriptorOperations = "EditTags"
	ResourceDescriptorOperationsEditTeams                        ResourceDescriptorOperations = "EditTeams"
	ResourceDescriptorOperationsEditTests                        ResourceDescriptorOperations = "EditTests"
	ResourceDescriptorOperationsEditTier                         ResourceDescriptorOperations = "EditTier"
	ResourceDescriptorOperationsEditUsage                        ResourceDescriptorOperations = "EditUsage"
	ResourceDescriptorOperationsEditUsers                        ResourceDescriptorOperations = "EditUsers"
	ResourceDescriptorOperationsGenerateToken                    ResourceDescriptorOperations = "GenerateToken"
	ResourceDescriptorOperationsKill                             ResourceDescriptorOperations = "Kill"
	ResourceDescriptorOperationsTrigger                          ResourceDescriptorOperations = "Trigger"
	ResourceDescriptorOperationsViewAll                          ResourceDescriptorOperations = "ViewAll"
	ResourceDescriptorOperationsViewBasic                        ResourceDescriptorOperations = "ViewBasic"
	ResourceDescriptorOperationsViewDataProfile                  ResourceDescriptorOperations = "ViewDataProfile"
	ResourceDescriptorOperationsViewProfilerGlobalConfiguration  ResourceDescriptorOperations = "ViewProfilerGlobalConfiguration"
	ResourceDescriptorOperationsViewQueries                      ResourceDescriptorOperations = "ViewQueries"
	ResourceDescriptorOperationsViewSampleData                   ResourceDescriptorOperations = "ViewSampleData"
	ResourceDescriptorOperationsViewTestCaseFailedRowsSample     ResourceDescriptorOperations = "ViewTestCaseFailedRowsSample"
	ResourceDescriptorOperationsViewTests                        ResourceDescriptorOperations = "ViewTests"
	ResourceDescriptorOperationsViewUsage                        ResourceDescriptorOperations = "ViewUsage"
)

// Defines values for ResultSummaryStatus.
const (
	ResultSummaryStatusAborted ResultSummaryStatus = "Aborted"
	ResultSummaryStatusFailed  ResultSummaryStatus = "Failed"
	ResultSummaryStatusQueued  ResultSummaryStatus = "Queued"
	ResultSummaryStatusSuccess ResultSummaryStatus = "Success"
)

// Defines values for RoleProvider.
const (
	RoleProviderSystem RoleProvider = "system"
	RoleProviderUser   RoleProvider = "user"
)

// Defines values for RuleEffect.
const (
	RuleEffectAllow RuleEffect = "allow"
	RuleEffectDeny  RuleEffect = "deny"
)

// Defines values for RuleOperations.
const (
	RuleOperationsAll                              RuleOperations = "All"
	RuleOperationsCreate                           RuleOperations = "Create"
	RuleOperationsCreateIngestionPipelineAutomator RuleOperations = "CreateIngestionPipelineAutomator"
	RuleOperationsDelete                           RuleOperations = "Delete"
	RuleOperationsDeleteTestCaseFailedRowsSample   RuleOperations = "DeleteTestCaseFailedRowsSample"
	RuleOperationsDeploy                           RuleOperations = "Deploy"
	RuleOperationsEditAll                          RuleOperations = "EditAll"
	RuleOperationsEditCustomFields                 RuleOperations = "EditCustomFields"
	RuleOperationsEditDataProfile                  RuleOperations = "EditDataProfile"
	RuleOperationsEditDescription                  RuleOperations = "EditDescription"
	RuleOperationsEditDisplayName                  RuleOperations = "EditDisplayName"
	RuleOperationsEditEntityRelationship           RuleOperations = "EditEntityRelationship"
	RuleOperationsEditGlossaryTerms                RuleOperations = "EditGlossaryTerms"
	RuleOperationsEditIngestionPipelineStatus      RuleOperations = "EditIngestionPipelineStatus"
	RuleOperationsEditKnowledgePanel               RuleOperations = "EditKnowledgePanel"
	RuleOperationsEditLifeCycle                    RuleOperations = "EditLifeCycle"
	RuleOperationsEditLineage                      RuleOperations = "EditLineage"
	RuleOperationsEditOwners                       RuleOperations = "EditOwners"
	RuleOperationsEditPage                         RuleOperations = "EditPage"
	RuleOperationsEditPolicy                       RuleOperations = "EditPolicy"
	RuleOperationsEditQueries                      RuleOperations = "EditQueries"
	RuleOperationsEditReviewers                    RuleOperations = "EditReviewers"
	RuleOperationsEditRole                         RuleOperations = "EditRole"
	RuleOperationsEditSampleData                   RuleOperations = "EditSampleData"
	RuleOperationsEditStatus                       RuleOperations = "EditStatus"
	RuleOperationsEditTags                         RuleOperations = "EditTags"
	RuleOperationsEditTeams                        RuleOperations = "EditTeams"
	RuleOperationsEditTests                        RuleOperations = "EditTests"
	RuleOperationsEditTier                         RuleOperations = "EditTier"
	RuleOperationsEditUsage                        RuleOperations = "EditUsage"
	RuleOperationsEditUsers                        RuleOperations = "EditUsers"
	RuleOperationsGenerateToken                    RuleOperations = "GenerateToken"
	RuleOperationsKill                             RuleOperations = "Kill"
	RuleOperationsTrigger                          RuleOperations = "Trigger"
	RuleOperationsViewAll                          RuleOperations = "ViewAll"
	RuleOperationsViewBasic                        RuleOperations = "ViewBasic"
	RuleOperationsViewDataProfile                  RuleOperations = "ViewDataProfile"
	RuleOperationsViewProfilerGlobalConfiguration  RuleOperations = "ViewProfilerGlobalConfiguration"
	RuleOperationsViewQueries                      RuleOperations = "ViewQueries"
	RuleOperationsViewSampleData                   RuleOperations = "ViewSampleData"
	RuleOperationsViewTestCaseFailedRowsSample     RuleOperations = "ViewTestCaseFailedRowsSample"
	RuleOperationsViewTests                        RuleOperations = "ViewTests"
	RuleOperationsViewUsage                        RuleOperations = "ViewUsage"
)

// Defines values for SearchIndexIndexType.
const (
	SearchIndexIndexTypeIndex         SearchIndexIndexType = "Index"
	SearchIndexIndexTypeIndexTemplate SearchIndexIndexType = "IndexTemplate"
)

// Defines values for SearchIndexProvider.
const (
	SearchIndexProviderSystem SearchIndexProvider = "system"
	SearchIndexProviderUser   SearchIndexProvider = "user"
)

// Defines values for SearchIndexServiceType.
const (
	SearchIndexServiceTypeCustomSearch  SearchIndexServiceType = "CustomSearch"
	SearchIndexServiceTypeElasticSearch SearchIndexServiceType = "ElasticSearch"
	SearchIndexServiceTypeOpenSearch    SearchIndexServiceType = "OpenSearch"
)

// Defines values for SearchIndexFieldDataType.
const (
	SearchIndexFieldDataTypeAGGREGATEMETRICDOUBLE SearchIndexFieldDataType = "AGGREGATE_METRIC_DOUBLE"
	SearchIndexFieldDataTypeANNOTATEDTEXT         SearchIndexFieldDataType = "ANNOTATED-TEXT"
	SearchIndexFieldDataTypeARRAY                 SearchIndexFieldDataType = "ARRAY"
	SearchIndexFieldDataTypeBINARY                SearchIndexFieldDataType = "BINARY"
	SearchIndexFieldDataTypeBOOLEAN               SearchIndexFieldDataType = "BOOLEAN"
	SearchIndexFieldDataTypeBYTE                  SearchIndexFieldDataType = "BYTE"
	SearchIndexFieldDataTypeCOMPLETION            SearchIndexFieldDataType = "COMPLETION"
	SearchIndexFieldDataTypeCONSTANTKEYWORD       SearchIndexFieldDataType = "CONSTANT_KEYWORD"
	SearchIndexFieldDataTypeDATE                  SearchIndexFieldDataType = "DATE"
	SearchIndexFieldDataTypeDATETIME              SearchIndexFieldDataType = "DATETIME"
	SearchIndexFieldDataTypeDENSEVECTOR           SearchIndexFieldDataType = "DENSE_VECTOR"
	SearchIndexFieldDataTypeDOUBLE                SearchIndexFieldDataType = "DOUBLE"
	SearchIndexFieldDataTypeFLATTENED             SearchIndexFieldDataType = "FLATTENED"
	SearchIndexFieldDataTypeFLOAT                 SearchIndexFieldDataType = "FLOAT"
	SearchIndexFieldDataTypeGEOPOINT              SearchIndexFieldDataType = "GEO_POINT"
	SearchIndexFieldDataTypeGEOSHAPE              SearchIndexFieldDataType = "GEO_SHAPE"
	SearchIndexFieldDataTypeHALFFLOAT             SearchIndexFieldDataType = "HALF_FLOAT"
	SearchIndexFieldDataTypeHISTOGRAM             SearchIndexFieldDataType = "HISTOGRAM"
	SearchIndexFieldDataTypeINTEGER               SearchIndexFieldDataType = "INTEGER"
	SearchIndexFieldDataTypeIP                    SearchIndexFieldDataType = "IP"
	SearchIndexFieldDataTypeJOIN                  SearchIndexFieldDataType = "JOIN"
	SearchIndexFieldDataTypeKEYWORD               SearchIndexFieldDataType = "KEYWORD"
	SearchIndexFieldDataTypeLONG                  SearchIndexFieldDataType = "LONG"
	SearchIndexFieldDataTypeMURMUR3               SearchIndexFieldDataType = "MURMUR3"
	SearchIndexFieldDataTypeNESTED                SearchIndexFieldDataType = "NESTED"
	SearchIndexFieldDataTypeNUMBER                SearchIndexFieldDataType = "NUMBER"
	SearchIndexFieldDataTypeOBJECT                SearchIndexFieldDataType = "OBJECT"
	SearchIndexFieldDataTypePERCOLATOR            SearchIndexFieldDataType = "PERCOLATOR"
	SearchIndexFieldDataTypePOINT                 SearchIndexFieldDataType = "POINT"
	SearchIndexFieldDataTypeRANGE                 SearchIndexFieldDataType = "RANGE"
	SearchIndexFieldDataTypeRANKFEATURE           SearchIndexFieldDataType = "RANK_FEATURE"
	SearchIndexFieldDataTypeRANKFEATURES          SearchIndexFieldDataType = "RANK_FEATURES"
	SearchIndexFieldDataTypeSCALEDFLOAT           SearchIndexFieldDataType = "SCALED_FLOAT"
	SearchIndexFieldDataTypeSEARCHASYOUTYPE       SearchIndexFieldDataType = "SEARCH_AS_YOU_TYPE"
	SearchIndexFieldDataTypeSHAPE                 SearchIndexFieldDataType = "SHAPE"
	SearchIndexFieldDataTypeSHORT                 SearchIndexFieldDataType = "SHORT"
	SearchIndexFieldDataTypeTEXT                  SearchIndexFieldDataType = "TEXT"
	SearchIndexFieldDataTypeTIME                  SearchIndexFieldDataType = "TIME"
	SearchIndexFieldDataTypeTIMESTAMP             SearchIndexFieldDataType = "TIMESTAMP"
	SearchIndexFieldDataTypeTIMESTAMPZ            SearchIndexFieldDataType = "TIMESTAMPZ"
	SearchIndexFieldDataTypeUNKNOWN               SearchIndexFieldDataType = "UNKNOWN"
	SearchIndexFieldDataTypeUNSIGNEDLONG          SearchIndexFieldDataType = "UNSIGNED_LONG"
	SearchIndexFieldDataTypeVERSION               SearchIndexFieldDataType = "VERSION"
	SearchIndexFieldDataTypeWILDCARD              SearchIndexFieldDataType = "WILDCARD"
)

// Defines values for SearchServiceProvider.
const (
	SearchServiceProviderSystem SearchServiceProvider = "system"
	SearchServiceProviderUser   SearchServiceProvider = "user"
)

// Defines values for SearchServiceServiceType.
const (
	CustomSearch  SearchServiceServiceType = "CustomSearch"
	ElasticSearch SearchServiceServiceType = "ElasticSearch"
	OpenSearch    SearchServiceServiceType = "OpenSearch"
)

// Defines values for SortFieldType.
const (
	SortFieldTypeCUSTOM      SortFieldType = "CUSTOM"
	SortFieldTypeDOC         SortFieldType = "DOC"
	SortFieldTypeDOUBLE      SortFieldType = "DOUBLE"
	SortFieldTypeFLOAT       SortFieldType = "FLOAT"
	SortFieldTypeINT         SortFieldType = "INT"
	SortFieldTypeLONG        SortFieldType = "LONG"
	SortFieldTypeREWRITEABLE SortFieldType = "REWRITEABLE"
	SortFieldTypeSCORE       SortFieldType = "SCORE"
	SortFieldTypeSTRING      SortFieldType = "STRING"
	SortFieldTypeSTRINGVAL   SortFieldType = "STRING_VAL"
)

// Defines values for StorageServiceProvider.
const (
	StorageServiceProviderSystem StorageServiceProvider = "system"
	StorageServiceProviderUser   StorageServiceProvider = "user"
)

// Defines values for StorageServiceServiceType.
const (
	ADLS          StorageServiceServiceType = "ADLS"
	CustomStorage StorageServiceServiceType = "CustomStorage"
	GCS           StorageServiceServiceType = "GCS"
	S3            StorageServiceServiceType = "S3"
)

// Defines values for StoredProcedureProvider.
const (
	StoredProcedureProviderSystem StoredProcedureProvider = "system"
	StoredProcedureProviderUser   StoredProcedureProvider = "user"
)

// Defines values for StoredProcedureServiceType.
const (
	StoredProcedureServiceTypeAthena         StoredProcedureServiceType = "Athena"
	StoredProcedureServiceTypeAzureSQL       StoredProcedureServiceType = "AzureSQL"
	StoredProcedureServiceTypeBigQuery       StoredProcedureServiceType = "BigQuery"
	StoredProcedureServiceTypeBigTable       StoredProcedureServiceType = "BigTable"
	StoredProcedureServiceTypeCassandra      StoredProcedureServiceType = "Cassandra"
	StoredProcedureServiceTypeClickhouse     StoredProcedureServiceType = "Clickhouse"
	StoredProcedureServiceTypeCockroach      StoredProcedureServiceType = "Cockroach"
	StoredProcedureServiceTypeCouchbase      StoredProcedureServiceType = "Couchbase"
	StoredProcedureServiceTypeCustomDatabase StoredProcedureServiceType = "CustomDatabase"
	StoredProcedureServiceTypeDatabricks     StoredProcedureServiceType = "Databricks"
	StoredProcedureServiceTypeDatalake       StoredProcedureServiceType = "Datalake"
	StoredProcedureServiceTypeDb2            StoredProcedureServiceType = "Db2"
	StoredProcedureServiceTypeDbt            StoredProcedureServiceType = "Dbt"
	StoredProcedureServiceTypeDeltaLake      StoredProcedureServiceType = "DeltaLake"
	StoredProcedureServiceTypeDomoDatabase   StoredProcedureServiceType = "DomoDatabase"
	StoredProcedureServiceTypeDoris          StoredProcedureServiceType = "Doris"
	StoredProcedureServiceTypeDruid          StoredProcedureServiceType = "Druid"
	StoredProcedureServiceTypeDynamoDB       StoredProcedureServiceType = "DynamoDB"
	StoredProcedureServiceTypeExasol         StoredProcedureServiceType = "Exasol"
	StoredProcedureServiceTypeGlue           StoredProcedureServiceType = "Glue"
	StoredProcedureServiceTypeGreenplum      StoredProcedureServiceType = "Greenplum"
	StoredProcedureServiceTypeHive           StoredProcedureServiceType = "Hive"
	StoredProcedureServiceTypeIceberg        StoredProcedureServiceType = "Iceberg"
	StoredProcedureServiceTypeImpala         StoredProcedureServiceType = "Impala"
	StoredProcedureServiceTypeMariaDB        StoredProcedureServiceType = "MariaDB"
	StoredProcedureServiceTypeMongoDB        StoredProcedureServiceType = "MongoDB"
	StoredProcedureServiceTypeMssql          StoredProcedureServiceType = "Mssql"
	StoredProcedureServiceTypeMysql          StoredProcedureServiceType = "Mysql"
	StoredProcedureServiceTypeOracle         StoredProcedureServiceType = "Oracle"
	StoredProcedureServiceTypePinotDB        StoredProcedureServiceType = "PinotDB"
	StoredProcedureServiceTypePostgres       StoredProcedureServiceType = "Postgres"
	StoredProcedureServiceTypePresto         StoredProcedureServiceType = "Presto"
	StoredProcedureServiceTypeQueryLog       StoredProcedureServiceType = "QueryLog"
	StoredProcedureServiceTypeRedshift       StoredProcedureServiceType = "Redshift"
	StoredProcedureServiceTypeSAS            StoredProcedureServiceType = "SAS"
	StoredProcedureServiceTypeSQLite         StoredProcedureServiceType = "SQLite"
	StoredProcedureServiceTypeSalesforce     StoredProcedureServiceType = "Salesforce"
	StoredProcedureServiceTypeSapErp         StoredProcedureServiceType = "SapErp"
	StoredProcedureServiceTypeSapHana        StoredProcedureServiceType = "SapHana"
	StoredProcedureServiceTypeSingleStore    StoredProcedureServiceType = "SingleStore"
	StoredProcedureServiceTypeSnowflake      StoredProcedureServiceType = "Snowflake"
	StoredProcedureServiceTypeSynapse        StoredProcedureServiceType = "Synapse"
	StoredProcedureServiceTypeTeradata       StoredProcedureServiceType = "Teradata"
	StoredProcedureServiceTypeTrino          StoredProcedureServiceType = "Trino"
	StoredProcedureServiceTypeUnityCatalog   StoredProcedureServiceType = "UnityCatalog"
	StoredProcedureServiceTypeVertica        StoredProcedureServiceType = "Vertica"
)

// Defines values for StoredProcedureStoredProcedureType.
const (
	StoredProcedureStoredProcedureTypeFunction        StoredProcedureStoredProcedureType = "Function"
	StoredProcedureStoredProcedureTypeStoredPackage   StoredProcedureStoredProcedureType = "StoredPackage"
	StoredProcedureStoredProcedureTypeStoredProcedure StoredProcedureStoredProcedureType = "StoredProcedure"
	StoredProcedureStoredProcedureTypeUDF             StoredProcedureStoredProcedureType = "UDF"
)

// Defines values for StoredProcedureCodeLanguage.
const (
	StoredProcedureCodeLanguageExternal   StoredProcedureCodeLanguage = "External"
	StoredProcedureCodeLanguageJava       StoredProcedureCodeLanguage = "Java"
	StoredProcedureCodeLanguageJavaScript StoredProcedureCodeLanguage = "JavaScript"
	StoredProcedureCodeLanguagePython     StoredProcedureCodeLanguage = "Python"
	StoredProcedureCodeLanguageSQL        StoredProcedureCodeLanguage = "SQL"
)

// Defines values for SubscriptionDestinationCategory.
const (
	SubscriptionDestinationCategoryAdmins    SubscriptionDestinationCategory = "Admins"
	SubscriptionDestinationCategoryAssignees SubscriptionDestinationCategory = "Assignees"
	SubscriptionDestinationCategoryExternal  SubscriptionDestinationCategory = "External"
	SubscriptionDestinationCategoryFollowers SubscriptionDestinationCategory = "Followers"
	SubscriptionDestinationCategoryMentions  SubscriptionDestinationCategory = "Mentions"
	SubscriptionDestinationCategoryOwners    SubscriptionDestinationCategory = "Owners"
	SubscriptionDestinationCategoryTeams     SubscriptionDestinationCategory = "Teams"
	SubscriptionDestinationCategoryUsers     SubscriptionDestinationCategory = "Users"
)

// Defines values for SubscriptionDestinationType.
const (
	SubscriptionDestinationTypeActivityFeed                  SubscriptionDestinationType = "ActivityFeed"
	SubscriptionDestinationTypeEmail                         SubscriptionDestinationType = "Email"
	SubscriptionDestinationTypeGChat                         SubscriptionDestinationType = "GChat"
	SubscriptionDestinationTypeGovernanceWorkflowChangeEvent SubscriptionDestinationType = "GovernanceWorkflowChangeEvent"
	SubscriptionDestinationTypeMsTeams                       SubscriptionDestinationType = "MsTeams"
	SubscriptionDestinationTypeSlack                         SubscriptionDestinationType = "Slack"
	SubscriptionDestinationTypeWebhook                       SubscriptionDestinationType = "Webhook"
)

// Defines values for SubscriptionStatusStatus.
const (
	SubscriptionStatusStatusActive            SubscriptionStatusStatus = "active"
	SubscriptionStatusStatusAwaitingRetry     SubscriptionStatusStatus = "awaitingRetry"
	SubscriptionStatusStatusDisabled          SubscriptionStatusStatus = "disabled"
	SubscriptionStatusStatusFailed            SubscriptionStatusStatus = "failed"
	SubscriptionStatusStatusRetryLimitReached SubscriptionStatusStatus = "retryLimitReached"
)

// Defines values for SuggestionStatus.
const (
	SuggestionStatusAccepted SuggestionStatus = "Accepted"
	SuggestionStatusOpen     SuggestionStatus = "Open"
	SuggestionStatusRejected SuggestionStatus = "Rejected"
)

// Defines values for SuggestionType.
const (
	SuggestionTypeSuggestDescription SuggestionType = "SuggestDescription"
	SuggestionTypeSuggestTagLabel    SuggestionType = "SuggestTagLabel"
)

// Defines values for SystemProfileOperation.
const (
	DELETE SystemProfileOperation = "DELETE"
	INSERT SystemProfileOperation = "INSERT"
	UPDATE SystemProfileOperation = "UPDATE"
)

// Defines values for TableFileFormat.
const (
	Avro     TableFileFormat = "avro"
	Csv      TableFileFormat = "csv"
	Json     TableFileFormat = "json"
	JsonGz   TableFileFormat = "json.gz"
	JsonZip  TableFileFormat = "json.zip"
	Jsonl    TableFileFormat = "jsonl"
	JsonlGz  TableFileFormat = "jsonl.gz"
	JsonlZip TableFileFormat = "jsonl.zip"
	Parquet  TableFileFormat = "parquet"
	Tsv      TableFileFormat = "tsv"
)

// Defines values for TableProvider.
const (
	TableProviderSystem TableProvider = "system"
	TableProviderUser   TableProvider = "user"
)

// Defines values for TableServiceType.
const (
	Athena         TableServiceType = "Athena"
	AzureSQL       TableServiceType = "AzureSQL"
	BigQuery       TableServiceType = "BigQuery"
	BigTable       TableServiceType = "BigTable"
	Cassandra      TableServiceType = "Cassandra"
	Clickhouse     TableServiceType = "Clickhouse"
	Cockroach      TableServiceType = "Cockroach"
	Couchbase      TableServiceType = "Couchbase"
	CustomDatabase TableServiceType = "CustomDatabase"
	Databricks     TableServiceType = "Databricks"
	Datalake       TableServiceType = "Datalake"
	Db2            TableServiceType = "Db2"
	Dbt            TableServiceType = "Dbt"
	DeltaLake      TableServiceType = "DeltaLake"
	DomoDatabase   TableServiceType = "DomoDatabase"
	Doris          TableServiceType = "Doris"
	Druid          TableServiceType = "Druid"
	DynamoDB       TableServiceType = "DynamoDB"
	Exasol         TableServiceType = "Exasol"
	Glue           TableServiceType = "Glue"
	Greenplum      TableServiceType = "Greenplum"
	Hive           TableServiceType = "Hive"
	Iceberg        TableServiceType = "Iceberg"
	Impala         TableServiceType = "Impala"
	MariaDB        TableServiceType = "MariaDB"
	MongoDB        TableServiceType = "MongoDB"
	Mssql          TableServiceType = "Mssql"
	Mysql          TableServiceType = "Mysql"
	Oracle         TableServiceType = "Oracle"
	PinotDB        TableServiceType = "PinotDB"
	Postgres       TableServiceType = "Postgres"
	Presto         TableServiceType = "Presto"
	QueryLog       TableServiceType = "QueryLog"
	Redshift       TableServiceType = "Redshift"
	SAS            TableServiceType = "SAS"
	SQLite         TableServiceType = "SQLite"
	Salesforce     TableServiceType = "Salesforce"
	SapErp         TableServiceType = "SapErp"
	SapHana        TableServiceType = "SapHana"
	SingleStore    TableServiceType = "SingleStore"
	Snowflake      TableServiceType = "Snowflake"
	Synapse        TableServiceType = "Synapse"
	Teradata       TableServiceType = "Teradata"
	Trino          TableServiceType = "Trino"
	UnityCatalog   TableServiceType = "UnityCatalog"
	Vertica        TableServiceType = "Vertica"
)

// Defines values for TableTableType.
const (
	TableTableTypeDynamic          TableTableType = "Dynamic"
	TableTableTypeExternal         TableTableType = "External"
	TableTableTypeForeign          TableTableType = "Foreign"
	TableTableTypeIceberg          TableTableType = "Iceberg"
	TableTableTypeLocal            TableTableType = "Local"
	TableTableTypeMaterializedView TableTableType = "MaterializedView"
	TableTableTypePartitioned      TableTableType = "Partitioned"
	TableTableTypeRegular          TableTableType = "Regular"
	TableTableTypeSecureView       TableTableType = "SecureView"
	TableTableTypeStream           TableTableType = "Stream"
	TableTableTypeTransient        TableTableType = "Transient"
	TableTableTypeView             TableTableType = "View"
)

// Defines values for TableConstraintConstraintType.
const (
	CLUSTERKEY TableConstraintConstraintType = "CLUSTER_KEY"
	DISTKEY    TableConstraintConstraintType = "DIST_KEY"
	FOREIGNKEY TableConstraintConstraintType = "FOREIGN_KEY"
	PRIMARYKEY TableConstraintConstraintType = "PRIMARY_KEY"
	SORTKEY    TableConstraintConstraintType = "SORT_KEY"
	UNIQUE     TableConstraintConstraintType = "UNIQUE"
)

// Defines values for TableConstraintRelationshipType.
const (
	MANYTOMANY TableConstraintRelationshipType = "MANY_TO_MANY"
	MANYTOONE  TableConstraintRelationshipType = "MANY_TO_ONE"
	ONETOMANY  TableConstraintRelationshipType = "ONE_TO_MANY"
	ONETOONE   TableConstraintRelationshipType = "ONE_TO_ONE"
)

// Defines values for TableProfileProfileSampleType.
const (
	TableProfileProfileSampleTypePERCENTAGE TableProfileProfileSampleType = "PERCENTAGE"
	TableProfileProfileSampleTypeROWS       TableProfileProfileSampleType = "ROWS"
)

// Defines values for TableProfileSamplingMethodType.
const (
	TableProfileSamplingMethodTypeBERNOULLI TableProfileSamplingMethodType = "BERNOULLI"
	TableProfileSamplingMethodTypeSYSTEM    TableProfileSamplingMethodType = "SYSTEM"
)

// Defines values for TableProfilerConfigProfileSampleType.
const (
	TableProfilerConfigProfileSampleTypePERCENTAGE TableProfilerConfigProfileSampleType = "PERCENTAGE"
	TableProfilerConfigProfileSampleTypeROWS       TableProfilerConfigProfileSampleType = "ROWS"
)

// Defines values for TableProfilerConfigSamplingMethodType.
const (
	TableProfilerConfigSamplingMethodTypeBERNOULLI TableProfilerConfigSamplingMethodType = "BERNOULLI"
	TableProfilerConfigSamplingMethodTypeSYSTEM    TableProfilerConfigSamplingMethodType = "SYSTEM"
)

// Defines values for TagProvider.
const (
	TagProviderSystem TagProvider = "system"
	TagProviderUser   TagProvider = "user"
)

// Defines values for TagLabelLabelType.
const (
	TagLabelLabelTypeAutomated  TagLabelLabelType = "Automated"
	TagLabelLabelTypeDerived    TagLabelLabelType = "Derived"
	TagLabelLabelTypeManual     TagLabelLabelType = "Manual"
	TagLabelLabelTypePropagated TagLabelLabelType = "Propagated"
)

// Defines values for TagLabelSource.
const (
	TagLabelSourceClassification TagLabelSource = "Classification"
	TagLabelSourceGlossary       TagLabelSource = "Glossary"
)

// Defines values for TagLabelState.
const (
	TagLabelStateConfirmed TagLabelState = "Confirmed"
	TagLabelStateSuggested TagLabelState = "Suggested"
)

// Defines values for TaskDetailsStatus.
const (
	TaskDetailsStatusClosed TaskDetailsStatus = "Closed"
	TaskDetailsStatusOpen   TaskDetailsStatus = "Open"
)

// Defines values for TaskDetailsType.
const (
	TaskDetailsTypeGeneric                          TaskDetailsType = "Generic"
	TaskDetailsTypeRequestApproval                  TaskDetailsType = "RequestApproval"
	TaskDetailsTypeRequestDescription               TaskDetailsType = "RequestDescription"
	TaskDetailsTypeRequestTag                       TaskDetailsType = "RequestTag"
	TaskDetailsTypeRequestTestCaseFailureResolution TaskDetailsType = "RequestTestCaseFailureResolution"
	TaskDetailsTypeUpdateDescription                TaskDetailsType = "UpdateDescription"
	TaskDetailsTypeUpdateTag                        TaskDetailsType = "UpdateTag"
)

// Defines values for TeamProvider.
const (
	TeamProviderSystem TeamProvider = "system"
	TeamProviderUser   TeamProvider = "user"
)

// Defines values for TeamTeamType.
const (
	TeamTeamTypeBusinessUnit TeamTeamType = "BusinessUnit"
	TeamTeamTypeDepartment   TeamTeamType = "Department"
	TeamTeamTypeDivision     TeamTeamType = "Division"
	TeamTeamTypeGroup        TeamTeamType = "Group"
	TeamTeamTypeOrganization TeamTeamType = "Organization"
)

// Defines values for TeamHierarchyTeamType.
const (
	BusinessUnit TeamHierarchyTeamType = "BusinessUnit"
	Department   TeamHierarchyTeamType = "Department"
	Division     TeamHierarchyTeamType = "Division"
	Group        TeamHierarchyTeamType = "Group"
	Organization TeamHierarchyTeamType = "Organization"
)

// Defines values for TestCaseProvider.
const (
	TestCaseProviderSystem TestCaseProvider = "system"
	TestCaseProviderUser   TestCaseProvider = "user"
)

// Defines values for TestCaseTestCaseStatus.
const (
	TestCaseTestCaseStatusAborted TestCaseTestCaseStatus = "Aborted"
	TestCaseTestCaseStatusFailed  TestCaseTestCaseStatus = "Failed"
	TestCaseTestCaseStatusQueued  TestCaseTestCaseStatus = "Queued"
	TestCaseTestCaseStatusSuccess TestCaseTestCaseStatus = "Success"
)

// Defines values for TestCaseParameterDataType.
const (
	TestCaseParameterDataTypeARRAY     TestCaseParameterDataType = "ARRAY"
	TestCaseParameterDataTypeBOOLEAN   TestCaseParameterDataType = "BOOLEAN"
	TestCaseParameterDataTypeDATE      TestCaseParameterDataType = "DATE"
	TestCaseParameterDataTypeDATETIME  TestCaseParameterDataType = "DATETIME"
	TestCaseParameterDataTypeDECIMAL   TestCaseParameterDataType = "DECIMAL"
	TestCaseParameterDataTypeDOUBLE    TestCaseParameterDataType = "DOUBLE"
	TestCaseParameterDataTypeFLOAT     TestCaseParameterDataType = "FLOAT"
	TestCaseParameterDataTypeINT       TestCaseParameterDataType = "INT"
	TestCaseParameterDataTypeMAP       TestCaseParameterDataType = "MAP"
	TestCaseParameterDataTypeNUMBER    TestCaseParameterDataType = "NUMBER"
	TestCaseParameterDataTypeSET       TestCaseParameterDataType = "SET"
	TestCaseParameterDataTypeSTRING    TestCaseParameterDataType = "STRING"
	TestCaseParameterDataTypeTIME      TestCaseParameterDataType = "TIME"
	TestCaseParameterDataTypeTIMESTAMP TestCaseParameterDataType = "TIMESTAMP"
)

// Defines values for TestCaseParameterValidationRuleRule.
const (
	EQUALS              TestCaseParameterValidationRuleRule = "EQUALS"
	GREATERTHANOREQUALS TestCaseParameterValidationRuleRule = "GREATER_THAN_OR_EQUALS"
	LESSTHANOREQUALS    TestCaseParameterValidationRuleRule = "LESS_THAN_OR_EQUALS"
	NOTEQUALS           TestCaseParameterValidationRuleRule = "NOT_EQUALS"
)

// Defines values for TestCaseResolutionStatusSeverity.
const (
	TestCaseResolutionStatusSeveritySeverity1 TestCaseResolutionStatusSeverity = "Severity1"
	TestCaseResolutionStatusSeveritySeverity2 TestCaseResolutionStatusSeverity = "Severity2"
	TestCaseResolutionStatusSeveritySeverity3 TestCaseResolutionStatusSeverity = "Severity3"
	TestCaseResolutionStatusSeveritySeverity4 TestCaseResolutionStatusSeverity = "Severity4"
	TestCaseResolutionStatusSeveritySeverity5 TestCaseResolutionStatusSeverity = "Severity5"
)

// Defines values for TestCaseResolutionStatusTestCaseResolutionStatusType.
const (
	TestCaseResolutionStatusTestCaseResolutionStatusTypeAck      TestCaseResolutionStatusTestCaseResolutionStatusType = "Ack"
	TestCaseResolutionStatusTestCaseResolutionStatusTypeAssigned TestCaseResolutionStatusTestCaseResolutionStatusType = "Assigned"
	TestCaseResolutionStatusTestCaseResolutionStatusTypeNew      TestCaseResolutionStatusTestCaseResolutionStatusType = "New"
	TestCaseResolutionStatusTestCaseResolutionStatusTypeResolved TestCaseResolutionStatusTestCaseResolutionStatusType = "Resolved"
)

// Defines values for TestCaseResultTestCaseStatus.
const (
	TestCaseResultTestCaseStatusAborted TestCaseResultTestCaseStatus = "Aborted"
	TestCaseResultTestCaseStatusFailed  TestCaseResultTestCaseStatus = "Failed"
	TestCaseResultTestCaseStatusQueued  TestCaseResultTestCaseStatus = "Queued"
	TestCaseResultTestCaseStatusSuccess TestCaseResultTestCaseStatus = "Success"
)

// Defines values for TestConnectionResultStatus.
const (
	TestConnectionResultStatusFailed     TestConnectionResultStatus = "Failed"
	TestConnectionResultStatusRunning    TestConnectionResultStatus = "Running"
	TestConnectionResultStatusSuccessful TestConnectionResultStatus = "Successful"
)

// Defines values for TestDefinitionDataQualityDimension.
const (
	TestDefinitionDataQualityDimensionAccuracy     TestDefinitionDataQualityDimension = "Accuracy"
	TestDefinitionDataQualityDimensionCompleteness TestDefinitionDataQualityDimension = "Completeness"
	TestDefinitionDataQualityDimensionConsistency  TestDefinitionDataQualityDimension = "Consistency"
	TestDefinitionDataQualityDimensionIntegrity    TestDefinitionDataQualityDimension = "Integrity"
	TestDefinitionDataQualityDimensionSQL          TestDefinitionDataQualityDimension = "SQL"
	TestDefinitionDataQualityDimensionUniqueness   TestDefinitionDataQualityDimension = "Uniqueness"
	TestDefinitionDataQualityDimensionValidity     TestDefinitionDataQualityDimension = "Validity"
)

// Defines values for TestDefinitionEntityType.
const (
	TestDefinitionEntityTypeCOLUMN TestDefinitionEntityType = "COLUMN"
	TestDefinitionEntityTypeTABLE  TestDefinitionEntityType = "TABLE"
)

// Defines values for TestDefinitionProvider.
const (
	TestDefinitionProviderSystem TestDefinitionProvider = "system"
	TestDefinitionProviderUser   TestDefinitionProvider = "user"
)

// Defines values for TestDefinitionSupportedDataTypes.
const (
	TestDefinitionSupportedDataTypesAGGREGATEFUNCTION TestDefinitionSupportedDataTypes = "AGGREGATEFUNCTION"
	TestDefinitionSupportedDataTypesAGGSTATE          TestDefinitionSupportedDataTypes = "AGG_STATE"
	TestDefinitionSupportedDataTypesARRAY             TestDefinitionSupportedDataTypes = "ARRAY"
	TestDefinitionSupportedDataTypesBIGINT            TestDefinitionSupportedDataTypes = "BIGINT"
	TestDefinitionSupportedDataTypesBINARY            TestDefinitionSupportedDataTypes = "BINARY"
	TestDefinitionSupportedDataTypesBIT               TestDefinitionSupportedDataTypes = "BIT"
	TestDefinitionSupportedDataTypesBITMAP            TestDefinitionSupportedDataTypes = "BITMAP"
	TestDefinitionSupportedDataTypesBLOB              TestDefinitionSupportedDataTypes = "BLOB"
	TestDefinitionSupportedDataTypesBOOLEAN           TestDefinitionSupportedDataTypes = "BOOLEAN"
	TestDefinitionSupportedDataTypesBYTEA             TestDefinitionSupportedDataTypes = "BYTEA"
	TestDefinitionSupportedDataTypesBYTEINT           TestDefinitionSupportedDataTypes = "BYTEINT"
	TestDefinitionSupportedDataTypesBYTES             TestDefinitionSupportedDataTypes = "BYTES"
	TestDefinitionSupportedDataTypesCHAR              TestDefinitionSupportedDataTypes = "CHAR"
	TestDefinitionSupportedDataTypesCIDR              TestDefinitionSupportedDataTypes = "CIDR"
	TestDefinitionSupportedDataTypesCLOB              TestDefinitionSupportedDataTypes = "CLOB"
	TestDefinitionSupportedDataTypesDATE              TestDefinitionSupportedDataTypes = "DATE"
	TestDefinitionSupportedDataTypesDATETIME          TestDefinitionSupportedDataTypes = "DATETIME"
	TestDefinitionSupportedDataTypesDATETIMERANGE     TestDefinitionSupportedDataTypes = "DATETIMERANGE"
	TestDefinitionSupportedDataTypesDECIMAL           TestDefinitionSupportedDataTypes = "DECIMAL"
	TestDefinitionSupportedDataTypesDOUBLE            TestDefinitionSupportedDataTypes = "DOUBLE"
	TestDefinitionSupportedDataTypesENUM              TestDefinitionSupportedDataTypes = "ENUM"
	TestDefinitionSupportedDataTypesERROR             TestDefinitionSupportedDataTypes = "ERROR"
	TestDefinitionSupportedDataTypesFIXED             TestDefinitionSupportedDataTypes = "FIXED"
	TestDefinitionSupportedDataTypesFLOAT             TestDefinitionSupportedDataTypes = "FLOAT"
	TestDefinitionSupportedDataTypesGEOGRAPHY         TestDefinitionSupportedDataTypes = "GEOGRAPHY"
	TestDefinitionSupportedDataTypesGEOMETRY          TestDefinitionSupportedDataTypes = "GEOMETRY"
	TestDefinitionSupportedDataTypesHLL               TestDefinitionSupportedDataTypes = "HLL"
	TestDefinitionSupportedDataTypesHLLSKETCH         TestDefinitionSupportedDataTypes = "HLLSKETCH"
	TestDefinitionSupportedDataTypesIMAGE             TestDefinitionSupportedDataTypes = "IMAGE"
	TestDefinitionSupportedDataTypesINET              TestDefinitionSupportedDataTypes = "INET"
	TestDefinitionSupportedDataTypesINT               TestDefinitionSupportedDataTypes = "INT"
	TestDefinitionSupportedDataTypesINTERVAL          TestDefinitionSupportedDataTypes = "INTERVAL"
	TestDefinitionSupportedDataTypesIPV4              TestDefinitionSupportedDataTypes = "IPV4"
	TestDefinitionSupportedDataTypesIPV6              TestDefinitionSupportedDataTypes = "IPV6"
	TestDefinitionSupportedDataTypesJSON              TestDefinitionSupportedDataTypes = "JSON"
	TestDefinitionSupportedDataTypesLARGEINT          TestDefinitionSupportedDataTypes = "LARGEINT"
	TestDefinitionSupportedDataTypesLONG              TestDefinitionSupportedDataTypes = "LONG"
	TestDefinitionSupportedDataTypesLONGBLOB          TestDefinitionSupportedDataTypes = "LONGBLOB"
	TestDefinitionSupportedDataTypesLOWCARDINALITY    TestDefinitionSupportedDataTypes = "LOWCARDINALITY"
	TestDefinitionSupportedDataTypesMACADDR           TestDefinitionSupportedDataTypes = "MACADDR"
	TestDefinitionSupportedDataTypesMAP               TestDefinitionSupportedDataTypes = "MAP"
	TestDefinitionSupportedDataTypesMEASUREHIDDEN     TestDefinitionSupportedDataTypes = "MEASURE HIDDEN"
	TestDefinitionSupportedDataTypesMEASUREVISIBLE    TestDefinitionSupportedDataTypes = "MEASURE VISIBLE"
	TestDefinitionSupportedDataTypesMEDIUMBLOB        TestDefinitionSupportedDataTypes = "MEDIUMBLOB"
	TestDefinitionSupportedDataTypesMEDIUMTEXT        TestDefinitionSupportedDataTypes = "MEDIUMTEXT"
	TestDefinitionSupportedDataTypesMONEY             TestDefinitionSupportedDataTypes = "MONEY"
	TestDefinitionSupportedDataTypesNTEXT             TestDefinitionSupportedDataTypes = "NTEXT"
	TestDefinitionSupportedDataTypesNULL              TestDefinitionSupportedDataTypes = "NULL"
	TestDefinitionSupportedDataTypesNUMBER            TestDefinitionSupportedDataTypes = "NUMBER"
	TestDefinitionSupportedDataTypesNUMERIC           TestDefinitionSupportedDataTypes = "NUMERIC"
	TestDefinitionSupportedDataTypesPGLSN             TestDefinitionSupportedDataTypes = "PG_LSN"
	TestDefinitionSupportedDataTypesPGSNAPSHOT        TestDefinitionSupportedDataTypes = "PG_SNAPSHOT"
	TestDefinitionSupportedDataTypesPOINT             TestDefinitionSupportedDataTypes = "POINT"
	TestDefinitionSupportedDataTypesPOLYGON           TestDefinitionSupportedDataTypes = "POLYGON"
	TestDefinitionSupportedDataTypesQUANTILESTATE     TestDefinitionSupportedDataTypes = "QUANTILE_STATE"
	TestDefinitionSupportedDataTypesRECORD            TestDefinitionSupportedDataTypes = "RECORD"
	TestDefinitionSupportedDataTypesROWID             TestDefinitionSupportedDataTypes = "ROWID"
	TestDefinitionSupportedDataTypesSET               TestDefinitionSupportedDataTypes = "SET"
	TestDefinitionSupportedDataTypesSMALLINT          TestDefinitionSupportedDataTypes = "SMALLINT"
	TestDefinitionSupportedDataTypesSPATIAL           TestDefinitionSupportedDataTypes = "SPATIAL"
	TestDefinitionSupportedDataTypesSTRING            TestDefinitionSupportedDataTypes = "STRING"
	TestDefinitionSupportedDataTypesSTRUCT            TestDefinitionSupportedDataTypes = "STRUCT"
	TestDefinitionSupportedDataTypesSUPER             TestDefinitionSupportedDataTypes = "SUPER"
	TestDefinitionSupportedDataTypesTABLE             TestDefinitionSupportedDataTypes = "TABLE"
	TestDefinitionSupportedDataTypesTEXT              TestDefinitionSupportedDataTypes = "TEXT"
	TestDefinitionSupportedDataTypesTIME              TestDefinitionSupportedDataTypes = "TIME"
	TestDefinitionSupportedDataTypesTIMESTAMP         TestDefinitionSupportedDataTypes = "TIMESTAMP"
	TestDefinitionSupportedDataTypesTIMESTAMPZ        TestDefinitionSupportedDataTypes = "TIMESTAMPZ"
	TestDefinitionSupportedDataTypesTINYINT           TestDefinitionSupportedDataTypes = "TINYINT"
	TestDefinitionSupportedDataTypesTSQUERY           TestDefinitionSupportedDataTypes = "TSQUERY"
	TestDefinitionSupportedDataTypesTSVECTOR          TestDefinitionSupportedDataTypes = "TSVECTOR"
	TestDefinitionSupportedDataTypesTUPLE             TestDefinitionSupportedDataTypes = "TUPLE"
	TestDefinitionSupportedDataTypesTXIDSNAPSHOT      TestDefinitionSupportedDataTypes = "TXID_SNAPSHOT"
	TestDefinitionSupportedDataTypesUINT              TestDefinitionSupportedDataTypes = "UINT"
	TestDefinitionSupportedDataTypesUNION             TestDefinitionSupportedDataTypes = "UNION"
	TestDefinitionSupportedDataTypesUNKNOWN           TestDefinitionSupportedDataTypes = "UNKNOWN"
	TestDefinitionSupportedDataTypesUUID              TestDefinitionSupportedDataTypes = "UUID"
	TestDefinitionSupportedDataTypesVARBINARY         TestDefinitionSupportedDataTypes = "VARBINARY"
	TestDefinitionSupportedDataTypesVARCHAR           TestDefinitionSupportedDataTypes = "VARCHAR"
	TestDefinitionSupportedDataTypesVARIANT           TestDefinitionSupportedDataTypes = "VARIANT"
	TestDefinitionSupportedDataTypesXML               TestDefinitionSupportedDataTypes = "XML"
	TestDefinitionSupportedDataTypesYEAR              TestDefinitionSupportedDataTypes = "YEAR"
)

// Defines values for TestDefinitionTestPlatforms.
const (
	TestDefinitionTestPlatformsDBT               TestDefinitionTestPlatforms = "DBT"
	TestDefinitionTestPlatformsDeequ             TestDefinitionTestPlatforms = "Deequ"
	TestDefinitionTestPlatformsGreatExpectations TestDefinitionTestPlatforms = "GreatExpectations"
	TestDefinitionTestPlatformsOpenMetadata      TestDefinitionTestPlatforms = "OpenMetadata"
	TestDefinitionTestPlatformsOther             TestDefinitionTestPlatforms = "Other"
	TestDefinitionTestPlatformsSoda              TestDefinitionTestPlatforms = "Soda"
)

// Defines values for TestSuiteProvider.
const (
	TestSuiteProviderSystem TestSuiteProvider = "system"
	TestSuiteProviderUser   TestSuiteProvider = "user"
)

// Defines values for TestSuiteServiceType.
const (
	TestSuiteServiceTypeTestSuite TestSuiteServiceType = "TestSuite"
)

// Defines values for ThreadCardStyle.
const (
	ThreadCardStyleAssets               ThreadCardStyle = "assets"
	ThreadCardStyleCustomProperties     ThreadCardStyle = "customProperties"
	ThreadCardStyleDefault              ThreadCardStyle = "default"
	ThreadCardStyleDescription          ThreadCardStyle = "description"
	ThreadCardStyleDomain               ThreadCardStyle = "domain"
	ThreadCardStyleEntityCreated        ThreadCardStyle = "entityCreated"
	ThreadCardStyleEntityDeleted        ThreadCardStyle = "entityDeleted"
	ThreadCardStyleEntitySoftDeleted    ThreadCardStyle = "entitySoftDeleted"
	ThreadCardStyleLogicalTestCaseAdded ThreadCardStyle = "logicalTestCaseAdded"
	ThreadCardStyleOwner                ThreadCardStyle = "owner"
	ThreadCardStyleTags                 ThreadCardStyle = "tags"
	ThreadCardStyleTestCaseResult       ThreadCardStyle = "testCaseResult"
)

// Defines values for ThreadFieldOperation.
const (
	ThreadFieldOperationAdded   ThreadFieldOperation = "added"
	ThreadFieldOperationDeleted ThreadFieldOperation = "deleted"
	ThreadFieldOperationNone    ThreadFieldOperation = "none"
	ThreadFieldOperationUpdated ThreadFieldOperation = "updated"
)

// Defines values for ThreadGeneratedBy.
const (
	ThreadGeneratedBySystem ThreadGeneratedBy = "system"
	ThreadGeneratedByUser   ThreadGeneratedBy = "user"
)

// Defines values for ThreadType.
const (
	ThreadTypeAnnouncement ThreadType = "Announcement"
	ThreadTypeChatbot      ThreadType = "Chatbot"
	ThreadTypeConversation ThreadType = "Conversation"
	ThreadTypeTask         ThreadType = "Task"
)

// Defines values for TopHitsSortOrder.
const (
	TopHitsSortOrderAsc  TopHitsSortOrder = "asc"
	TopHitsSortOrderDesc TopHitsSortOrder = "desc"
)

// Defines values for TopicCleanupPolicies.
const (
	TopicCleanupPoliciesCompact TopicCleanupPolicies = "compact"
	TopicCleanupPoliciesDelete  TopicCleanupPolicies = "delete"
)

// Defines values for TopicProvider.
const (
	TopicProviderSystem TopicProvider = "system"
	TopicProviderUser   TopicProvider = "user"
)

// Defines values for TopicServiceType.
const (
	CustomMessaging TopicServiceType = "CustomMessaging"
	Kafka           TopicServiceType = "Kafka"
	Kinesis         TopicServiceType = "Kinesis"
	Redpanda        TopicServiceType = "Redpanda"
)

// Defines values for TotalHitsRelation.
const (
	EQUALTO              TotalHitsRelation = "EQUAL_TO"
	GREATERTHANOREQUALTO TotalHitsRelation = "GREATER_THAN_OR_EQUAL_TO"
)

// Defines values for TriggerConfigScheduleInfo.
const (
	Custom  TriggerConfigScheduleInfo = "Custom"
	Daily   TriggerConfigScheduleInfo = "Daily"
	Monthly TriggerConfigScheduleInfo = "Monthly"
	Weekly  TriggerConfigScheduleInfo = "Weekly"
)

// Defines values for TriggerConfigTriggerType.
const (
	TriggerConfigTriggerTypeRealTime  TriggerConfigTriggerType = "RealTime"
	TriggerConfigTriggerTypeScheduled TriggerConfigTriggerType = "Scheduled"
)

// Defines values for TypeCategory.
const (
	TypeCategoryEntity TypeCategory = "entity"
	TypeCategoryField  TypeCategory = "field"
)

// Defines values for TypeProvider.
const (
	TypeProviderSystem TypeProvider = "system"
	TypeProviderUser   TypeProvider = "user"
)

// Defines values for UserProvider.
const (
	UserProviderSystem UserProvider = "system"
	UserProviderUser   UserProvider = "user"
)

// Defines values for VoteRequestUpdatedVoteType.
const (
	UnVoted   VoteRequestUpdatedVoteType = "unVoted"
	VotedDown VoteRequestUpdatedVoteType = "votedDown"
	VotedUp   VoteRequestUpdatedVoteType = "votedUp"
)

// Defines values for WebhookHttpMethod.
const (
	POST WebhookHttpMethod = "POST"
	PUT  WebhookHttpMethod = "PUT"
)

// Defines values for WorkflowDefinitionProvider.
const (
	WorkflowDefinitionProviderSystem WorkflowDefinitionProvider = "system"
	WorkflowDefinitionProviderUser   WorkflowDefinitionProvider = "user"
)

// Defines values for WorkflowInstanceStateStatus.
const (
	EXCEPTION WorkflowInstanceStateStatus = "EXCEPTION"
	FAILURE   WorkflowInstanceStateStatus = "FAILURE"
	FINISHED  WorkflowInstanceStateStatus = "FINISHED"
	RUNNING   WorkflowInstanceStateStatus = "RUNNING"
)

// Defines values for ListAPICollectionsParamsInclude.
const (
	ListAPICollectionsParamsIncludeAll        ListAPICollectionsParamsInclude = "all"
	ListAPICollectionsParamsIncludeDeleted    ListAPICollectionsParamsInclude = "deleted"
	ListAPICollectionsParamsIncludeNonDeleted ListAPICollectionsParamsInclude = "non-deleted"
)

// Defines values for GetAPICollectionByFQNParamsInclude.
const (
	GetAPICollectionByFQNParamsIncludeAll        GetAPICollectionByFQNParamsInclude = "all"
	GetAPICollectionByFQNParamsIncludeDeleted    GetAPICollectionByFQNParamsInclude = "deleted"
	GetAPICollectionByFQNParamsIncludeNonDeleted GetAPICollectionByFQNParamsInclude = "non-deleted"
)

// Defines values for GetAPICollectionByIDParamsInclude.
const (
	GetAPICollectionByIDParamsIncludeAll        GetAPICollectionByIDParamsInclude = "all"
	GetAPICollectionByIDParamsIncludeDeleted    GetAPICollectionByIDParamsInclude = "deleted"
	GetAPICollectionByIDParamsIncludeNonDeleted GetAPICollectionByIDParamsInclude = "non-deleted"
)

// Defines values for ListAPIEndpointsParamsInclude.
const (
	ListAPIEndpointsParamsIncludeAll        ListAPIEndpointsParamsInclude = "all"
	ListAPIEndpointsParamsIncludeDeleted    ListAPIEndpointsParamsInclude = "deleted"
	ListAPIEndpointsParamsIncludeNonDeleted ListAPIEndpointsParamsInclude = "non-deleted"
)

// Defines values for GetEndpointByFQNParamsInclude.
const (
	GetEndpointByFQNParamsIncludeAll        GetEndpointByFQNParamsInclude = "all"
	GetEndpointByFQNParamsIncludeDeleted    GetEndpointByFQNParamsInclude = "deleted"
	GetEndpointByFQNParamsIncludeNonDeleted GetEndpointByFQNParamsInclude = "non-deleted"
)

// Defines values for GetEndpointByIdParamsInclude.
const (
	GetEndpointByIdParamsIncludeAll        GetEndpointByIdParamsInclude = "all"
	GetEndpointByIdParamsIncludeDeleted    GetEndpointByIdParamsInclude = "deleted"
	GetEndpointByIdParamsIncludeNonDeleted GetEndpointByIdParamsInclude = "non-deleted"
)

// Defines values for ListInstalledApplicationsParamsInclude.
const (
	ListInstalledApplicationsParamsIncludeAll        ListInstalledApplicationsParamsInclude = "all"
	ListInstalledApplicationsParamsIncludeDeleted    ListInstalledApplicationsParamsInclude = "deleted"
	ListInstalledApplicationsParamsIncludeNonDeleted ListInstalledApplicationsParamsInclude = "non-deleted"
)

// Defines values for ListApplicationsParamsInclude.
const (
	ListApplicationsParamsIncludeAll        ListApplicationsParamsInclude = "all"
	ListApplicationsParamsIncludeDeleted    ListApplicationsParamsInclude = "deleted"
	ListApplicationsParamsIncludeNonDeleted ListApplicationsParamsInclude = "non-deleted"
)

// Defines values for GetAppByNameParamsInclude.
const (
	GetAppByNameParamsIncludeAll        GetAppByNameParamsInclude = "all"
	GetAppByNameParamsIncludeDeleted    GetAppByNameParamsInclude = "deleted"
	GetAppByNameParamsIncludeNonDeleted GetAppByNameParamsInclude = "non-deleted"
)

// Defines values for GetParamsInclude.
const (
	GetParamsIncludeAll        GetParamsInclude = "all"
	GetParamsIncludeDeleted    GetParamsInclude = "deleted"
	GetParamsIncludeNonDeleted GetParamsInclude = "non-deleted"
)

// Defines values for GetAppByName1ParamsInclude.
const (
	GetAppByName1ParamsIncludeAll        GetAppByName1ParamsInclude = "all"
	GetAppByName1ParamsIncludeDeleted    GetAppByName1ParamsInclude = "deleted"
	GetAppByName1ParamsIncludeNonDeleted GetAppByName1ParamsInclude = "non-deleted"
)

// Defines values for Get1ParamsInclude.
const (
	Get1ParamsIncludeAll        Get1ParamsInclude = "all"
	Get1ParamsIncludeDeleted    Get1ParamsInclude = "deleted"
	Get1ParamsIncludeNonDeleted Get1ParamsInclude = "non-deleted"
)

// Defines values for ListBotsParamsInclude.
const (
	ListBotsParamsIncludeAll        ListBotsParamsInclude = "all"
	ListBotsParamsIncludeDeleted    ListBotsParamsInclude = "deleted"
	ListBotsParamsIncludeNonDeleted ListBotsParamsInclude = "non-deleted"
)

// Defines values for GetBotByFQNParamsInclude.
const (
	GetBotByFQNParamsIncludeAll        GetBotByFQNParamsInclude = "all"
	GetBotByFQNParamsIncludeDeleted    GetBotByFQNParamsInclude = "deleted"
	GetBotByFQNParamsIncludeNonDeleted GetBotByFQNParamsInclude = "non-deleted"
)

// Defines values for GetBotByIDParamsInclude.
const (
	GetBotByIDParamsIncludeAll        GetBotByIDParamsInclude = "all"
	GetBotByIDParamsIncludeDeleted    GetBotByIDParamsInclude = "deleted"
	GetBotByIDParamsIncludeNonDeleted GetBotByIDParamsInclude = "non-deleted"
)

// Defines values for ListChartsParamsInclude.
const (
	ListChartsParamsIncludeAll        ListChartsParamsInclude = "all"
	ListChartsParamsIncludeDeleted    ListChartsParamsInclude = "deleted"
	ListChartsParamsIncludeNonDeleted ListChartsParamsInclude = "non-deleted"
)

// Defines values for GetChartByFQNParamsInclude.
const (
	GetChartByFQNParamsIncludeAll        GetChartByFQNParamsInclude = "all"
	GetChartByFQNParamsIncludeDeleted    GetChartByFQNParamsInclude = "deleted"
	GetChartByFQNParamsIncludeNonDeleted GetChartByFQNParamsInclude = "non-deleted"
)

// Defines values for GetChartByIDParamsInclude.
const (
	GetChartByIDParamsIncludeAll        GetChartByIDParamsInclude = "all"
	GetChartByIDParamsIncludeDeleted    GetChartByIDParamsInclude = "deleted"
	GetChartByIDParamsIncludeNonDeleted GetChartByIDParamsInclude = "non-deleted"
)

// Defines values for ListClassificationsParamsInclude.
const (
	ListClassificationsParamsIncludeAll        ListClassificationsParamsInclude = "all"
	ListClassificationsParamsIncludeDeleted    ListClassificationsParamsInclude = "deleted"
	ListClassificationsParamsIncludeNonDeleted ListClassificationsParamsInclude = "non-deleted"
)

// Defines values for GetClassificationByNameParamsInclude.
const (
	GetClassificationByNameParamsIncludeAll        GetClassificationByNameParamsInclude = "all"
	GetClassificationByNameParamsIncludeDeleted    GetClassificationByNameParamsInclude = "deleted"
	GetClassificationByNameParamsIncludeNonDeleted GetClassificationByNameParamsInclude = "non-deleted"
)

// Defines values for GetClassificationByIDParamsInclude.
const (
	GetClassificationByIDParamsIncludeAll        GetClassificationByIDParamsInclude = "all"
	GetClassificationByIDParamsIncludeDeleted    GetClassificationByIDParamsInclude = "deleted"
	GetClassificationByIDParamsIncludeNonDeleted GetClassificationByIDParamsInclude = "non-deleted"
)

// Defines values for ListContainersParamsInclude.
const (
	ListContainersParamsIncludeAll        ListContainersParamsInclude = "all"
	ListContainersParamsIncludeDeleted    ListContainersParamsInclude = "deleted"
	ListContainersParamsIncludeNonDeleted ListContainersParamsInclude = "non-deleted"
)

// Defines values for GetContainerByFQNParamsInclude.
const (
	GetContainerByFQNParamsIncludeAll        GetContainerByFQNParamsInclude = "all"
	GetContainerByFQNParamsIncludeDeleted    GetContainerByFQNParamsInclude = "deleted"
	GetContainerByFQNParamsIncludeNonDeleted GetContainerByFQNParamsInclude = "non-deleted"
)

// Defines values for GetContainerByIDParamsInclude.
const (
	GetContainerByIDParamsIncludeAll        GetContainerByIDParamsInclude = "all"
	GetContainerByIDParamsIncludeDeleted    GetContainerByIDParamsInclude = "deleted"
	GetContainerByIDParamsIncludeNonDeleted GetContainerByIDParamsInclude = "non-deleted"
)

// Defines values for ListDashboardDataModelsParamsInclude.
const (
	ListDashboardDataModelsParamsIncludeAll        ListDashboardDataModelsParamsInclude = "all"
	ListDashboardDataModelsParamsIncludeDeleted    ListDashboardDataModelsParamsInclude = "deleted"
	ListDashboardDataModelsParamsIncludeNonDeleted ListDashboardDataModelsParamsInclude = "non-deleted"
)

// Defines values for GetDataModelByFQNParamsInclude.
const (
	GetDataModelByFQNParamsIncludeAll        GetDataModelByFQNParamsInclude = "all"
	GetDataModelByFQNParamsIncludeDeleted    GetDataModelByFQNParamsInclude = "deleted"
	GetDataModelByFQNParamsIncludeNonDeleted GetDataModelByFQNParamsInclude = "non-deleted"
)

// Defines values for GetDataModelByIDParamsInclude.
const (
	GetDataModelByIDParamsIncludeAll        GetDataModelByIDParamsInclude = "all"
	GetDataModelByIDParamsIncludeDeleted    GetDataModelByIDParamsInclude = "deleted"
	GetDataModelByIDParamsIncludeNonDeleted GetDataModelByIDParamsInclude = "non-deleted"
)

// Defines values for ListDashboardsParamsInclude.
const (
	ListDashboardsParamsIncludeAll        ListDashboardsParamsInclude = "all"
	ListDashboardsParamsIncludeDeleted    ListDashboardsParamsInclude = "deleted"
	ListDashboardsParamsIncludeNonDeleted ListDashboardsParamsInclude = "non-deleted"
)

// Defines values for GetDashboardByFQNParamsInclude.
const (
	GetDashboardByFQNParamsIncludeAll        GetDashboardByFQNParamsInclude = "all"
	GetDashboardByFQNParamsIncludeDeleted    GetDashboardByFQNParamsInclude = "deleted"
	GetDashboardByFQNParamsIncludeNonDeleted GetDashboardByFQNParamsInclude = "non-deleted"
)

// Defines values for GetDashboardByIDParamsInclude.
const (
	GetDashboardByIDParamsIncludeAll        GetDashboardByIDParamsInclude = "all"
	GetDashboardByIDParamsIncludeDeleted    GetDashboardByIDParamsInclude = "deleted"
	GetDashboardByIDParamsIncludeNonDeleted GetDashboardByIDParamsInclude = "non-deleted"
)

// Defines values for ListTestCasesParamsInclude.
const (
	ListTestCasesParamsIncludeAll        ListTestCasesParamsInclude = "all"
	ListTestCasesParamsIncludeDeleted    ListTestCasesParamsInclude = "deleted"
	ListTestCasesParamsIncludeNonDeleted ListTestCasesParamsInclude = "non-deleted"
)

// Defines values for ListTestCasesParamsTestCaseStatus.
const (
	ListTestCasesParamsTestCaseStatusAborted ListTestCasesParamsTestCaseStatus = "Aborted"
	ListTestCasesParamsTestCaseStatusFailed  ListTestCasesParamsTestCaseStatus = "Failed"
	ListTestCasesParamsTestCaseStatusQueued  ListTestCasesParamsTestCaseStatus = "Queued"
	ListTestCasesParamsTestCaseStatusSuccess ListTestCasesParamsTestCaseStatus = "Success"
)

// Defines values for ListTestCasesParamsTestCaseType.
const (
	ListTestCasesParamsTestCaseTypeAll    ListTestCasesParamsTestCaseType = "all"
	ListTestCasesParamsTestCaseTypeColumn ListTestCasesParamsTestCaseType = "column"
	ListTestCasesParamsTestCaseTypeTable  ListTestCasesParamsTestCaseType = "table"
)

// Defines values for GetTestCaseByNameParamsInclude.
const (
	GetTestCaseByNameParamsIncludeAll        GetTestCaseByNameParamsInclude = "all"
	GetTestCaseByNameParamsIncludeDeleted    GetTestCaseByNameParamsInclude = "deleted"
	GetTestCaseByNameParamsIncludeNonDeleted GetTestCaseByNameParamsInclude = "non-deleted"
)

// Defines values for ListTestCasesFromSearchServiceParamsInclude.
const (
	ListTestCasesFromSearchServiceParamsIncludeAll        ListTestCasesFromSearchServiceParamsInclude = "all"
	ListTestCasesFromSearchServiceParamsIncludeDeleted    ListTestCasesFromSearchServiceParamsInclude = "deleted"
	ListTestCasesFromSearchServiceParamsIncludeNonDeleted ListTestCasesFromSearchServiceParamsInclude = "non-deleted"
)

// Defines values for ListTestCasesFromSearchServiceParamsTestCaseStatus.
const (
	ListTestCasesFromSearchServiceParamsTestCaseStatusAborted ListTestCasesFromSearchServiceParamsTestCaseStatus = "Aborted"
	ListTestCasesFromSearchServiceParamsTestCaseStatusFailed  ListTestCasesFromSearchServiceParamsTestCaseStatus = "Failed"
	ListTestCasesFromSearchServiceParamsTestCaseStatusQueued  ListTestCasesFromSearchServiceParamsTestCaseStatus = "Queued"
	ListTestCasesFromSearchServiceParamsTestCaseStatusSuccess ListTestCasesFromSearchServiceParamsTestCaseStatus = "Success"
)

// Defines values for ListTestCasesFromSearchServiceParamsTestCaseType.
const (
	ListTestCasesFromSearchServiceParamsTestCaseTypeAll    ListTestCasesFromSearchServiceParamsTestCaseType = "all"
	ListTestCasesFromSearchServiceParamsTestCaseTypeColumn ListTestCasesFromSearchServiceParamsTestCaseType = "column"
	ListTestCasesFromSearchServiceParamsTestCaseTypeTable  ListTestCasesFromSearchServiceParamsTestCaseType = "table"
)

// Defines values for ListTestCasesFromSearchServiceParamsSortType.
const (
	ListTestCasesFromSearchServiceParamsSortTypeAsc  ListTestCasesFromSearchServiceParamsSortType = "asc"
	ListTestCasesFromSearchServiceParamsSortTypeDesc ListTestCasesFromSearchServiceParamsSortType = "desc"
)

// Defines values for GetTestCaseResolutionStatusParamsTestCaseResolutionStatusType.
const (
	Ack      GetTestCaseResolutionStatusParamsTestCaseResolutionStatusType = "Ack"
	Assigned GetTestCaseResolutionStatusParamsTestCaseResolutionStatusType = "Assigned"
	New      GetTestCaseResolutionStatusParamsTestCaseResolutionStatusType = "New"
	Resolved GetTestCaseResolutionStatusParamsTestCaseResolutionStatusType = "Resolved"
)

// Defines values for LatestTestCaseResultsFromSearchServiceParamsTestCaseStatus.
const (
	LatestTestCaseResultsFromSearchServiceParamsTestCaseStatusAborted LatestTestCaseResultsFromSearchServiceParamsTestCaseStatus = "Aborted"
	LatestTestCaseResultsFromSearchServiceParamsTestCaseStatusFailed  LatestTestCaseResultsFromSearchServiceParamsTestCaseStatus = "Failed"
	LatestTestCaseResultsFromSearchServiceParamsTestCaseStatusQueued  LatestTestCaseResultsFromSearchServiceParamsTestCaseStatus = "Queued"
	LatestTestCaseResultsFromSearchServiceParamsTestCaseStatusSuccess LatestTestCaseResultsFromSearchServiceParamsTestCaseStatus = "Success"
)

// Defines values for ListTestCaseResultsFromSearchServiceParamsTestCaseStatus.
const (
	ListTestCaseResultsFromSearchServiceParamsTestCaseStatusAborted ListTestCaseResultsFromSearchServiceParamsTestCaseStatus = "Aborted"
	ListTestCaseResultsFromSearchServiceParamsTestCaseStatusFailed  ListTestCaseResultsFromSearchServiceParamsTestCaseStatus = "Failed"
	ListTestCaseResultsFromSearchServiceParamsTestCaseStatusQueued  ListTestCaseResultsFromSearchServiceParamsTestCaseStatus = "Queued"
	ListTestCaseResultsFromSearchServiceParamsTestCaseStatusSuccess ListTestCaseResultsFromSearchServiceParamsTestCaseStatus = "Success"
)

// Defines values for ListTestCaseResultsFromSearchServiceParamsLatest.
const (
	False ListTestCaseResultsFromSearchServiceParamsLatest = false
	True  ListTestCaseResultsFromSearchServiceParamsLatest = true
)

// Defines values for ListTestCaseResultsFromSearchServiceParamsTestCaseType.
const (
	ListTestCaseResultsFromSearchServiceParamsTestCaseTypeAll    ListTestCaseResultsFromSearchServiceParamsTestCaseType = "all"
	ListTestCaseResultsFromSearchServiceParamsTestCaseTypeColumn ListTestCaseResultsFromSearchServiceParamsTestCaseType = "column"
	ListTestCaseResultsFromSearchServiceParamsTestCaseTypeTable  ListTestCaseResultsFromSearchServiceParamsTestCaseType = "table"
)

// Defines values for ListTestCaseResultsFromSearchServiceParamsDataQualityDimension.
const (
	ListTestCaseResultsFromSearchServiceParamsDataQualityDimensionAccuracy     ListTestCaseResultsFromSearchServiceParamsDataQualityDimension = "Accuracy"
	ListTestCaseResultsFromSearchServiceParamsDataQualityDimensionCompleteness ListTestCaseResultsFromSearchServiceParamsDataQualityDimension = "Completeness"
	ListTestCaseResultsFromSearchServiceParamsDataQualityDimensionConsistency  ListTestCaseResultsFromSearchServiceParamsDataQualityDimension = "Consistency"
	ListTestCaseResultsFromSearchServiceParamsDataQualityDimensionIntegrity    ListTestCaseResultsFromSearchServiceParamsDataQualityDimension = "Integrity"
	ListTestCaseResultsFromSearchServiceParamsDataQualityDimensionSQL          ListTestCaseResultsFromSearchServiceParamsDataQualityDimension = "SQL"
	ListTestCaseResultsFromSearchServiceParamsDataQualityDimensionUniqueness   ListTestCaseResultsFromSearchServiceParamsDataQualityDimension = "Uniqueness"
	ListTestCaseResultsFromSearchServiceParamsDataQualityDimensionValidity     ListTestCaseResultsFromSearchServiceParamsDataQualityDimension = "Validity"
)

// Defines values for Get3ParamsInclude.
const (
	Get3ParamsIncludeAll        Get3ParamsInclude = "all"
	Get3ParamsIncludeDeleted    Get3ParamsInclude = "deleted"
	Get3ParamsIncludeNonDeleted Get3ParamsInclude = "non-deleted"
)

// Defines values for ListTestDefinitionsParamsInclude.
const (
	ListTestDefinitionsParamsIncludeAll        ListTestDefinitionsParamsInclude = "all"
	ListTestDefinitionsParamsIncludeDeleted    ListTestDefinitionsParamsInclude = "deleted"
	ListTestDefinitionsParamsIncludeNonDeleted ListTestDefinitionsParamsInclude = "non-deleted"
)

// Defines values for ListTestDefinitionsParamsEntityType.
const (
	ListTestDefinitionsParamsEntityTypeCOLUMN ListTestDefinitionsParamsEntityType = "COLUMN"
	ListTestDefinitionsParamsEntityTypeTABLE  ListTestDefinitionsParamsEntityType = "TABLE"
)

// Defines values for ListTestDefinitionsParamsTestPlatform.
const (
	ListTestDefinitionsParamsTestPlatformDBT               ListTestDefinitionsParamsTestPlatform = "DBT"
	ListTestDefinitionsParamsTestPlatformDeequ             ListTestDefinitionsParamsTestPlatform = "Deequ"
	ListTestDefinitionsParamsTestPlatformGreatExpectations ListTestDefinitionsParamsTestPlatform = "GreatExpectations"
	ListTestDefinitionsParamsTestPlatformOpenMetadata      ListTestDefinitionsParamsTestPlatform = "OpenMetadata"
	ListTestDefinitionsParamsTestPlatformOther             ListTestDefinitionsParamsTestPlatform = "Other"
	ListTestDefinitionsParamsTestPlatformSoda              ListTestDefinitionsParamsTestPlatform = "Soda"
)

// Defines values for ListTestDefinitionsParamsSupportedDataType.
const (
	ListTestDefinitionsParamsSupportedDataTypeAGGREGATEFUNCTION ListTestDefinitionsParamsSupportedDataType = "AGGREGATEFUNCTION"
	ListTestDefinitionsParamsSupportedDataTypeAGGSTATE          ListTestDefinitionsParamsSupportedDataType = "AGG_STATE"
	ListTestDefinitionsParamsSupportedDataTypeARRAY             ListTestDefinitionsParamsSupportedDataType = "ARRAY"
	ListTestDefinitionsParamsSupportedDataTypeBIGINT            ListTestDefinitionsParamsSupportedDataType = "BIGINT"
	ListTestDefinitionsParamsSupportedDataTypeBINARY            ListTestDefinitionsParamsSupportedDataType = "BINARY"
	ListTestDefinitionsParamsSupportedDataTypeBIT               ListTestDefinitionsParamsSupportedDataType = "BIT"
	ListTestDefinitionsParamsSupportedDataTypeBITMAP            ListTestDefinitionsParamsSupportedDataType = "BITMAP"
	ListTestDefinitionsParamsSupportedDataTypeBLOB              ListTestDefinitionsParamsSupportedDataType = "BLOB"
	ListTestDefinitionsParamsSupportedDataTypeBOOLEAN           ListTestDefinitionsParamsSupportedDataType = "BOOLEAN"
	ListTestDefinitionsParamsSupportedDataTypeBYTEA             ListTestDefinitionsParamsSupportedDataType = "BYTEA"
	ListTestDefinitionsParamsSupportedDataTypeBYTEINT           ListTestDefinitionsParamsSupportedDataType = "BYTEINT"
	ListTestDefinitionsParamsSupportedDataTypeBYTES             ListTestDefinitionsParamsSupportedDataType = "BYTES"
	ListTestDefinitionsParamsSupportedDataTypeCHAR              ListTestDefinitionsParamsSupportedDataType = "CHAR"
	ListTestDefinitionsParamsSupportedDataTypeCIDR              ListTestDefinitionsParamsSupportedDataType = "CIDR"
	ListTestDefinitionsParamsSupportedDataTypeCLOB              ListTestDefinitionsParamsSupportedDataType = "CLOB"
	ListTestDefinitionsParamsSupportedDataTypeDATE              ListTestDefinitionsParamsSupportedDataType = "DATE"
	ListTestDefinitionsParamsSupportedDataTypeDATETIME          ListTestDefinitionsParamsSupportedDataType = "DATETIME"
	ListTestDefinitionsParamsSupportedDataTypeDATETIMERANGE     ListTestDefinitionsParamsSupportedDataType = "DATETIMERANGE"
	ListTestDefinitionsParamsSupportedDataTypeDECIMAL           ListTestDefinitionsParamsSupportedDataType = "DECIMAL"
	ListTestDefinitionsParamsSupportedDataTypeDOUBLE            ListTestDefinitionsParamsSupportedDataType = "DOUBLE"
	ListTestDefinitionsParamsSupportedDataTypeENUM              ListTestDefinitionsParamsSupportedDataType = "ENUM"
	ListTestDefinitionsParamsSupportedDataTypeERROR             ListTestDefinitionsParamsSupportedDataType = "ERROR"
	ListTestDefinitionsParamsSupportedDataTypeFIXED             ListTestDefinitionsParamsSupportedDataType = "FIXED"
	ListTestDefinitionsParamsSupportedDataTypeFLOAT             ListTestDefinitionsParamsSupportedDataType = "FLOAT"
	ListTestDefinitionsParamsSupportedDataTypeGEOGRAPHY         ListTestDefinitionsParamsSupportedDataType = "GEOGRAPHY"
	ListTestDefinitionsParamsSupportedDataTypeGEOMETRY          ListTestDefinitionsParamsSupportedDataType = "GEOMETRY"
	ListTestDefinitionsParamsSupportedDataTypeHLL               ListTestDefinitionsParamsSupportedDataType = "HLL"
	ListTestDefinitionsParamsSupportedDataTypeHLLSKETCH         ListTestDefinitionsParamsSupportedDataType = "HLLSKETCH"
	ListTestDefinitionsParamsSupportedDataTypeIMAGE             ListTestDefinitionsParamsSupportedDataType = "IMAGE"
	ListTestDefinitionsParamsSupportedDataTypeINET              ListTestDefinitionsParamsSupportedDataType = "INET"
	ListTestDefinitionsParamsSupportedDataTypeINT               ListTestDefinitionsParamsSupportedDataType = "INT"
	ListTestDefinitionsParamsSupportedDataTypeINTERVAL          ListTestDefinitionsParamsSupportedDataType = "INTERVAL"
	ListTestDefinitionsParamsSupportedDataTypeIPV4              ListTestDefinitionsParamsSupportedDataType = "IPV4"
	ListTestDefinitionsParamsSupportedDataTypeIPV6              ListTestDefinitionsParamsSupportedDataType = "IPV6"
	ListTestDefinitionsParamsSupportedDataTypeJSON              ListTestDefinitionsParamsSupportedDataType = "JSON"
	ListTestDefinitionsParamsSupportedDataTypeLARGEINT          ListTestDefinitionsParamsSupportedDataType = "LARGEINT"
	ListTestDefinitionsParamsSupportedDataTypeLONG              ListTestDefinitionsParamsSupportedDataType = "LONG"
	ListTestDefinitionsParamsSupportedDataTypeLONGBLOB          ListTestDefinitionsParamsSupportedDataType = "LONGBLOB"
	ListTestDefinitionsParamsSupportedDataTypeLOWCARDINALITY    ListTestDefinitionsParamsSupportedDataType = "LOWCARDINALITY"
	ListTestDefinitionsParamsSupportedDataTypeMACADDR           ListTestDefinitionsParamsSupportedDataType = "MACADDR"
	ListTestDefinitionsParamsSupportedDataTypeMAP               ListTestDefinitionsParamsSupportedDataType = "MAP"
	ListTestDefinitionsParamsSupportedDataTypeMEASUREHIDDEN     ListTestDefinitionsParamsSupportedDataType = "MEASURE HIDDEN"
	ListTestDefinitionsParamsSupportedDataTypeMEASUREVISIBLE    ListTestDefinitionsParamsSupportedDataType = "MEASURE VISIBLE"
	ListTestDefinitionsParamsSupportedDataTypeMEDIUMBLOB        ListTestDefinitionsParamsSupportedDataType = "MEDIUMBLOB"
	ListTestDefinitionsParamsSupportedDataTypeMEDIUMTEXT        ListTestDefinitionsParamsSupportedDataType = "MEDIUMTEXT"
	ListTestDefinitionsParamsSupportedDataTypeMONEY             ListTestDefinitionsParamsSupportedDataType = "MONEY"
	ListTestDefinitionsParamsSupportedDataTypeNTEXT             ListTestDefinitionsParamsSupportedDataType = "NTEXT"
	ListTestDefinitionsParamsSupportedDataTypeNULL              ListTestDefinitionsParamsSupportedDataType = "NULL"
	ListTestDefinitionsParamsSupportedDataTypeNUMBER            ListTestDefinitionsParamsSupportedDataType = "NUMBER"
	ListTestDefinitionsParamsSupportedDataTypeNUMERIC           ListTestDefinitionsParamsSupportedDataType = "NUMERIC"
	ListTestDefinitionsParamsSupportedDataTypePGLSN             ListTestDefinitionsParamsSupportedDataType = "PG_LSN"
	ListTestDefinitionsParamsSupportedDataTypePGSNAPSHOT        ListTestDefinitionsParamsSupportedDataType = "PG_SNAPSHOT"
	ListTestDefinitionsParamsSupportedDataTypePOINT             ListTestDefinitionsParamsSupportedDataType = "POINT"
	ListTestDefinitionsParamsSupportedDataTypePOLYGON           ListTestDefinitionsParamsSupportedDataType = "POLYGON"
	ListTestDefinitionsParamsSupportedDataTypeQUANTILESTATE     ListTestDefinitionsParamsSupportedDataType = "QUANTILE_STATE"
	ListTestDefinitionsParamsSupportedDataTypeRECORD            ListTestDefinitionsParamsSupportedDataType = "RECORD"
	ListTestDefinitionsParamsSupportedDataTypeROWID             ListTestDefinitionsParamsSupportedDataType = "ROWID"
	ListTestDefinitionsParamsSupportedDataTypeSET               ListTestDefinitionsParamsSupportedDataType = "SET"
	ListTestDefinitionsParamsSupportedDataTypeSMALLINT          ListTestDefinitionsParamsSupportedDataType = "SMALLINT"
	ListTestDefinitionsParamsSupportedDataTypeSPATIAL           ListTestDefinitionsParamsSupportedDataType = "SPATIAL"
	ListTestDefinitionsParamsSupportedDataTypeSTRING            ListTestDefinitionsParamsSupportedDataType = "STRING"
	ListTestDefinitionsParamsSupportedDataTypeSTRUCT            ListTestDefinitionsParamsSupportedDataType = "STRUCT"
	ListTestDefinitionsParamsSupportedDataTypeSUPER             ListTestDefinitionsParamsSupportedDataType = "SUPER"
	ListTestDefinitionsParamsSupportedDataTypeTABLE             ListTestDefinitionsParamsSupportedDataType = "TABLE"
	ListTestDefinitionsParamsSupportedDataTypeTEXT              ListTestDefinitionsParamsSupportedDataType = "TEXT"
	ListTestDefinitionsParamsSupportedDataTypeTIME              ListTestDefinitionsParamsSupportedDataType = "TIME"
	ListTestDefinitionsParamsSupportedDataTypeTIMESTAMP         ListTestDefinitionsParamsSupportedDataType = "TIMESTAMP"
	ListTestDefinitionsParamsSupportedDataTypeTIMESTAMPZ        ListTestDefinitionsParamsSupportedDataType = "TIMESTAMPZ"
	ListTestDefinitionsParamsSupportedDataTypeTINYINT           ListTestDefinitionsParamsSupportedDataType = "TINYINT"
	ListTestDefinitionsParamsSupportedDataTypeTSQUERY           ListTestDefinitionsParamsSupportedDataType = "TSQUERY"
	ListTestDefinitionsParamsSupportedDataTypeTSVECTOR          ListTestDefinitionsParamsSupportedDataType = "TSVECTOR"
	ListTestDefinitionsParamsSupportedDataTypeTUPLE             ListTestDefinitionsParamsSupportedDataType = "TUPLE"
	ListTestDefinitionsParamsSupportedDataTypeTXIDSNAPSHOT      ListTestDefinitionsParamsSupportedDataType = "TXID_SNAPSHOT"
	ListTestDefinitionsParamsSupportedDataTypeUINT              ListTestDefinitionsParamsSupportedDataType = "UINT"
	ListTestDefinitionsParamsSupportedDataTypeUNION             ListTestDefinitionsParamsSupportedDataType = "UNION"
	ListTestDefinitionsParamsSupportedDataTypeUNKNOWN           ListTestDefinitionsParamsSupportedDataType = "UNKNOWN"
	ListTestDefinitionsParamsSupportedDataTypeUUID              ListTestDefinitionsParamsSupportedDataType = "UUID"
	ListTestDefinitionsParamsSupportedDataTypeVARBINARY         ListTestDefinitionsParamsSupportedDataType = "VARBINARY"
	ListTestDefinitionsParamsSupportedDataTypeVARCHAR           ListTestDefinitionsParamsSupportedDataType = "VARCHAR"
	ListTestDefinitionsParamsSupportedDataTypeVARIANT           ListTestDefinitionsParamsSupportedDataType = "VARIANT"
	ListTestDefinitionsParamsSupportedDataTypeXML               ListTestDefinitionsParamsSupportedDataType = "XML"
	ListTestDefinitionsParamsSupportedDataTypeYEAR              ListTestDefinitionsParamsSupportedDataType = "YEAR"
)

// Defines values for GetTestDefinitionByNameParamsInclude.
const (
	GetTestDefinitionByNameParamsIncludeAll        GetTestDefinitionByNameParamsInclude = "all"
	GetTestDefinitionByNameParamsIncludeDeleted    GetTestDefinitionByNameParamsInclude = "deleted"
	GetTestDefinitionByNameParamsIncludeNonDeleted GetTestDefinitionByNameParamsInclude = "non-deleted"
)

// Defines values for Get4ParamsInclude.
const (
	Get4ParamsIncludeAll        Get4ParamsInclude = "all"
	Get4ParamsIncludeDeleted    Get4ParamsInclude = "deleted"
	Get4ParamsIncludeNonDeleted Get4ParamsInclude = "non-deleted"
)

// Defines values for ListTestSuitesParamsInclude.
const (
	ListTestSuitesParamsIncludeAll        ListTestSuitesParamsInclude = "all"
	ListTestSuitesParamsIncludeDeleted    ListTestSuitesParamsInclude = "deleted"
	ListTestSuitesParamsIncludeNonDeleted ListTestSuitesParamsInclude = "non-deleted"
)

// Defines values for GetTestSuiteByNameParamsInclude.
const (
	GetTestSuiteByNameParamsIncludeAll        GetTestSuiteByNameParamsInclude = "all"
	GetTestSuiteByNameParamsIncludeDeleted    GetTestSuiteByNameParamsInclude = "deleted"
	GetTestSuiteByNameParamsIncludeNonDeleted GetTestSuiteByNameParamsInclude = "non-deleted"
)

// Defines values for ListTestSuiteFromSearchServiceParamsInclude.
const (
	ListTestSuiteFromSearchServiceParamsIncludeAll        ListTestSuiteFromSearchServiceParamsInclude = "all"
	ListTestSuiteFromSearchServiceParamsIncludeDeleted    ListTestSuiteFromSearchServiceParamsInclude = "deleted"
	ListTestSuiteFromSearchServiceParamsIncludeNonDeleted ListTestSuiteFromSearchServiceParamsInclude = "non-deleted"
)

// Defines values for ListTestSuiteFromSearchServiceParamsSortType.
const (
	ListTestSuiteFromSearchServiceParamsSortTypeAsc  ListTestSuiteFromSearchServiceParamsSortType = "asc"
	ListTestSuiteFromSearchServiceParamsSortTypeDesc ListTestSuiteFromSearchServiceParamsSortType = "desc"
)

// Defines values for Get5ParamsInclude.
const (
	Get5ParamsIncludeAll        Get5ParamsInclude = "all"
	Get5ParamsIncludeDeleted    Get5ParamsInclude = "deleted"
	Get5ParamsIncludeNonDeleted Get5ParamsInclude = "non-deleted"
)

// Defines values for ListDBSchemasParamsInclude.
const (
	ListDBSchemasParamsIncludeAll        ListDBSchemasParamsInclude = "all"
	ListDBSchemasParamsIncludeDeleted    ListDBSchemasParamsInclude = "deleted"
	ListDBSchemasParamsIncludeNonDeleted ListDBSchemasParamsInclude = "non-deleted"
)

// Defines values for GetDBSchemaByFQNParamsInclude.
const (
	GetDBSchemaByFQNParamsIncludeAll        GetDBSchemaByFQNParamsInclude = "all"
	GetDBSchemaByFQNParamsIncludeDeleted    GetDBSchemaByFQNParamsInclude = "deleted"
	GetDBSchemaByFQNParamsIncludeNonDeleted GetDBSchemaByFQNParamsInclude = "non-deleted"
)

// Defines values for GetDBSchemaByIDParamsInclude.
const (
	GetDBSchemaByIDParamsIncludeAll        GetDBSchemaByIDParamsInclude = "all"
	GetDBSchemaByIDParamsIncludeDeleted    GetDBSchemaByIDParamsInclude = "deleted"
	GetDBSchemaByIDParamsIncludeNonDeleted GetDBSchemaByIDParamsInclude = "non-deleted"
)

// Defines values for ListDatabasesParamsInclude.
const (
	ListDatabasesParamsIncludeAll        ListDatabasesParamsInclude = "all"
	ListDatabasesParamsIncludeDeleted    ListDatabasesParamsInclude = "deleted"
	ListDatabasesParamsIncludeNonDeleted ListDatabasesParamsInclude = "non-deleted"
)

// Defines values for GetDatabaseByFQNParamsInclude.
const (
	GetDatabaseByFQNParamsIncludeAll        GetDatabaseByFQNParamsInclude = "all"
	GetDatabaseByFQNParamsIncludeDeleted    GetDatabaseByFQNParamsInclude = "deleted"
	GetDatabaseByFQNParamsIncludeNonDeleted GetDatabaseByFQNParamsInclude = "non-deleted"
)

// Defines values for GetDatabaseByIDParamsInclude.
const (
	GetDatabaseByIDParamsIncludeAll        GetDatabaseByIDParamsInclude = "all"
	GetDatabaseByIDParamsIncludeDeleted    GetDatabaseByIDParamsInclude = "deleted"
	GetDatabaseByIDParamsIncludeNonDeleted GetDatabaseByIDParamsInclude = "non-deleted"
)

// Defines values for GetDocumentByFQNParamsInclude.
const (
	GetDocumentByFQNParamsIncludeAll        GetDocumentByFQNParamsInclude = "all"
	GetDocumentByFQNParamsIncludeDeleted    GetDocumentByFQNParamsInclude = "deleted"
	GetDocumentByFQNParamsIncludeNonDeleted GetDocumentByFQNParamsInclude = "non-deleted"
)

// Defines values for Get2ParamsInclude.
const (
	Get2ParamsIncludeAll        Get2ParamsInclude = "all"
	Get2ParamsIncludeDeleted    Get2ParamsInclude = "deleted"
	Get2ParamsIncludeNonDeleted Get2ParamsInclude = "non-deleted"
)

// Defines values for GetEventsParamsStatus.
const (
	Failed     GetEventsParamsStatus = "failed"
	Successful GetEventsParamsStatus = "successful"
)

// Defines values for ListThreadsParamsFilterType.
const (
	ASSIGNEDBY     ListThreadsParamsFilterType = "ASSIGNED_BY"
	ASSIGNEDTO     ListThreadsParamsFilterType = "ASSIGNED_TO"
	FOLLOWS        ListThreadsParamsFilterType = "FOLLOWS"
	MENTIONS       ListThreadsParamsFilterType = "MENTIONS"
	OWNER          ListThreadsParamsFilterType = "OWNER"
	OWNERORFOLLOWS ListThreadsParamsFilterType = "OWNER_OR_FOLLOWS"
)

// Defines values for ListThreadsParamsType.
const (
	ListThreadsParamsTypeAnnouncement ListThreadsParamsType = "Announcement"
	ListThreadsParamsTypeChatbot      ListThreadsParamsType = "Chatbot"
	ListThreadsParamsTypeConversation ListThreadsParamsType = "Conversation"
	ListThreadsParamsTypeTask         ListThreadsParamsType = "Task"
)

// Defines values for ListThreadsParamsTaskStatus.
const (
	ListThreadsParamsTaskStatusClosed ListThreadsParamsTaskStatus = "Closed"
	ListThreadsParamsTaskStatusOpen   ListThreadsParamsTaskStatus = "Open"
)

// Defines values for ListGlossariesParamsInclude.
const (
	ListGlossariesParamsIncludeAll        ListGlossariesParamsInclude = "all"
	ListGlossariesParamsIncludeDeleted    ListGlossariesParamsInclude = "deleted"
	ListGlossariesParamsIncludeNonDeleted ListGlossariesParamsInclude = "non-deleted"
)

// Defines values for GetGlossaryByFQNParamsInclude.
const (
	GetGlossaryByFQNParamsIncludeAll        GetGlossaryByFQNParamsInclude = "all"
	GetGlossaryByFQNParamsIncludeDeleted    GetGlossaryByFQNParamsInclude = "deleted"
	GetGlossaryByFQNParamsIncludeNonDeleted GetGlossaryByFQNParamsInclude = "non-deleted"
)

// Defines values for GetGlossaryByIDParamsInclude.
const (
	GetGlossaryByIDParamsIncludeAll        GetGlossaryByIDParamsInclude = "all"
	GetGlossaryByIDParamsIncludeDeleted    GetGlossaryByIDParamsInclude = "deleted"
	GetGlossaryByIDParamsIncludeNonDeleted GetGlossaryByIDParamsInclude = "non-deleted"
)

// Defines values for ListGlossaryTermParamsInclude.
const (
	ListGlossaryTermParamsIncludeAll        ListGlossaryTermParamsInclude = "all"
	ListGlossaryTermParamsIncludeDeleted    ListGlossaryTermParamsInclude = "deleted"
	ListGlossaryTermParamsIncludeNonDeleted ListGlossaryTermParamsInclude = "non-deleted"
)

// Defines values for GetGlossaryTermByFQNParamsInclude.
const (
	GetGlossaryTermByFQNParamsIncludeAll        GetGlossaryTermByFQNParamsInclude = "all"
	GetGlossaryTermByFQNParamsIncludeDeleted    GetGlossaryTermByFQNParamsInclude = "deleted"
	GetGlossaryTermByFQNParamsIncludeNonDeleted GetGlossaryTermByFQNParamsInclude = "non-deleted"
)

// Defines values for GetGlossaryTermByIDParamsInclude.
const (
	GetGlossaryTermByIDParamsIncludeAll        GetGlossaryTermByIDParamsInclude = "all"
	GetGlossaryTermByIDParamsIncludeDeleted    GetGlossaryTermByIDParamsInclude = "deleted"
	GetGlossaryTermByIDParamsIncludeNonDeleted GetGlossaryTermByIDParamsInclude = "non-deleted"
)

// Defines values for ListWorkflowDefinitionsParamsInclude.
const (
	ListWorkflowDefinitionsParamsIncludeAll        ListWorkflowDefinitionsParamsInclude = "all"
	ListWorkflowDefinitionsParamsIncludeDeleted    ListWorkflowDefinitionsParamsInclude = "deleted"
	ListWorkflowDefinitionsParamsIncludeNonDeleted ListWorkflowDefinitionsParamsInclude = "non-deleted"
)

// Defines values for GetWorkflowDefinitionByFQNParamsInclude.
const (
	GetWorkflowDefinitionByFQNParamsIncludeAll        GetWorkflowDefinitionByFQNParamsInclude = "all"
	GetWorkflowDefinitionByFQNParamsIncludeDeleted    GetWorkflowDefinitionByFQNParamsInclude = "deleted"
	GetWorkflowDefinitionByFQNParamsIncludeNonDeleted GetWorkflowDefinitionByFQNParamsInclude = "non-deleted"
)

// Defines values for GetWorkflowDefinitionByIDParamsInclude.
const (
	GetWorkflowDefinitionByIDParamsIncludeAll        GetWorkflowDefinitionByIDParamsInclude = "all"
	GetWorkflowDefinitionByIDParamsIncludeDeleted    GetWorkflowDefinitionByIDParamsInclude = "deleted"
	GetWorkflowDefinitionByIDParamsIncludeNonDeleted GetWorkflowDefinitionByIDParamsInclude = "non-deleted"
)

// Defines values for GetEntityTypeFieldsParamsInclude.
const (
	GetEntityTypeFieldsParamsIncludeAll        GetEntityTypeFieldsParamsInclude = "all"
	GetEntityTypeFieldsParamsIncludeDeleted    GetEntityTypeFieldsParamsInclude = "deleted"
	GetEntityTypeFieldsParamsIncludeNonDeleted GetEntityTypeFieldsParamsInclude = "non-deleted"
)

// Defines values for GetTypeByNameParamsInclude.
const (
	GetTypeByNameParamsIncludeAll        GetTypeByNameParamsInclude = "all"
	GetTypeByNameParamsIncludeDeleted    GetTypeByNameParamsInclude = "deleted"
	GetTypeByNameParamsIncludeNonDeleted GetTypeByNameParamsInclude = "non-deleted"
)

// Defines values for GetTypeByIDParamsInclude.
const (
	GetTypeByIDParamsIncludeAll        GetTypeByIDParamsInclude = "all"
	GetTypeByIDParamsIncludeDeleted    GetTypeByIDParamsInclude = "deleted"
	GetTypeByIDParamsIncludeNonDeleted GetTypeByIDParamsInclude = "non-deleted"
)

// Defines values for ListMetricsParamsInclude.
const (
	ListMetricsParamsIncludeAll        ListMetricsParamsInclude = "all"
	ListMetricsParamsIncludeDeleted    ListMetricsParamsInclude = "deleted"
	ListMetricsParamsIncludeNonDeleted ListMetricsParamsInclude = "non-deleted"
)

// Defines values for GetMetricByFQNParamsInclude.
const (
	GetMetricByFQNParamsIncludeAll        GetMetricByFQNParamsInclude = "all"
	GetMetricByFQNParamsIncludeDeleted    GetMetricByFQNParamsInclude = "deleted"
	GetMetricByFQNParamsIncludeNonDeleted GetMetricByFQNParamsInclude = "non-deleted"
)

// Defines values for GetMetricByIDParamsInclude.
const (
	GetMetricByIDParamsIncludeAll        GetMetricByIDParamsInclude = "all"
	GetMetricByIDParamsIncludeDeleted    GetMetricByIDParamsInclude = "deleted"
	GetMetricByIDParamsIncludeNonDeleted GetMetricByIDParamsInclude = "non-deleted"
)

// Defines values for ListMlModelsParamsInclude.
const (
	ListMlModelsParamsIncludeAll        ListMlModelsParamsInclude = "all"
	ListMlModelsParamsIncludeDeleted    ListMlModelsParamsInclude = "deleted"
	ListMlModelsParamsIncludeNonDeleted ListMlModelsParamsInclude = "non-deleted"
)

// Defines values for GetMlModelByFQNParamsInclude.
const (
	GetMlModelByFQNParamsIncludeAll        GetMlModelByFQNParamsInclude = "all"
	GetMlModelByFQNParamsIncludeDeleted    GetMlModelByFQNParamsInclude = "deleted"
	GetMlModelByFQNParamsIncludeNonDeleted GetMlModelByFQNParamsInclude = "non-deleted"
)

// Defines values for GetMlModelByIDParamsInclude.
const (
	GetMlModelByIDParamsIncludeAll        GetMlModelByIDParamsInclude = "all"
	GetMlModelByIDParamsIncludeDeleted    GetMlModelByIDParamsInclude = "deleted"
	GetMlModelByIDParamsIncludeNonDeleted GetMlModelByIDParamsInclude = "non-deleted"
)

// Defines values for GetPersonaByFQNParamsInclude.
const (
	GetPersonaByFQNParamsIncludeAll        GetPersonaByFQNParamsInclude = "all"
	GetPersonaByFQNParamsIncludeDeleted    GetPersonaByFQNParamsInclude = "deleted"
	GetPersonaByFQNParamsIncludeNonDeleted GetPersonaByFQNParamsInclude = "non-deleted"
)

// Defines values for GetPersonaByIDParamsInclude.
const (
	GetPersonaByIDParamsIncludeAll        GetPersonaByIDParamsInclude = "all"
	GetPersonaByIDParamsIncludeDeleted    GetPersonaByIDParamsInclude = "deleted"
	GetPersonaByIDParamsIncludeNonDeleted GetPersonaByIDParamsInclude = "non-deleted"
)

// Defines values for ListPipelinesParamsInclude.
const (
	ListPipelinesParamsIncludeAll        ListPipelinesParamsInclude = "all"
	ListPipelinesParamsIncludeDeleted    ListPipelinesParamsInclude = "deleted"
	ListPipelinesParamsIncludeNonDeleted ListPipelinesParamsInclude = "non-deleted"
)

// Defines values for GetPipelineByFQNParamsInclude.
const (
	GetPipelineByFQNParamsIncludeAll        GetPipelineByFQNParamsInclude = "all"
	GetPipelineByFQNParamsIncludeDeleted    GetPipelineByFQNParamsInclude = "deleted"
	GetPipelineByFQNParamsIncludeNonDeleted GetPipelineByFQNParamsInclude = "non-deleted"
)

// Defines values for GetPipelineWithIDParamsInclude.
const (
	GetPipelineWithIDParamsIncludeAll        GetPipelineWithIDParamsInclude = "all"
	GetPipelineWithIDParamsIncludeDeleted    GetPipelineWithIDParamsInclude = "deleted"
	GetPipelineWithIDParamsIncludeNonDeleted GetPipelineWithIDParamsInclude = "non-deleted"
)

// Defines values for ListPoliciesParamsInclude.
const (
	ListPoliciesParamsIncludeAll        ListPoliciesParamsInclude = "all"
	ListPoliciesParamsIncludeDeleted    ListPoliciesParamsInclude = "deleted"
	ListPoliciesParamsIncludeNonDeleted ListPoliciesParamsInclude = "non-deleted"
)

// Defines values for GetPolicyByFQNParamsInclude.
const (
	GetPolicyByFQNParamsIncludeAll        GetPolicyByFQNParamsInclude = "all"
	GetPolicyByFQNParamsIncludeDeleted    GetPolicyByFQNParamsInclude = "deleted"
	GetPolicyByFQNParamsIncludeNonDeleted GetPolicyByFQNParamsInclude = "non-deleted"
)

// Defines values for GetPolicyByIDParamsInclude.
const (
	GetPolicyByIDParamsIncludeAll        GetPolicyByIDParamsInclude = "all"
	GetPolicyByIDParamsIncludeDeleted    GetPolicyByIDParamsInclude = "deleted"
	GetPolicyByIDParamsIncludeNonDeleted GetPolicyByIDParamsInclude = "non-deleted"
)

// Defines values for GetReportByIDParamsInclude.
const (
	GetReportByIDParamsIncludeAll        GetReportByIDParamsInclude = "all"
	GetReportByIDParamsIncludeDeleted    GetReportByIDParamsInclude = "deleted"
	GetReportByIDParamsIncludeNonDeleted GetReportByIDParamsInclude = "non-deleted"
)

// Defines values for ListRolesParamsInclude.
const (
	ListRolesParamsIncludeAll        ListRolesParamsInclude = "all"
	ListRolesParamsIncludeDeleted    ListRolesParamsInclude = "deleted"
	ListRolesParamsIncludeNonDeleted ListRolesParamsInclude = "non-deleted"
)

// Defines values for GetRoleByFQNParamsInclude.
const (
	GetRoleByFQNParamsIncludeAll        GetRoleByFQNParamsInclude = "all"
	GetRoleByFQNParamsIncludeDeleted    GetRoleByFQNParamsInclude = "deleted"
	GetRoleByFQNParamsIncludeNonDeleted GetRoleByFQNParamsInclude = "non-deleted"
)

// Defines values for GetRoleByIDParamsInclude.
const (
	GetRoleByIDParamsIncludeAll        GetRoleByIDParamsInclude = "all"
	GetRoleByIDParamsIncludeDeleted    GetRoleByIDParamsInclude = "deleted"
	GetRoleByIDParamsIncludeNonDeleted GetRoleByIDParamsInclude = "non-deleted"
)

// Defines values for ListSearchIndexesParamsInclude.
const (
	ListSearchIndexesParamsIncludeAll        ListSearchIndexesParamsInclude = "all"
	ListSearchIndexesParamsIncludeDeleted    ListSearchIndexesParamsInclude = "deleted"
	ListSearchIndexesParamsIncludeNonDeleted ListSearchIndexesParamsInclude = "non-deleted"
)

// Defines values for GetSearchIndexByFQNParamsInclude.
const (
	GetSearchIndexByFQNParamsIncludeAll        GetSearchIndexByFQNParamsInclude = "all"
	GetSearchIndexByFQNParamsIncludeDeleted    GetSearchIndexByFQNParamsInclude = "deleted"
	GetSearchIndexByFQNParamsIncludeNonDeleted GetSearchIndexByFQNParamsInclude = "non-deleted"
)

// Defines values for Get6ParamsInclude.
const (
	Get6ParamsIncludeAll        Get6ParamsInclude = "all"
	Get6ParamsIncludeDeleted    Get6ParamsInclude = "deleted"
	Get6ParamsIncludeNonDeleted Get6ParamsInclude = "non-deleted"
)

// Defines values for ListAPIServicesParamsInclude.
const (
	ListAPIServicesParamsIncludeAll        ListAPIServicesParamsInclude = "all"
	ListAPIServicesParamsIncludeDeleted    ListAPIServicesParamsInclude = "deleted"
	ListAPIServicesParamsIncludeNonDeleted ListAPIServicesParamsInclude = "non-deleted"
)

// Defines values for GetAPIServiceByFQNParamsInclude.
const (
	GetAPIServiceByFQNParamsIncludeAll        GetAPIServiceByFQNParamsInclude = "all"
	GetAPIServiceByFQNParamsIncludeDeleted    GetAPIServiceByFQNParamsInclude = "deleted"
	GetAPIServiceByFQNParamsIncludeNonDeleted GetAPIServiceByFQNParamsInclude = "non-deleted"
)

// Defines values for GetAPIServiceByIDParamsInclude.
const (
	GetAPIServiceByIDParamsIncludeAll        GetAPIServiceByIDParamsInclude = "all"
	GetAPIServiceByIDParamsIncludeDeleted    GetAPIServiceByIDParamsInclude = "deleted"
	GetAPIServiceByIDParamsIncludeNonDeleted GetAPIServiceByIDParamsInclude = "non-deleted"
)

// Defines values for ListDashboardsServiceParamsInclude.
const (
	ListDashboardsServiceParamsIncludeAll        ListDashboardsServiceParamsInclude = "all"
	ListDashboardsServiceParamsIncludeDeleted    ListDashboardsServiceParamsInclude = "deleted"
	ListDashboardsServiceParamsIncludeNonDeleted ListDashboardsServiceParamsInclude = "non-deleted"
)

// Defines values for GetDashboardServiceByFQNParamsInclude.
const (
	GetDashboardServiceByFQNParamsIncludeAll        GetDashboardServiceByFQNParamsInclude = "all"
	GetDashboardServiceByFQNParamsIncludeDeleted    GetDashboardServiceByFQNParamsInclude = "deleted"
	GetDashboardServiceByFQNParamsIncludeNonDeleted GetDashboardServiceByFQNParamsInclude = "non-deleted"
)

// Defines values for GetDashboardServiceByIDParamsInclude.
const (
	GetDashboardServiceByIDParamsIncludeAll        GetDashboardServiceByIDParamsInclude = "all"
	GetDashboardServiceByIDParamsIncludeDeleted    GetDashboardServiceByIDParamsInclude = "deleted"
	GetDashboardServiceByIDParamsIncludeNonDeleted GetDashboardServiceByIDParamsInclude = "non-deleted"
)

// Defines values for ListDatabaseServicesParamsInclude.
const (
	ListDatabaseServicesParamsIncludeAll        ListDatabaseServicesParamsInclude = "all"
	ListDatabaseServicesParamsIncludeDeleted    ListDatabaseServicesParamsInclude = "deleted"
	ListDatabaseServicesParamsIncludeNonDeleted ListDatabaseServicesParamsInclude = "non-deleted"
)

// Defines values for GetDatabaseServiceByFQNParamsInclude.
const (
	GetDatabaseServiceByFQNParamsIncludeAll        GetDatabaseServiceByFQNParamsInclude = "all"
	GetDatabaseServiceByFQNParamsIncludeDeleted    GetDatabaseServiceByFQNParamsInclude = "deleted"
	GetDatabaseServiceByFQNParamsIncludeNonDeleted GetDatabaseServiceByFQNParamsInclude = "non-deleted"
)

// Defines values for GetDatabaseServiceByIDParamsInclude.
const (
	GetDatabaseServiceByIDParamsIncludeAll        GetDatabaseServiceByIDParamsInclude = "all"
	GetDatabaseServiceByIDParamsIncludeDeleted    GetDatabaseServiceByIDParamsInclude = "deleted"
	GetDatabaseServiceByIDParamsIncludeNonDeleted GetDatabaseServiceByIDParamsInclude = "non-deleted"
)

// Defines values for ListIngestionPipelinesParamsInclude.
const (
	ListIngestionPipelinesParamsIncludeAll        ListIngestionPipelinesParamsInclude = "all"
	ListIngestionPipelinesParamsIncludeDeleted    ListIngestionPipelinesParamsInclude = "deleted"
	ListIngestionPipelinesParamsIncludeNonDeleted ListIngestionPipelinesParamsInclude = "non-deleted"
)

// Defines values for GetSpecificIngestionPipelineByFQNParamsInclude.
const (
	GetSpecificIngestionPipelineByFQNParamsIncludeAll        GetSpecificIngestionPipelineByFQNParamsInclude = "all"
	GetSpecificIngestionPipelineByFQNParamsIncludeDeleted    GetSpecificIngestionPipelineByFQNParamsInclude = "deleted"
	GetSpecificIngestionPipelineByFQNParamsIncludeNonDeleted GetSpecificIngestionPipelineByFQNParamsInclude = "non-deleted"
)

// Defines values for GetIngestionPipelineByIDParamsInclude.
const (
	GetIngestionPipelineByIDParamsIncludeAll        GetIngestionPipelineByIDParamsInclude = "all"
	GetIngestionPipelineByIDParamsIncludeDeleted    GetIngestionPipelineByIDParamsInclude = "deleted"
	GetIngestionPipelineByIDParamsIncludeNonDeleted GetIngestionPipelineByIDParamsInclude = "non-deleted"
)

// Defines values for ListMessagingServiceParamsInclude.
const (
	ListMessagingServiceParamsIncludeAll        ListMessagingServiceParamsInclude = "all"
	ListMessagingServiceParamsIncludeDeleted    ListMessagingServiceParamsInclude = "deleted"
	ListMessagingServiceParamsIncludeNonDeleted ListMessagingServiceParamsInclude = "non-deleted"
)

// Defines values for GetMessagingServiceByFQNParamsInclude.
const (
	GetMessagingServiceByFQNParamsIncludeAll        GetMessagingServiceByFQNParamsInclude = "all"
	GetMessagingServiceByFQNParamsIncludeDeleted    GetMessagingServiceByFQNParamsInclude = "deleted"
	GetMessagingServiceByFQNParamsIncludeNonDeleted GetMessagingServiceByFQNParamsInclude = "non-deleted"
)

// Defines values for GetMessagingServiceByIDParamsInclude.
const (
	GetMessagingServiceByIDParamsIncludeAll        GetMessagingServiceByIDParamsInclude = "all"
	GetMessagingServiceByIDParamsIncludeDeleted    GetMessagingServiceByIDParamsInclude = "deleted"
	GetMessagingServiceByIDParamsIncludeNonDeleted GetMessagingServiceByIDParamsInclude = "non-deleted"
)

// Defines values for ListMetadataServicesParamsInclude.
const (
	ListMetadataServicesParamsIncludeAll        ListMetadataServicesParamsInclude = "all"
	ListMetadataServicesParamsIncludeDeleted    ListMetadataServicesParamsInclude = "deleted"
	ListMetadataServicesParamsIncludeNonDeleted ListMetadataServicesParamsInclude = "non-deleted"
)

// Defines values for GetMetadataServiceByFQNParamsInclude.
const (
	GetMetadataServiceByFQNParamsIncludeAll        GetMetadataServiceByFQNParamsInclude = "all"
	GetMetadataServiceByFQNParamsIncludeDeleted    GetMetadataServiceByFQNParamsInclude = "deleted"
	GetMetadataServiceByFQNParamsIncludeNonDeleted GetMetadataServiceByFQNParamsInclude = "non-deleted"
)

// Defines values for GetMetadataServiceByIDParamsInclude.
const (
	GetMetadataServiceByIDParamsIncludeAll        GetMetadataServiceByIDParamsInclude = "all"
	GetMetadataServiceByIDParamsIncludeDeleted    GetMetadataServiceByIDParamsInclude = "deleted"
	GetMetadataServiceByIDParamsIncludeNonDeleted GetMetadataServiceByIDParamsInclude = "non-deleted"
)

// Defines values for ListMlModelServiceParamsInclude.
const (
	ListMlModelServiceParamsIncludeAll        ListMlModelServiceParamsInclude = "all"
	ListMlModelServiceParamsIncludeDeleted    ListMlModelServiceParamsInclude = "deleted"
	ListMlModelServiceParamsIncludeNonDeleted ListMlModelServiceParamsInclude = "non-deleted"
)

// Defines values for GetMlModelServiceByFQNParamsInclude.
const (
	GetMlModelServiceByFQNParamsIncludeAll        GetMlModelServiceByFQNParamsInclude = "all"
	GetMlModelServiceByFQNParamsIncludeDeleted    GetMlModelServiceByFQNParamsInclude = "deleted"
	GetMlModelServiceByFQNParamsIncludeNonDeleted GetMlModelServiceByFQNParamsInclude = "non-deleted"
)

// Defines values for GetMlModelServiceByIDParamsInclude.
const (
	GetMlModelServiceByIDParamsIncludeAll        GetMlModelServiceByIDParamsInclude = "all"
	GetMlModelServiceByIDParamsIncludeDeleted    GetMlModelServiceByIDParamsInclude = "deleted"
	GetMlModelServiceByIDParamsIncludeNonDeleted GetMlModelServiceByIDParamsInclude = "non-deleted"
)

// Defines values for ListPipelineServiceParamsInclude.
const (
	ListPipelineServiceParamsIncludeAll        ListPipelineServiceParamsInclude = "all"
	ListPipelineServiceParamsIncludeDeleted    ListPipelineServiceParamsInclude = "deleted"
	ListPipelineServiceParamsIncludeNonDeleted ListPipelineServiceParamsInclude = "non-deleted"
)

// Defines values for GetPipelineServiceByFQNParamsInclude.
const (
	GetPipelineServiceByFQNParamsIncludeAll        GetPipelineServiceByFQNParamsInclude = "all"
	GetPipelineServiceByFQNParamsIncludeDeleted    GetPipelineServiceByFQNParamsInclude = "deleted"
	GetPipelineServiceByFQNParamsIncludeNonDeleted GetPipelineServiceByFQNParamsInclude = "non-deleted"
)

// Defines values for GetPipelineServiceByIDParamsInclude.
const (
	GetPipelineServiceByIDParamsIncludeAll        GetPipelineServiceByIDParamsInclude = "all"
	GetPipelineServiceByIDParamsIncludeDeleted    GetPipelineServiceByIDParamsInclude = "deleted"
	GetPipelineServiceByIDParamsIncludeNonDeleted GetPipelineServiceByIDParamsInclude = "non-deleted"
)

// Defines values for ListSearchServicesParamsInclude.
const (
	ListSearchServicesParamsIncludeAll        ListSearchServicesParamsInclude = "all"
	ListSearchServicesParamsIncludeDeleted    ListSearchServicesParamsInclude = "deleted"
	ListSearchServicesParamsIncludeNonDeleted ListSearchServicesParamsInclude = "non-deleted"
)

// Defines values for GetSearchServiceByFQNParamsInclude.
const (
	GetSearchServiceByFQNParamsIncludeAll        GetSearchServiceByFQNParamsInclude = "all"
	GetSearchServiceByFQNParamsIncludeDeleted    GetSearchServiceByFQNParamsInclude = "deleted"
	GetSearchServiceByFQNParamsIncludeNonDeleted GetSearchServiceByFQNParamsInclude = "non-deleted"
)

// Defines values for GetSearchServiceByIDParamsInclude.
const (
	GetSearchServiceByIDParamsIncludeAll        GetSearchServiceByIDParamsInclude = "all"
	GetSearchServiceByIDParamsIncludeDeleted    GetSearchServiceByIDParamsInclude = "deleted"
	GetSearchServiceByIDParamsIncludeNonDeleted GetSearchServiceByIDParamsInclude = "non-deleted"
)

// Defines values for ListStorageServicesParamsInclude.
const (
	ListStorageServicesParamsIncludeAll        ListStorageServicesParamsInclude = "all"
	ListStorageServicesParamsIncludeDeleted    ListStorageServicesParamsInclude = "deleted"
	ListStorageServicesParamsIncludeNonDeleted ListStorageServicesParamsInclude = "non-deleted"
)

// Defines values for GetStorageServiceByFQNParamsInclude.
const (
	GetStorageServiceByFQNParamsIncludeAll        GetStorageServiceByFQNParamsInclude = "all"
	GetStorageServiceByFQNParamsIncludeDeleted    GetStorageServiceByFQNParamsInclude = "deleted"
	GetStorageServiceByFQNParamsIncludeNonDeleted GetStorageServiceByFQNParamsInclude = "non-deleted"
)

// Defines values for GetStorageServiceByIDParamsInclude.
const (
	GetStorageServiceByIDParamsIncludeAll        GetStorageServiceByIDParamsInclude = "all"
	GetStorageServiceByIDParamsIncludeDeleted    GetStorageServiceByIDParamsInclude = "deleted"
	GetStorageServiceByIDParamsIncludeNonDeleted GetStorageServiceByIDParamsInclude = "non-deleted"
)

// Defines values for ListStoredProceduresParamsInclude.
const (
	ListStoredProceduresParamsIncludeAll        ListStoredProceduresParamsInclude = "all"
	ListStoredProceduresParamsIncludeDeleted    ListStoredProceduresParamsInclude = "deleted"
	ListStoredProceduresParamsIncludeNonDeleted ListStoredProceduresParamsInclude = "non-deleted"
)

// Defines values for GetStoredProcedureByFQNParamsInclude.
const (
	GetStoredProcedureByFQNParamsIncludeAll        GetStoredProcedureByFQNParamsInclude = "all"
	GetStoredProcedureByFQNParamsIncludeDeleted    GetStoredProcedureByFQNParamsInclude = "deleted"
	GetStoredProcedureByFQNParamsIncludeNonDeleted GetStoredProcedureByFQNParamsInclude = "non-deleted"
)

// Defines values for GetStoredProcedureByIDParamsInclude.
const (
	GetStoredProcedureByIDParamsIncludeAll        GetStoredProcedureByIDParamsInclude = "all"
	GetStoredProcedureByIDParamsIncludeDeleted    GetStoredProcedureByIDParamsInclude = "deleted"
	GetStoredProcedureByIDParamsIncludeNonDeleted GetStoredProcedureByIDParamsInclude = "non-deleted"
)

// Defines values for ListTablesParamsInclude.
const (
	ListTablesParamsIncludeAll        ListTablesParamsInclude = "all"
	ListTablesParamsIncludeDeleted    ListTablesParamsInclude = "deleted"
	ListTablesParamsIncludeNonDeleted ListTablesParamsInclude = "non-deleted"
)

// Defines values for GetTableByFQNParamsInclude.
const (
	GetTableByFQNParamsIncludeAll        GetTableByFQNParamsInclude = "all"
	GetTableByFQNParamsIncludeDeleted    GetTableByFQNParamsInclude = "deleted"
	GetTableByFQNParamsIncludeNonDeleted GetTableByFQNParamsInclude = "non-deleted"
)

// Defines values for PatchTableParamsChangeSource.
const (
	PatchTableParamsChangeSourceAutomated  PatchTableParamsChangeSource = "Automated"
	PatchTableParamsChangeSourceDerived    PatchTableParamsChangeSource = "Derived"
	PatchTableParamsChangeSourceIngested   PatchTableParamsChangeSource = "Ingested"
	PatchTableParamsChangeSourceManual     PatchTableParamsChangeSource = "Manual"
	PatchTableParamsChangeSourcePropagated PatchTableParamsChangeSource = "Propagated"
	PatchTableParamsChangeSourceSuggested  PatchTableParamsChangeSource = "Suggested"
)

// Defines values for GetTableByIDParamsInclude.
const (
	GetTableByIDParamsIncludeAll        GetTableByIDParamsInclude = "all"
	GetTableByIDParamsIncludeDeleted    GetTableByIDParamsInclude = "deleted"
	GetTableByIDParamsIncludeNonDeleted GetTableByIDParamsInclude = "non-deleted"
)

// Defines values for PatchTable1ParamsChangeSource.
const (
	PatchTable1ParamsChangeSourceAutomated  PatchTable1ParamsChangeSource = "Automated"
	PatchTable1ParamsChangeSourceDerived    PatchTable1ParamsChangeSource = "Derived"
	PatchTable1ParamsChangeSourceIngested   PatchTable1ParamsChangeSource = "Ingested"
	PatchTable1ParamsChangeSourceManual     PatchTable1ParamsChangeSource = "Manual"
	PatchTable1ParamsChangeSourcePropagated PatchTable1ParamsChangeSource = "Propagated"
	PatchTable1ParamsChangeSourceSuggested  PatchTable1ParamsChangeSource = "Suggested"
)

// Defines values for ListTagsParamsInclude.
const (
	ListTagsParamsIncludeAll        ListTagsParamsInclude = "all"
	ListTagsParamsIncludeDeleted    ListTagsParamsInclude = "deleted"
	ListTagsParamsIncludeNonDeleted ListTagsParamsInclude = "non-deleted"
)

// Defines values for GetTagByFQNParamsInclude.
const (
	GetTagByFQNParamsIncludeAll        GetTagByFQNParamsInclude = "all"
	GetTagByFQNParamsIncludeDeleted    GetTagByFQNParamsInclude = "deleted"
	GetTagByFQNParamsIncludeNonDeleted GetTagByFQNParamsInclude = "non-deleted"
)

// Defines values for GetTagByIDParamsInclude.
const (
	GetTagByIDParamsIncludeAll        GetTagByIDParamsInclude = "all"
	GetTagByIDParamsIncludeDeleted    GetTagByIDParamsInclude = "deleted"
	GetTagByIDParamsIncludeNonDeleted GetTagByIDParamsInclude = "non-deleted"
)

// Defines values for ListTeamsParamsInclude.
const (
	ListTeamsParamsIncludeAll        ListTeamsParamsInclude = "all"
	ListTeamsParamsIncludeDeleted    ListTeamsParamsInclude = "deleted"
	ListTeamsParamsIncludeNonDeleted ListTeamsParamsInclude = "non-deleted"
)

// Defines values for GetTeamByFQNParamsInclude.
const (
	GetTeamByFQNParamsIncludeAll        GetTeamByFQNParamsInclude = "all"
	GetTeamByFQNParamsIncludeDeleted    GetTeamByFQNParamsInclude = "deleted"
	GetTeamByFQNParamsIncludeNonDeleted GetTeamByFQNParamsInclude = "non-deleted"
)

// Defines values for GetTeamByIDParamsInclude.
const (
	GetTeamByIDParamsIncludeAll        GetTeamByIDParamsInclude = "all"
	GetTeamByIDParamsIncludeDeleted    GetTeamByIDParamsInclude = "deleted"
	GetTeamByIDParamsIncludeNonDeleted GetTeamByIDParamsInclude = "non-deleted"
)

// Defines values for ListTopicsParamsInclude.
const (
	ListTopicsParamsIncludeAll        ListTopicsParamsInclude = "all"
	ListTopicsParamsIncludeDeleted    ListTopicsParamsInclude = "deleted"
	ListTopicsParamsIncludeNonDeleted ListTopicsParamsInclude = "non-deleted"
)

// Defines values for GetTopicByFQNParamsInclude.
const (
	GetTopicByFQNParamsIncludeAll        GetTopicByFQNParamsInclude = "all"
	GetTopicByFQNParamsIncludeDeleted    GetTopicByFQNParamsInclude = "deleted"
	GetTopicByFQNParamsIncludeNonDeleted GetTopicByFQNParamsInclude = "non-deleted"
)

// Defines values for Get7ParamsInclude.
const (
	Get7ParamsIncludeAll        Get7ParamsInclude = "all"
	Get7ParamsIncludeDeleted    Get7ParamsInclude = "deleted"
	Get7ParamsIncludeNonDeleted Get7ParamsInclude = "non-deleted"
)

// Defines values for ListUsersParamsInclude.
const (
	ListUsersParamsIncludeAll        ListUsersParamsInclude = "all"
	ListUsersParamsIncludeDeleted    ListUsersParamsInclude = "deleted"
	ListUsersParamsIncludeNonDeleted ListUsersParamsInclude = "non-deleted"
)

// Defines values for GetUserByFQNParamsInclude.
const (
	GetUserByFQNParamsIncludeAll        GetUserByFQNParamsInclude = "all"
	GetUserByFQNParamsIncludeDeleted    GetUserByFQNParamsInclude = "deleted"
	GetUserByFQNParamsIncludeNonDeleted GetUserByFQNParamsInclude = "non-deleted"
)

// Defines values for GetUserByIDParamsInclude.
const (
	GetUserByIDParamsIncludeAll        GetUserByIDParamsInclude = "all"
	GetUserByIDParamsIncludeDeleted    GetUserByIDParamsInclude = "deleted"
	GetUserByIDParamsIncludeNonDeleted GetUserByIDParamsInclude = "non-deleted"
)

// APICollection defines model for APICollection.
type APICollection struct {
	ApiEndpoints                 *[]EntityReference        `json:"apiEndpoints,omitempty"`
	Certification                *AssetCertification       `json:"certification,omitempty"`
	ChangeDescription            *ChangeDescription        `json:"changeDescription,omitempty"`
	Children                     *[]EntityReference        `json:"children,omitempty"`
	DataProducts                 *[]EntityReference        `json:"dataProducts,omitempty"`
	Deleted                      *bool                     `json:"deleted,omitempty"`
	Description                  *string                   `json:"description,omitempty"`
	DisplayName                  *string                   `json:"displayName,omitempty"`
	Domain                       *EntityReference          `json:"domain,omitempty"`
	EndpointURL                  string                    `json:"endpointURL"`
	Experts                      *[]EntityReference        `json:"experts,omitempty"`
	Extension                    *map[string]interface{}   `json:"extension,omitempty"`
	Followers                    *[]EntityReference        `json:"followers,omitempty"`
	FullyQualifiedName           *string                   `json:"fullyQualifiedName,omitempty"`
	Href                         *string                   `json:"href,omitempty"`
	Id                           openapi_types.UUID        `json:"id"`
	IncrementalChangeDescription *ChangeDescription        `json:"incrementalChangeDescription,omitempty"`
	LifeCycle                    *LifeCycle                `json:"lifeCycle,omitempty"`
	Name                         string                    `json:"name"`
	Owners                       *[]EntityReference        `json:"owners,omitempty"`
	Provider                     *APICollectionProvider    `json:"provider,omitempty"`
	Reviewers                    *[]EntityReference        `json:"reviewers,omitempty"`
	Service                      EntityReference           `json:"service"`
	ServiceType                  *APICollectionServiceType `json:"serviceType,omitempty"`
	SourceHash                   *string                   `json:"sourceHash,omitempty"`
	Style                        *Style                    `json:"style,omitempty"`
	Tags                         *[]TagLabel               `json:"tags,omitempty"`
	UpdatedAt                    *int64                    `json:"updatedAt,omitempty"`
	UpdatedBy                    *string                   `json:"updatedBy,omitempty"`
	UsageSummary                 *UsageDetails             `json:"usageSummary,omitempty"`
	Version                      *float64                  `json:"version,omitempty"`
	Votes                        *Votes                    `json:"votes,omitempty"`
}

// APICollectionProvider defines model for APICollection.Provider.
type APICollectionProvider string

// APICollectionServiceType defines model for APICollection.ServiceType.
type APICollectionServiceType string

// APICollectionList defines model for APICollectionList.
type APICollectionList struct {
	Data   []APICollection `json:"data"`
	Errors *[]EntityError  `json:"errors,omitempty"`
	Paging *Paging         `json:"paging,omitempty"`
}

// APIEndpoint defines model for APIEndpoint.
type APIEndpoint struct {
	ApiCollection                *EntityReference          `json:"apiCollection,omitempty"`
	Certification                *AssetCertification       `json:"certification,omitempty"`
	ChangeDescription            *ChangeDescription        `json:"changeDescription,omitempty"`
	Children                     *[]EntityReference        `json:"children,omitempty"`
	DataProducts                 *[]EntityReference        `json:"dataProducts,omitempty"`
	Deleted                      *bool                     `json:"deleted,omitempty"`
	Description                  *string                   `json:"description,omitempty"`
	DisplayName                  *string                   `json:"displayName,omitempty"`
	Domain                       *EntityReference          `json:"domain,omitempty"`
	EndpointURL                  string                    `json:"endpointURL"`
	Experts                      *[]EntityReference        `json:"experts,omitempty"`
	Extension                    *map[string]interface{}   `json:"extension,omitempty"`
	Followers                    *[]EntityReference        `json:"followers,omitempty"`
	FullyQualifiedName           *string                   `json:"fullyQualifiedName,omitempty"`
	Href                         *string                   `json:"href,omitempty"`
	Id                           openapi_types.UUID        `json:"id"`
	IncrementalChangeDescription *ChangeDescription        `json:"incrementalChangeDescription,omitempty"`
	LifeCycle                    *LifeCycle                `json:"lifeCycle,omitempty"`
	Name                         string                    `json:"name"`
	Owners                       *[]EntityReference        `json:"owners,omitempty"`
	Provider                     *APIEndpointProvider      `json:"provider,omitempty"`
	RequestMethod                *APIEndpointRequestMethod `json:"requestMethod,omitempty"`
	RequestSchema                *APISchema                `json:"requestSchema,omitempty"`
	ResponseSchema               *APISchema                `json:"responseSchema,omitempty"`
	Reviewers                    *[]EntityReference        `json:"reviewers,omitempty"`
	Service                      EntityReference           `json:"service"`
	ServiceType                  *APIEndpointServiceType   `json:"serviceType,omitempty"`
	SourceHash                   *string                   `json:"sourceHash,omitempty"`
	Style                        *Style                    `json:"style,omitempty"`
	Tags                         *[]TagLabel               `json:"tags,omitempty"`
	UpdatedAt                    *int64                    `json:"updatedAt,omitempty"`
	UpdatedBy                    *string                   `json:"updatedBy,omitempty"`
	UsageSummary                 *UsageDetails             `json:"usageSummary,omitempty"`
	Version                      *float64                  `json:"version,omitempty"`
	Votes                        *Votes                    `json:"votes,omitempty"`
}

// APIEndpointProvider defines model for APIEndpoint.Provider.
type APIEndpointProvider string

// APIEndpointRequestMethod defines model for APIEndpoint.RequestMethod.
type APIEndpointRequestMethod string

// APIEndpointServiceType defines model for APIEndpoint.ServiceType.
type APIEndpointServiceType string

// APIEndpointList defines model for APIEndpointList.
type APIEndpointList struct {
	Data   []APIEndpoint  `json:"data"`
	Errors *[]EntityError `json:"errors,omitempty"`
	Paging *Paging        `json:"paging,omitempty"`
}

// APISchema defines model for APISchema.
type APISchema struct {
	SchemaFields *[]Field             `json:"schemaFields,omitempty"`
	SchemaType   *APISchemaSchemaType `json:"schemaType,omitempty"`
}

// APISchemaSchemaType defines model for APISchema.SchemaType.
type APISchemaSchemaType string

// APIServiceList defines model for APIServiceList.
type APIServiceList struct {
	Data   []ApiService   `json:"data"`
	Errors *[]EntityError `json:"errors,omitempty"`
	Paging *Paging        `json:"paging,omitempty"`
}

// AccessDetails defines model for AccessDetails.
type AccessDetails struct {
	AccessedBy         *EntityReference `json:"accessedBy,omitempty"`
	AccessedByAProcess *string          `json:"accessedByAProcess,omitempty"`
	Timestamp          int64            `json:"timestamp"`
}

// AddGlossaryToAssetsRequest defines model for AddGlossaryToAssetsRequest.
type AddGlossaryToAssetsRequest struct {
	Assets       *[]EntityReference                   `json:"assets,omitempty"`
	DryRun       *bool                                `json:"dryRun,omitempty"`
	GlossaryTags *[]TagLabel                          `json:"glossaryTags,omitempty"`
	Operation    *AddGlossaryToAssetsRequestOperation `json:"operation,omitempty"`
}

// AddGlossaryToAssetsRequestOperation defines model for AddGlossaryToAssetsRequest.Operation.
type AddGlossaryToAssetsRequestOperation string

// AddLineage defines model for AddLineage.
type AddLineage struct {
	Edge EntitiesEdge `json:"edge"`
}

// AddTagToAssetsRequest defines model for AddTagToAssetsRequest.
type AddTagToAssetsRequest struct {
	Assets    *[]EntityReference              `json:"assets,omitempty"`
	DryRun    *bool                           `json:"dryRun,omitempty"`
	Operation *AddTagToAssetsRequestOperation `json:"operation,omitempty"`
}

// AddTagToAssetsRequestOperation defines model for AddTagToAssetsRequest.Operation.
type AddTagToAssetsRequestOperation string

// AdditionalSettings defines model for AdditionalSettings.
type AdditionalSettings = map[string]interface{}

// Aggregation defines model for Aggregation.
type Aggregation struct {
	Fragment *bool                              `json:"fragment,omitempty"`
	Metadata *map[string]map[string]interface{} `json:"metadata,omitempty"`
	Name     *string                            `json:"name,omitempty"`
	Type     *string                            `json:"type,omitempty"`
}

// AggregationProfileShardResult defines model for AggregationProfileShardResult.
type AggregationProfileShardResult struct {
	Fragment       *bool            `json:"fragment,omitempty"`
	ProfileResults *[]ProfileResult `json:"profileResults,omitempty"`
}

// AggregationRequest defines model for AggregationRequest.
type AggregationRequest struct {
	Deleted      *bool     `json:"deleted,omitempty"`
	FieldName    string    `json:"fieldName"`
	FieldValue   *string   `json:"fieldValue,omitempty"`
	Index        *string   `json:"index,omitempty"`
	Query        *string   `json:"query,omitempty"`
	Size         *int32    `json:"size,omitempty"`
	SourceFields *[]string `json:"sourceFields,omitempty"`
	TopHits      *TopHits  `json:"topHits,omitempty"`
}

// Aggregations defines model for Aggregations.
type Aggregations struct {
	AsMap    *map[string]Aggregation `json:"asMap,omitempty"`
	Fragment *bool                   `json:"fragment,omitempty"`
}

// AirflowConfig defines model for AirflowConfig.
type AirflowConfig struct {
	Concurrency                    *int32     `json:"concurrency,omitempty"`
	Email                          *string    `json:"email,omitempty"`
	EndDate                        *time.Time `json:"endDate,omitempty"`
	MaxActiveRuns                  *int32     `json:"maxActiveRuns,omitempty"`
	PausePipeline                  *bool      `json:"pausePipeline,omitempty"`
	PipelineCatchup                *bool      `json:"pipelineCatchup,omitempty"`
	PipelineTimezone               *string    `json:"pipelineTimezone,omitempty"`
	Retries                        *int32     `json:"retries,omitempty"`
	RetryDelay                     *int32     `json:"retryDelay,omitempty"`
	ScheduleInterval               *string    `json:"scheduleInterval,omitempty"`
	StartDate                      *time.Time `json:"startDate,omitempty"`
	WorkflowDefaultView            *string    `json:"workflowDefaultView,omitempty"`
	WorkflowDefaultViewOrientation *string    `json:"workflowDefaultViewOrientation,omitempty"`
	WorkflowTimeout                *int32     `json:"workflowTimeout,omitempty"`
}

// AlertFilteringInput defines model for AlertFilteringInput.
type AlertFilteringInput struct {
	Actions *[]ArgumentsInput `json:"actions,omitempty"`
	Filters *[]ArgumentsInput `json:"filters,omitempty"`
}

// AllowedFieldValueBoostFields defines model for AllowedFieldValueBoostFields.
type AllowedFieldValueBoostFields struct {
	EntityType string   `json:"entityType"`
	Fields     []Field1 `json:"fields"`
}

// AllowedSearchFields defines model for AllowedSearchFields.
type AllowedSearchFields struct {
	EntityType string  `json:"entityType"`
	Fields     []Field `json:"fields"`
}

// AnnouncementDetails defines model for AnnouncementDetails.
type AnnouncementDetails struct {
	Description *string `json:"description,omitempty"`
	EndTime     int64   `json:"endTime"`
	StartTime   int64   `json:"startTime"`
}

// ApiConnection defines model for ApiConnection.
type ApiConnection struct {
	Config *map[string]interface{} `json:"config,omitempty"`
}

// ApiService defines model for ApiService.
type ApiService struct {
	Certification                *AssetCertification     `json:"certification,omitempty"`
	ChangeDescription            *ChangeDescription      `json:"changeDescription,omitempty"`
	Children                     *[]EntityReference      `json:"children,omitempty"`
	Connection                   *ApiConnection          `json:"connection,omitempty"`
	DataProducts                 *[]EntityReference      `json:"dataProducts,omitempty"`
	Deleted                      *bool                   `json:"deleted,omitempty"`
	Description                  *string                 `json:"description,omitempty"`
	DisplayName                  *string                 `json:"displayName,omitempty"`
	Domain                       *EntityReference        `json:"domain,omitempty"`
	Experts                      *[]EntityReference      `json:"experts,omitempty"`
	Extension                    *map[string]interface{} `json:"extension,omitempty"`
	Followers                    *[]EntityReference      `json:"followers,omitempty"`
	FullyQualifiedName           *string                 `json:"fullyQualifiedName,omitempty"`
	Href                         *string                 `json:"href,omitempty"`
	Id                           openapi_types.UUID      `json:"id"`
	IncrementalChangeDescription *ChangeDescription      `json:"incrementalChangeDescription,omitempty"`
	IngestionRunner              *EntityReference        `json:"ingestionRunner,omitempty"`
	LifeCycle                    *LifeCycle              `json:"lifeCycle,omitempty"`
	Name                         string                  `json:"name"`
	Owners                       *[]EntityReference      `json:"owners,omitempty"`
	Pipelines                    *[]EntityReference      `json:"pipelines,omitempty"`
	Provider                     *ApiServiceProvider     `json:"provider,omitempty"`
	Reviewers                    *[]EntityReference      `json:"reviewers,omitempty"`
	Service                      *EntityReference        `json:"service,omitempty"`
	ServiceType                  ApiServiceServiceType   `json:"serviceType"`
	Style                        *Style                  `json:"style,omitempty"`
	Tags                         *[]TagLabel             `json:"tags,omitempty"`
	TestConnectionResult         *TestConnectionResult   `json:"testConnectionResult,omitempty"`
	UpdatedAt                    *int64                  `json:"updatedAt,omitempty"`
	UpdatedBy                    *string                 `json:"updatedBy,omitempty"`
	UsageSummary                 *UsageDetails           `json:"usageSummary,omitempty"`
	Version                      *float64                `json:"version,omitempty"`
	Votes                        *Votes                  `json:"votes,omitempty"`
}

// ApiServiceProvider defines model for ApiService.Provider.
type ApiServiceProvider string

// ApiServiceServiceType defines model for ApiService.ServiceType.
type ApiServiceServiceType string

// App defines model for App.
type App struct {
	AgentType                    *AppAgentType           `json:"agentType,omitempty"`
	AllowConfiguration           *bool                   `json:"allowConfiguration,omitempty"`
	AppConfiguration             *map[string]interface{} `json:"appConfiguration,omitempty"`
	AppLogoUrl                   *string                 `json:"appLogoUrl,omitempty"`
	AppSchedule                  AppSchedule             `json:"appSchedule"`
	AppScreenshots               *[]string               `json:"appScreenshots,omitempty"`
	AppType                      AppAppType              `json:"appType"`
	Bot                          *EntityReference        `json:"bot,omitempty"`
	Certification                *AssetCertification     `json:"certification,omitempty"`
	ChangeDescription            *ChangeDescription      `json:"changeDescription,omitempty"`
	Children                     *[]EntityReference      `json:"children,omitempty"`
	ClassName                    string                  `json:"className"`
	DataProducts                 *[]EntityReference      `json:"dataProducts,omitempty"`
	Deleted                      *bool                   `json:"deleted,omitempty"`
	Description                  *string                 `json:"description,omitempty"`
	Developer                    *string                 `json:"developer,omitempty"`
	DeveloperUrl                 *string                 `json:"developerUrl,omitempty"`
	DisplayName                  *string                 `json:"displayName,omitempty"`
	Domain                       *EntityReference        `json:"domain,omitempty"`
	EventSubscriptions           *[]EntityReference      `json:"eventSubscriptions,omitempty"`
	Experts                      *[]EntityReference      `json:"experts,omitempty"`
	Extension                    *map[string]interface{} `json:"extension,omitempty"`
	Features                     *string                 `json:"features,omitempty"`
	Followers                    *[]EntityReference      `json:"followers,omitempty"`
	FullyQualifiedName           *string                 `json:"fullyQualifiedName,omitempty"`
	Href                         *string                 `json:"href,omitempty"`
	Id                           openapi_types.UUID      `json:"id"`
	IncrementalChangeDescription *ChangeDescription      `json:"incrementalChangeDescription,omitempty"`
	LifeCycle                    *LifeCycle              `json:"lifeCycle,omitempty"`
	Name                         string                  `json:"name"`
	OpenMetadataServerConnection *OpenMetadataConnection `json:"openMetadataServerConnection,omitempty"`
	Owners                       *[]EntityReference      `json:"owners,omitempty"`
	Permission                   AppPermission           `json:"permission"`
	Pipelines                    *[]EntityReference      `json:"pipelines,omitempty"`
	Preview                      *bool                   `json:"preview,omitempty"`
	PrivacyPolicyUrl             *string                 `json:"privacyPolicyUrl,omitempty"`
	PrivateConfiguration         *map[string]interface{} `json:"privateConfiguration,omitempty"`
	Provider                     *AppProvider            `json:"provider,omitempty"`
	Reviewers                    *[]EntityReference      `json:"reviewers,omitempty"`
	Runtime                      map[string]interface{}  `json:"runtime"`
	ScheduleType                 AppScheduleType         `json:"scheduleType"`
	Service                      *EntityReference        `json:"service,omitempty"`
	SourcePythonClass            *string                 `json:"sourcePythonClass,omitempty"`
	Style                        *Style                  `json:"style,omitempty"`
	SupportEmail                 *string                 `json:"supportEmail,omitempty"`
	SupportsInterrupt            *bool                   `json:"supportsInterrupt,omitempty"`
	System                       *bool                   `json:"system,omitempty"`
	Tags                         *[]TagLabel             `json:"tags,omitempty"`
	UpdatedAt                    *int64                  `json:"updatedAt,omitempty"`
	UpdatedBy                    *string                 `json:"updatedBy,omitempty"`
	UsageSummary                 *UsageDetails           `json:"usageSummary,omitempty"`
	Version                      *float64                `json:"version,omitempty"`
	Votes                        *Votes                  `json:"votes,omitempty"`
}

// AppAgentType defines model for App.AgentType.
type AppAgentType string

// AppAppType defines model for App.AppType.
type AppAppType string

// AppPermission defines model for App.Permission.
type AppPermission string

// AppProvider defines model for App.Provider.
type AppProvider string

// AppScheduleType defines model for App.ScheduleType.
type AppScheduleType string

// AppExtension defines model for AppExtension.
type AppExtension struct {
	AppId     openapi_types.UUID    `json:"appId"`
	AppName   string                `json:"appName"`
	Extension AppExtensionExtension `json:"extension"`
	Timestamp *int64                `json:"timestamp,omitempty"`
}

// AppExtensionExtension defines model for AppExtension.Extension.
type AppExtensionExtension string

// AppList defines model for AppList.
type AppList struct {
	Data   []App          `json:"data"`
	Errors *[]EntityError `json:"errors,omitempty"`
	Paging *Paging        `json:"paging,omitempty"`
}

// AppMarketPlaceDefinition defines model for AppMarketPlaceDefinition.
type AppMarketPlaceDefinition struct {
	AgentType                    *AppMarketPlaceDefinitionAgentType   `json:"agentType,omitempty"`
	AllowConfiguration           *bool                                `json:"allowConfiguration,omitempty"`
	AppConfiguration             *map[string]interface{}              `json:"appConfiguration,omitempty"`
	AppLogoUrl                   *string                              `json:"appLogoUrl,omitempty"`
	AppScreenshots               *[]string                            `json:"appScreenshots,omitempty"`
	AppType                      AppMarketPlaceDefinitionAppType      `json:"appType"`
	Certification                *AssetCertification                  `json:"certification,omitempty"`
	ChangeDescription            *ChangeDescription                   `json:"changeDescription,omitempty"`
	Children                     *[]EntityReference                   `json:"children,omitempty"`
	ClassName                    string                               `json:"className"`
	DataProducts                 *[]EntityReference                   `json:"dataProducts,omitempty"`
	Deleted                      *bool                                `json:"deleted,omitempty"`
	Description                  *string                              `json:"description,omitempty"`
	Developer                    *string                              `json:"developer,omitempty"`
	DeveloperUrl                 *string                              `json:"developerUrl,omitempty"`
	DisplayName                  *string                              `json:"displayName,omitempty"`
	Domain                       *EntityReference                     `json:"domain,omitempty"`
	EventSubscriptions           *[]CreateEventSubscription           `json:"eventSubscriptions,omitempty"`
	Experts                      *[]EntityReference                   `json:"experts,omitempty"`
	Extension                    *map[string]interface{}              `json:"extension,omitempty"`
	Features                     *string                              `json:"features,omitempty"`
	Followers                    *[]EntityReference                   `json:"followers,omitempty"`
	FullyQualifiedName           *string                              `json:"fullyQualifiedName,omitempty"`
	Href                         *string                              `json:"href,omitempty"`
	Id                           openapi_types.UUID                   `json:"id"`
	IncrementalChangeDescription *ChangeDescription                   `json:"incrementalChangeDescription,omitempty"`
	LifeCycle                    *LifeCycle                           `json:"lifeCycle,omitempty"`
	Name                         string                               `json:"name"`
	Owners                       *[]EntityReference                   `json:"owners,omitempty"`
	Permission                   AppMarketPlaceDefinitionPermission   `json:"permission"`
	Preview                      *bool                                `json:"preview,omitempty"`
	PrivacyPolicyUrl             *string                              `json:"privacyPolicyUrl,omitempty"`
	Provider                     *AppMarketPlaceDefinitionProvider    `json:"provider,omitempty"`
	Reviewers                    *[]EntityReference                   `json:"reviewers,omitempty"`
	Runtime                      *map[string]interface{}              `json:"runtime,omitempty"`
	ScheduleType                 AppMarketPlaceDefinitionScheduleType `json:"scheduleType"`
	Service                      *EntityReference                     `json:"service,omitempty"`
	SourcePythonClass            *string                              `json:"sourcePythonClass,omitempty"`
	Style                        *Style                               `json:"style,omitempty"`
	SupportEmail                 *string                              `json:"supportEmail,omitempty"`
	SupportsInterrupt            *bool                                `json:"supportsInterrupt,omitempty"`
	System                       *bool                                `json:"system,omitempty"`
	Tags                         *[]TagLabel                          `json:"tags,omitempty"`
	UpdatedAt                    *int64                               `json:"updatedAt,omitempty"`
	UpdatedBy                    *string                              `json:"updatedBy,omitempty"`
	UsageSummary                 *UsageDetails                        `json:"usageSummary,omitempty"`
	Version                      *float64                             `json:"version,omitempty"`
	Votes                        *Votes                               `json:"votes,omitempty"`
}

// AppMarketPlaceDefinitionAgentType defines model for AppMarketPlaceDefinition.AgentType.
type AppMarketPlaceDefinitionAgentType string

// AppMarketPlaceDefinitionAppType defines model for AppMarketPlaceDefinition.AppType.
type AppMarketPlaceDefinitionAppType string

// AppMarketPlaceDefinitionPermission defines model for AppMarketPlaceDefinition.Permission.
type AppMarketPlaceDefinitionPermission string

// AppMarketPlaceDefinitionProvider defines model for AppMarketPlaceDefinition.Provider.
type AppMarketPlaceDefinitionProvider string

// AppMarketPlaceDefinitionScheduleType defines model for AppMarketPlaceDefinition.ScheduleType.
type AppMarketPlaceDefinitionScheduleType string

// AppMarketPlaceDefinitionList defines model for AppMarketPlaceDefinitionList.
type AppMarketPlaceDefinitionList struct {
	Data   []AppMarketPlaceDefinition `json:"data"`
	Errors *[]EntityError             `json:"errors,omitempty"`
	Paging *Paging                    `json:"paging,omitempty"`
}

// AppRunList defines model for AppRunList.
type AppRunList struct {
	Data   []AppRunRecord `json:"data"`
	Errors *[]EntityError `json:"errors,omitempty"`
	Paging *Paging        `json:"paging,omitempty"`
}

// AppRunRecord defines model for AppRunRecord.
type AppRunRecord struct {
	AppId          *openapi_types.UUID                `json:"appId,omitempty"`
	AppName        *string                            `json:"appName,omitempty"`
	Config         *map[string]map[string]interface{} `json:"config,omitempty"`
	EndTime        *int64                             `json:"endTime,omitempty"`
	ExecutionTime  *int64                             `json:"executionTime,omitempty"`
	Extension      *string                            `json:"extension,omitempty"`
	FailureContext *FailureContext                    `json:"failureContext,omitempty"`
	Properties     *map[string]map[string]interface{} `json:"properties,omitempty"`
	RunType        *string                            `json:"runType,omitempty"`
	ScheduleInfo   *AppSchedule                       `json:"scheduleInfo,omitempty"`
	Services       *[]EntityReference                 `json:"services,omitempty"`
	StartTime      *int64                             `json:"startTime,omitempty"`
	Status         *AppRunRecordStatus                `json:"status,omitempty"`
	SuccessContext *SuccessContext                    `json:"successContext,omitempty"`
	Timestamp      *int64                             `json:"timestamp,omitempty"`
}

// AppRunRecordStatus defines model for AppRunRecord.Status.
type AppRunRecordStatus string

// AppSchedule defines model for AppSchedule.
type AppSchedule struct {
	CronExpression   *string                     `json:"cronExpression,omitempty"`
	ScheduleTimeline AppScheduleScheduleTimeline `json:"scheduleTimeline"`
}

// AppScheduleScheduleTimeline defines model for AppSchedule.ScheduleTimeline.
type AppScheduleScheduleTimeline string

// Argument defines model for Argument.
type Argument struct {
	Input *[]string `json:"input,omitempty"`
	Name  *string   `json:"name,omitempty"`
}

// ArgumentsInput defines model for ArgumentsInput.
type ArgumentsInput struct {
	Arguments       *[]Argument                    `json:"arguments,omitempty"`
	Effect          *ArgumentsInputEffect          `json:"effect,omitempty"`
	Name            *string                        `json:"name,omitempty"`
	PrefixCondition *ArgumentsInputPrefixCondition `json:"prefixCondition,omitempty"`
}

// ArgumentsInputEffect defines model for ArgumentsInput.Effect.
type ArgumentsInputEffect string

// ArgumentsInputPrefixCondition defines model for ArgumentsInput.PrefixCondition.
type ArgumentsInputPrefixCondition string

// AssetCertification defines model for AssetCertification.
type AssetCertification struct {
	AppliedDate int64    `json:"appliedDate"`
	ExpiryDate  int64    `json:"expiryDate"`
	TagLabel    TagLabel `json:"tagLabel"`
}

// AssetTypeConfiguration defines model for AssetTypeConfiguration.
type AssetTypeConfiguration struct {
	AdditionalSettings *AdditionalSettings              `json:"additionalSettings,omitempty"`
	Aggregations       *[]Aggregation                   `json:"aggregations,omitempty"`
	AssetType          string                           `json:"assetType"`
	BoostMode          *AssetTypeConfigurationBoostMode `json:"boostMode,omitempty"`
	FieldValueBoosts   *[]FieldValueBoost               `json:"fieldValueBoosts,omitempty"`
	HighlightFields    *[]string                        `json:"highlightFields,omitempty"`
	ScoreMode          *AssetTypeConfigurationScoreMode `json:"scoreMode,omitempty"`
	SearchFields       *[]FieldBoost                    `json:"searchFields,omitempty"`
	TermBoosts         *[]TermBoost                     `json:"termBoosts,omitempty"`
}

// AssetTypeConfigurationBoostMode defines model for AssetTypeConfiguration.BoostMode.
type AssetTypeConfigurationBoostMode string

// AssetTypeConfigurationScoreMode defines model for AssetTypeConfiguration.ScoreMode.
type AssetTypeConfigurationScoreMode string

// AuthenticationMechanism defines model for AuthenticationMechanism.
type AuthenticationMechanism struct {
	AuthType *AuthenticationMechanismAuthType `json:"authType,omitempty"`
	Config   *map[string]interface{}          `json:"config,omitempty"`
}

// AuthenticationMechanismAuthType defines model for AuthenticationMechanism.AuthType.
type AuthenticationMechanismAuthType string

// Bot defines model for Bot.
type Bot struct {
	BotUser                      EntityReference         `json:"botUser"`
	Certification                *AssetCertification     `json:"certification,omitempty"`
	ChangeDescription            *ChangeDescription      `json:"changeDescription,omitempty"`
	Children                     *[]EntityReference      `json:"children,omitempty"`
	DataProducts                 *[]EntityReference      `json:"dataProducts,omitempty"`
	Deleted                      *bool                   `json:"deleted,omitempty"`
	Description                  *string                 `json:"description,omitempty"`
	DisplayName                  *string                 `json:"displayName,omitempty"`
	Domain                       *EntityReference        `json:"domain,omitempty"`
	Experts                      *[]EntityReference      `json:"experts,omitempty"`
	Extension                    *map[string]interface{} `json:"extension,omitempty"`
	Followers                    *[]EntityReference      `json:"followers,omitempty"`
	FullyQualifiedName           *string                 `json:"fullyQualifiedName,omitempty"`
	Href                         *string                 `json:"href,omitempty"`
	Id                           openapi_types.UUID      `json:"id"`
	IncrementalChangeDescription *ChangeDescription      `json:"incrementalChangeDescription,omitempty"`
	LifeCycle                    *LifeCycle              `json:"lifeCycle,omitempty"`
	Name                         string                  `json:"name"`
	Owners                       *[]EntityReference      `json:"owners,omitempty"`
	Provider                     *BotProvider            `json:"provider,omitempty"`
	Reviewers                    *[]EntityReference      `json:"reviewers,omitempty"`
	Service                      *EntityReference        `json:"service,omitempty"`
	Style                        *Style                  `json:"style,omitempty"`
	Tags                         *[]TagLabel             `json:"tags,omitempty"`
	UpdatedAt                    *int64                  `json:"updatedAt,omitempty"`
	UpdatedBy                    *string                 `json:"updatedBy,omitempty"`
	UsageSummary                 *UsageDetails           `json:"usageSummary,omitempty"`
	Version                      *float64                `json:"version,omitempty"`
	Votes                        *Votes                  `json:"votes,omitempty"`
}

// BotProvider defines model for Bot.Provider.
type BotProvider string

// BotList defines model for BotList.
type BotList struct {
	Data   []Bot          `json:"data"`
	Errors *[]EntityError `json:"errors,omitempty"`
	Paging *Paging        `json:"paging,omitempty"`
}

// BulkAssets defines model for BulkAssets.
type BulkAssets struct {
	Assets *[]EntityReference `json:"assets,omitempty"`
}

// BulkOperationResult defines model for BulkOperationResult.
type BulkOperationResult struct {
	AbortReason           *string                    `json:"abortReason,omitempty"`
	DryRun                *bool                      `json:"dryRun,omitempty"`
	FailedRequest         *[]BulkResponse            `json:"failedRequest,omitempty"`
	NumberOfRowsFailed    *int32                     `json:"numberOfRowsFailed,omitempty"`
	NumberOfRowsPassed    *int32                     `json:"numberOfRowsPassed,omitempty"`
	NumberOfRowsProcessed *int32                     `json:"numberOfRowsProcessed,omitempty"`
	Status                *BulkOperationResultStatus `json:"status,omitempty"`
	SuccessRequest        *[]BulkResponse            `json:"successRequest,omitempty"`
}

// BulkOperationResultStatus defines model for BulkOperationResult.Status.
type BulkOperationResultStatus string

// BulkResponse defines model for BulkResponse.
type BulkResponse struct {
	Message *string                 `json:"message,omitempty"`
	Request *map[string]interface{} `json:"request,omitempty"`
}

// BytesReference defines model for BytesReference.
type BytesReference struct {
	Fragment *bool `json:"fragment,omitempty"`
}

// CSVExportMessage defines model for CSVExportMessage.
type CSVExportMessage struct {
	Data   *string `json:"data,omitempty"`
	Error  *string `json:"error,omitempty"`
	JobId  *string `json:"jobId,omitempty"`
	Status *string `json:"status,omitempty"`
}

// CSVExportResponse defines model for CSVExportResponse.
type CSVExportResponse struct {
	JobId   *string `json:"jobId,omitempty"`
	Message *string `json:"message,omitempty"`
}

// ChangeDescription defines model for ChangeDescription.
type ChangeDescription struct {
	ChangeSummary   *ChangeSummaryMap `json:"changeSummary,omitempty"`
	FieldsAdded     *[]FieldChange    `json:"fieldsAdded,omitempty"`
	FieldsDeleted   *[]FieldChange    `json:"fieldsDeleted,omitempty"`
	FieldsUpdated   *[]FieldChange    `json:"fieldsUpdated,omitempty"`
	PreviousVersion *float64          `json:"previousVersion,omitempty"`
}

// ChangeEvent defines model for ChangeEvent.
type ChangeEvent struct {
	ChangeDescription            *ChangeDescription      `json:"changeDescription,omitempty"`
	CurrentVersion               *float64                `json:"currentVersion,omitempty"`
	Domain                       *openapi_types.UUID     `json:"domain,omitempty"`
	Entity                       *map[string]interface{} `json:"entity,omitempty"`
	EntityFullyQualifiedName     *string                 `json:"entityFullyQualifiedName,omitempty"`
	EntityId                     openapi_types.UUID      `json:"entityId"`
	EntityType                   string                  `json:"entityType"`
	EventType                    ChangeEventEventType    `json:"eventType"`
	Id                           openapi_types.UUID      `json:"id"`
	IncrementalChangeDescription *ChangeDescription      `json:"incrementalChangeDescription,omitempty"`
	PreviousVersion              *float64                `json:"previousVersion,omitempty"`
	Timestamp                    int64                   `json:"timestamp"`
	UserName                     *string                 `json:"userName,omitempty"`
}

// ChangeEventEventType defines model for ChangeEvent.EventType.
type ChangeEventEventType string

// ChangePasswordRequest defines model for ChangePasswordRequest.
type ChangePasswordRequest struct {
	ConfirmPassword string                            `json:"confirmPassword"`
	NewPassword     string                            `json:"newPassword"`
	OldPassword     *string                           `json:"oldPassword,omitempty"`
	RequestType     *ChangePasswordRequestRequestType `json:"requestType,omitempty"`
	Username        *string                           `json:"username,omitempty"`
}

// ChangePasswordRequestRequestType defines model for ChangePasswordRequest.RequestType.
type ChangePasswordRequestRequestType string

// ChangeSummaryMap defines model for ChangeSummaryMap.
type ChangeSummaryMap = map[string]interface{}

// Chart defines model for Chart.
type Chart struct {
	Certification                *AssetCertification     `json:"certification,omitempty"`
	ChangeDescription            *ChangeDescription      `json:"changeDescription,omitempty"`
	ChartType                    *ChartChartType         `json:"chartType,omitempty"`
	Children                     *[]EntityReference      `json:"children,omitempty"`
	Dashboards                   *[]EntityReference      `json:"dashboards,omitempty"`
	DataProducts                 *[]EntityReference      `json:"dataProducts,omitempty"`
	Deleted                      *bool                   `json:"deleted,omitempty"`
	Description                  *string                 `json:"description,omitempty"`
	DisplayName                  *string                 `json:"displayName,omitempty"`
	Domain                       *EntityReference        `json:"domain,omitempty"`
	Experts                      *[]EntityReference      `json:"experts,omitempty"`
	Extension                    *map[string]interface{} `json:"extension,omitempty"`
	Followers                    *[]EntityReference      `json:"followers,omitempty"`
	FullyQualifiedName           *string                 `json:"fullyQualifiedName,omitempty"`
	Href                         *string                 `json:"href,omitempty"`
	Id                           openapi_types.UUID      `json:"id"`
	IncrementalChangeDescription *ChangeDescription      `json:"incrementalChangeDescription,omitempty"`
	LifeCycle                    *LifeCycle              `json:"lifeCycle,omitempty"`
	Name                         string                  `json:"name"`
	Owners                       *[]EntityReference      `json:"owners,omitempty"`
	Provider                     *ChartProvider          `json:"provider,omitempty"`
	Reviewers                    *[]EntityReference      `json:"reviewers,omitempty"`
	Service                      EntityReference         `json:"service"`
	ServiceType                  *ChartServiceType       `json:"serviceType,omitempty"`
	SourceHash                   *string                 `json:"sourceHash,omitempty"`
	SourceUrl                    *string                 `json:"sourceUrl,omitempty"`
	Style                        *Style                  `json:"style,omitempty"`
	Tags                         *[]TagLabel             `json:"tags,omitempty"`
	UpdatedAt                    *int64                  `json:"updatedAt,omitempty"`
	UpdatedBy                    *string                 `json:"updatedBy,omitempty"`
	UsageSummary                 *UsageDetails           `json:"usageSummary,omitempty"`
	Version                      *float64                `json:"version,omitempty"`
	Votes                        *Votes                  `json:"votes,omitempty"`
}

// ChartChartType defines model for Chart.ChartType.
type ChartChartType string

// ChartProvider defines model for Chart.Provider.
type ChartProvider string

// ChartServiceType defines model for Chart.ServiceType.
type ChartServiceType string

// ChartList defines model for ChartList.
type ChartList struct {
	Data   []Chart        `json:"data"`
	Errors *[]EntityError `json:"errors,omitempty"`
	Paging *Paging        `json:"paging,omitempty"`
}

// ChatbotDetails defines model for ChatbotDetails.
type ChatbotDetails struct {
	Query *string `json:"query,omitempty"`
}

// Classification defines model for Classification.
type Classification struct {
	Certification                *AssetCertification     `json:"certification,omitempty"`
	ChangeDescription            *ChangeDescription      `json:"changeDescription,omitempty"`
	Children                     *[]EntityReference      `json:"children,omitempty"`
	DataProducts                 *[]EntityReference      `json:"dataProducts,omitempty"`
	Deleted                      *bool                   `json:"deleted,omitempty"`
	Description                  string                  `json:"description"`
	Disabled                     *bool                   `json:"disabled,omitempty"`
	DisplayName                  *string                 `json:"displayName,omitempty"`
	Domain                       *EntityReference        `json:"domain,omitempty"`
	Experts                      *[]EntityReference      `json:"experts,omitempty"`
	Extension                    *map[string]interface{} `json:"extension,omitempty"`
	Followers                    *[]EntityReference      `json:"followers,omitempty"`
	FullyQualifiedName           *string                 `json:"fullyQualifiedName,omitempty"`
	Href                         *string                 `json:"href,omitempty"`
	Id                           *openapi_types.UUID     `json:"id,omitempty"`
	IncrementalChangeDescription *ChangeDescription      `json:"incrementalChangeDescription,omitempty"`
	LifeCycle                    *LifeCycle              `json:"lifeCycle,omitempty"`
	MutuallyExclusive            *bool                   `json:"mutuallyExclusive,omitempty"`
	Name                         string                  `json:"name"`
	Owners                       *[]EntityReference      `json:"owners,omitempty"`
	Provider                     *ClassificationProvider `json:"provider,omitempty"`
	Reviewers                    *[]EntityReference      `json:"reviewers,omitempty"`
	Service                      *EntityReference        `json:"service,omitempty"`
	Style                        *Style                  `json:"style,omitempty"`
	Tags                         *[]TagLabel             `json:"tags,omitempty"`
	TermCount                    *int32                  `json:"termCount,omitempty"`
	UpdatedAt                    *int64                  `json:"updatedAt,omitempty"`
	UpdatedBy                    *string                 `json:"updatedBy,omitempty"`
	UsageCount                   *int32                  `json:"usageCount,omitempty"`
	UsageSummary                 *UsageDetails           `json:"usageSummary,omitempty"`
	Version                      *float64                `json:"version,omitempty"`
	Votes                        *Votes                  `json:"votes,omitempty"`
}

// ClassificationProvider defines model for Classification.Provider.
type ClassificationProvider string

// ClassificationList defines model for ClassificationList.
type ClassificationList struct {
	Data   []Classification `json:"data"`
	Errors *[]EntityError   `json:"errors,omitempty"`
	Paging *Paging          `json:"paging,omitempty"`
}

// CloseTask defines model for CloseTask.
type CloseTask struct {
	Comment     string  `json:"comment"`
	TestCaseFQN *string `json:"testCaseFQN,omitempty"`
}

// Clusters defines model for Clusters.
type Clusters struct {
	Fragment   *bool  `json:"fragment,omitempty"`
	Skipped    *int32 `json:"skipped,omitempty"`
	Successful *int32 `json:"successful,omitempty"`
	Total      *int32 `json:"total,omitempty"`
}

// CollectorResult defines model for CollectorResult.
type CollectorResult struct {
	Fragment         *bool              `json:"fragment,omitempty"`
	Name             *string            `json:"name,omitempty"`
	ProfiledChildren *[]CollectorResult `json:"profiledChildren,omitempty"`
	Reason           *string            `json:"reason,omitempty"`
	Time             *int64             `json:"time,omitempty"`
}

// Column defines model for Column.
type Column struct {
	ArrayDataType      *ColumnArrayDataType `json:"arrayDataType,omitempty"`
	Children           *[]Column            `json:"children,omitempty"`
	Constraint         *ColumnConstraint    `json:"constraint,omitempty"`
	CustomMetrics      *[]CustomMetric      `json:"customMetrics,omitempty"`
	DataLength         *int32               `json:"dataLength,omitempty"`
	DataType           ColumnDataType       `json:"dataType"`
	DataTypeDisplay    *string              `json:"dataTypeDisplay,omitempty"`
	Description        *string              `json:"description,omitempty"`
	DisplayName        *string              `json:"displayName,omitempty"`
	FullyQualifiedName *string              `json:"fullyQualifiedName,omitempty"`
	JsonSchema         *string              `json:"jsonSchema,omitempty"`
	Name               string               `json:"name"`
	OrdinalPosition    *int32               `json:"ordinalPosition,omitempty"`
	Precision          *int32               `json:"precision,omitempty"`
	Profile            *ColumnProfile       `json:"profile,omitempty"`
	Scale              *int32               `json:"scale,omitempty"`
	Tags               *[]TagLabel          `json:"tags,omitempty"`
}

// ColumnArrayDataType defines model for Column.ArrayDataType.
type ColumnArrayDataType string

// ColumnConstraint defines model for Column.Constraint.
type ColumnConstraint string

// ColumnDataType defines model for Column.DataType.
type ColumnDataType string

// ColumnJoin defines model for ColumnJoin.
type ColumnJoin struct {
	ColumnName *string       `json:"columnName,omitempty"`
	JoinedWith *[]JoinedWith `json:"joinedWith,omitempty"`
}

// ColumnLineage defines model for ColumnLineage.
type ColumnLineage struct {
	FromColumns *[]string `json:"fromColumns,omitempty"`
	Function    *string   `json:"function,omitempty"`
	ToColumn    *string   `json:"toColumn,omitempty"`
}

// ColumnProfile defines model for ColumnProfile.
type ColumnProfile struct {
	CustomMetrics      *[]CustomMetricProfile  `json:"customMetrics,omitempty"`
	DistinctCount      *float64                `json:"distinctCount,omitempty"`
	DistinctProportion *float64                `json:"distinctProportion,omitempty"`
	DuplicateCount     *float64                `json:"duplicateCount,omitempty"`
	FirstQuartile      *float64                `json:"firstQuartile,omitempty"`
	Histogram          *Histogram              `json:"histogram,omitempty"`
	InterQuartileRange *float64                `json:"interQuartileRange,omitempty"`
	Max                *map[string]interface{} `json:"max,omitempty"`
	MaxLength          *float64                `json:"maxLength,omitempty"`
	Mean               *float64                `json:"mean,omitempty"`
	Median             *float64                `json:"median,omitempty"`
	Min                *map[string]interface{} `json:"min,omitempty"`
	MinLength          *float64                `json:"minLength,omitempty"`
	MissingCount       *float64                `json:"missingCount,omitempty"`
	MissingPercentage  *float64                `json:"missingPercentage,omitempty"`
	Name               string                  `json:"name"`
	NonParametricSkew  *float64                `json:"nonParametricSkew,omitempty"`
	NullCount          *float64                `json:"nullCount,omitempty"`
	NullProportion     *float64                `json:"nullProportion,omitempty"`
	Stddev             *float64                `json:"stddev,omitempty"`
	Sum                *float64                `json:"sum,omitempty"`
	ThirdQuartile      *float64                `json:"thirdQuartile,omitempty"`
	Timestamp          int64                   `json:"timestamp"`
	UniqueCount        *float64                `json:"uniqueCount,omitempty"`
	UniqueProportion   *float64                `json:"uniqueProportion,omitempty"`
	ValidCount         *float64                `json:"validCount,omitempty"`
	ValuesCount        *float64                `json:"valuesCount,omitempty"`
	ValuesPercentage   *float64                `json:"valuesPercentage,omitempty"`
	Variance           *float64                `json:"variance,omitempty"`
}

// ColumnProfileList defines model for ColumnProfileList.
type ColumnProfileList struct {
	Data   []ColumnProfile `json:"data"`
	Errors *[]EntityError  `json:"errors,omitempty"`
	Paging *Paging         `json:"paging,omitempty"`
}

// ColumnProfilerConfig defines model for ColumnProfilerConfig.
type ColumnProfilerConfig struct {
	ColumnName *string   `json:"columnName,omitempty"`
	Metrics    *[]string `json:"metrics,omitempty"`
}

// ColumnTestSummaryDefinition defines model for ColumnTestSummaryDefinition.
type ColumnTestSummaryDefinition struct {
	Aborted    *int32  `json:"aborted,omitempty"`
	EntityLink *string `json:"entityLink,omitempty"`
	Failed     *int32  `json:"failed,omitempty"`
	Queued     *int32  `json:"queued,omitempty"`
	Success    *int32  `json:"success,omitempty"`
	Total      *int32  `json:"total,omitempty"`
}

// ComponentConfig defines model for ComponentConfig.
type ComponentConfig = map[string]interface{}

// Condition defines model for Condition.
type Condition struct {
	Range *Range `json:"range,omitempty"`
}

// Container defines model for Container.
type Container struct {
	Certification                *AssetCertification     `json:"certification,omitempty"`
	ChangeDescription            *ChangeDescription      `json:"changeDescription,omitempty"`
	Children                     *[]EntityReference      `json:"children,omitempty"`
	DataModel                    *ContainerDataModel     `json:"dataModel,omitempty"`
	DataProducts                 *[]EntityReference      `json:"dataProducts,omitempty"`
	Deleted                      *bool                   `json:"deleted,omitempty"`
	Description                  *string                 `json:"description,omitempty"`
	DisplayName                  *string                 `json:"displayName,omitempty"`
	Domain                       *EntityReference        `json:"domain,omitempty"`
	Experts                      *[]EntityReference      `json:"experts,omitempty"`
	Extension                    *map[string]interface{} `json:"extension,omitempty"`
	FileFormats                  *[]ContainerFileFormats `json:"fileFormats,omitempty"`
	Followers                    *[]EntityReference      `json:"followers,omitempty"`
	FullPath                     *string                 `json:"fullPath,omitempty"`
	FullyQualifiedName           *string                 `json:"fullyQualifiedName,omitempty"`
	Href                         *string                 `json:"href,omitempty"`
	Id                           openapi_types.UUID      `json:"id"`
	IncrementalChangeDescription *ChangeDescription      `json:"incrementalChangeDescription,omitempty"`
	LifeCycle                    *LifeCycle              `json:"lifeCycle,omitempty"`
	Name                         string                  `json:"name"`
	NumberOfObjects              *float64                `json:"numberOfObjects,omitempty"`
	Owners                       *[]EntityReference      `json:"owners,omitempty"`
	Parent                       *EntityReference        `json:"parent,omitempty"`
	Prefix                       *string                 `json:"prefix,omitempty"`
	Provider                     *ContainerProvider      `json:"provider,omitempty"`
	RetentionPeriod              *string                 `json:"retentionPeriod,omitempty"`
	Reviewers                    *[]EntityReference      `json:"reviewers,omitempty"`
	Service                      EntityReference         `json:"service"`
	ServiceType                  *ContainerServiceType   `json:"serviceType,omitempty"`
	Size                         *float64                `json:"size,omitempty"`
	SourceHash                   *string                 `json:"sourceHash,omitempty"`
	SourceUrl                    *string                 `json:"sourceUrl,omitempty"`
	Style                        *Style                  `json:"style,omitempty"`
	Tags                         *[]TagLabel             `json:"tags,omitempty"`
	UpdatedAt                    *int64                  `json:"updatedAt,omitempty"`
	UpdatedBy                    *string                 `json:"updatedBy,omitempty"`
	UsageSummary                 *UsageDetails           `json:"usageSummary,omitempty"`
	Version                      *float64                `json:"version,omitempty"`
	Votes                        *Votes                  `json:"votes,omitempty"`
}

// ContainerFileFormats defines model for Container.FileFormats.
type ContainerFileFormats string

// ContainerProvider defines model for Container.Provider.
type ContainerProvider string

// ContainerServiceType defines model for Container.ServiceType.
type ContainerServiceType string

// ContainerDataModel defines model for ContainerDataModel.
type ContainerDataModel struct {
	Columns       []Column `json:"columns"`
	IsPartitioned *bool    `json:"isPartitioned,omitempty"`
}

// ContainerList defines model for ContainerList.
type ContainerList struct {
	Data   []Container    `json:"data"`
	Errors *[]EntityError `json:"errors,omitempty"`
	Paging *Paging        `json:"paging,omitempty"`
}

// CreateAPICollection defines model for CreateAPICollection.
type CreateAPICollection struct {
	ApiEndpoints *[]string               `json:"apiEndpoints,omitempty"`
	DataProducts *[]string               `json:"dataProducts,omitempty"`
	Description  *string                 `json:"description,omitempty"`
	DisplayName  *string                 `json:"displayName,omitempty"`
	Domain       *string                 `json:"domain,omitempty"`
	EndpointURL  *string                 `json:"endpointURL,omitempty"`
	Extension    *map[string]interface{} `json:"extension,omitempty"`
	LifeCycle    *LifeCycle              `json:"lifeCycle,omitempty"`
	Name         string                  `json:"name"`
	Owners       *[]EntityReference      `json:"owners,omitempty"`
	Reviewers    *[]EntityReference      `json:"reviewers,omitempty"`
	Service      string                  `json:"service"`
	SourceHash   *string                 `json:"sourceHash,omitempty"`
	Tags         *[]TagLabel             `json:"tags,omitempty"`
}

// CreateAPIEndpoint defines model for CreateAPIEndpoint.
type CreateAPIEndpoint struct {
	ApiCollection  string                          `json:"apiCollection"`
	DataProducts   *[]string                       `json:"dataProducts,omitempty"`
	Description    *string                         `json:"description,omitempty"`
	DisplayName    *string                         `json:"displayName,omitempty"`
	Domain         *string                         `json:"domain,omitempty"`
	EndpointURL    string                          `json:"endpointURL"`
	Extension      *map[string]interface{}         `json:"extension,omitempty"`
	LifeCycle      *LifeCycle                      `json:"lifeCycle,omitempty"`
	Name           string                          `json:"name"`
	Owners         *[]EntityReference              `json:"owners,omitempty"`
	RequestMethod  *CreateAPIEndpointRequestMethod `json:"requestMethod,omitempty"`
	RequestSchema  *APISchema                      `json:"requestSchema,omitempty"`
	ResponseSchema *APISchema                      `json:"responseSchema,omitempty"`
	Reviewers      *[]EntityReference              `json:"reviewers,omitempty"`
	SourceHash     *string                         `json:"sourceHash,omitempty"`
	SourceUrl      *string                         `json:"sourceUrl,omitempty"`
	Tags           *[]TagLabel                     `json:"tags,omitempty"`
}

// CreateAPIEndpointRequestMethod defines model for CreateAPIEndpoint.RequestMethod.
type CreateAPIEndpointRequestMethod string

// CreateApiService defines model for CreateApiService.
type CreateApiService struct {
	Connection      *ApiConnection              `json:"connection,omitempty"`
	DataProducts    *[]string                   `json:"dataProducts,omitempty"`
	Description     *string                     `json:"description,omitempty"`
	DisplayName     *string                     `json:"displayName,omitempty"`
	Domain          *string                     `json:"domain,omitempty"`
	Extension       *map[string]interface{}     `json:"extension,omitempty"`
	IngestionRunner *EntityReference            `json:"ingestionRunner,omitempty"`
	LifeCycle       *LifeCycle                  `json:"lifeCycle,omitempty"`
	Name            string                      `json:"name"`
	Owners          *[]EntityReference          `json:"owners,omitempty"`
	Reviewers       *[]EntityReference          `json:"reviewers,omitempty"`
	ServiceType     CreateApiServiceServiceType `json:"serviceType"`
	Tags            *[]TagLabel                 `json:"tags,omitempty"`
}

// CreateApiServiceServiceType defines model for CreateApiService.ServiceType.
type CreateApiServiceServiceType string

// CreateApp defines model for CreateApp.
type CreateApp struct {
	AppConfiguration  *map[string]interface{} `json:"appConfiguration,omitempty"`
	AppSchedule       *AppSchedule            `json:"appSchedule,omitempty"`
	Bot               *string                 `json:"bot,omitempty"`
	DataProducts      *[]string               `json:"dataProducts,omitempty"`
	Description       *string                 `json:"description,omitempty"`
	DisplayName       *string                 `json:"displayName,omitempty"`
	Domain            *string                 `json:"domain,omitempty"`
	Extension         *map[string]interface{} `json:"extension,omitempty"`
	LifeCycle         *LifeCycle              `json:"lifeCycle,omitempty"`
	Name              *string                 `json:"name,omitempty"`
	Owners            *[]EntityReference      `json:"owners,omitempty"`
	Reviewers         *[]EntityReference      `json:"reviewers,omitempty"`
	SupportsInterrupt *bool                   `json:"supportsInterrupt,omitempty"`
	Tags              *[]TagLabel             `json:"tags,omitempty"`
}

// CreateAppMarketPlaceDefinitionReq defines model for CreateAppMarketPlaceDefinitionReq.
type CreateAppMarketPlaceDefinitionReq struct {
	AgentType          *CreateAppMarketPlaceDefinitionReqAgentType   `json:"agentType,omitempty"`
	AllowConfiguration *bool                                         `json:"allowConfiguration,omitempty"`
	AppConfiguration   *map[string]interface{}                       `json:"appConfiguration,omitempty"`
	AppLogoUrl         *string                                       `json:"appLogoUrl,omitempty"`
	AppScreenshots     *[]string                                     `json:"appScreenshots,omitempty"`
	AppType            CreateAppMarketPlaceDefinitionReqAppType      `json:"appType"`
	ClassName          string                                        `json:"className"`
	DataProducts       *[]string                                     `json:"dataProducts,omitempty"`
	Description        *string                                       `json:"description,omitempty"`
	Developer          *string                                       `json:"developer,omitempty"`
	DeveloperUrl       *string                                       `json:"developerUrl,omitempty"`
	DisplayName        *string                                       `json:"displayName,omitempty"`
	Domain             *string                                       `json:"domain,omitempty"`
	EventSubscriptions *[]CreateEventSubscription                    `json:"eventSubscriptions,omitempty"`
	Extension          *map[string]interface{}                       `json:"extension,omitempty"`
	Features           *string                                       `json:"features,omitempty"`
	LifeCycle          *LifeCycle                                    `json:"lifeCycle,omitempty"`
	Name               string                                        `json:"name"`
	Owners             *[]EntityReference                            `json:"owners,omitempty"`
	Permission         CreateAppMarketPlaceDefinitionReqPermission   `json:"permission"`
	PrivacyPolicyUrl   *string                                       `json:"privacyPolicyUrl,omitempty"`
	Reviewers          *[]EntityReference                            `json:"reviewers,omitempty"`
	Runtime            *map[string]interface{}                       `json:"runtime,omitempty"`
	ScheduleType       CreateAppMarketPlaceDefinitionReqScheduleType `json:"scheduleType"`
	SourcePythonClass  *string                                       `json:"sourcePythonClass,omitempty"`
	SupportEmail       *string                                       `json:"supportEmail,omitempty"`
	SupportsInterrupt  *bool                                         `json:"supportsInterrupt,omitempty"`
	System             *bool                                         `json:"system,omitempty"`
	Tags               *[]TagLabel                                   `json:"tags,omitempty"`
}

// CreateAppMarketPlaceDefinitionReqAgentType defines model for CreateAppMarketPlaceDefinitionReq.AgentType.
type CreateAppMarketPlaceDefinitionReqAgentType string

// CreateAppMarketPlaceDefinitionReqAppType defines model for CreateAppMarketPlaceDefinitionReq.AppType.
type CreateAppMarketPlaceDefinitionReqAppType string

// CreateAppMarketPlaceDefinitionReqPermission defines model for CreateAppMarketPlaceDefinitionReq.Permission.
type CreateAppMarketPlaceDefinitionReqPermission string

// CreateAppMarketPlaceDefinitionReqScheduleType defines model for CreateAppMarketPlaceDefinitionReq.ScheduleType.
type CreateAppMarketPlaceDefinitionReqScheduleType string

// CreateBot defines model for CreateBot.
type CreateBot struct {
	BotUser      string                  `json:"botUser"`
	DataProducts *[]string               `json:"dataProducts,omitempty"`
	Description  *string                 `json:"description,omitempty"`
	DisplayName  *string                 `json:"displayName,omitempty"`
	Domain       *string                 `json:"domain,omitempty"`
	Extension    *map[string]interface{} `json:"extension,omitempty"`
	LifeCycle    *LifeCycle              `json:"lifeCycle,omitempty"`
	Name         string                  `json:"name"`
	Owners       *[]EntityReference      `json:"owners,omitempty"`
	Provider     *CreateBotProvider      `json:"provider,omitempty"`
	Reviewers    *[]EntityReference      `json:"reviewers,omitempty"`
	Tags         *[]TagLabel             `json:"tags,omitempty"`
}

// CreateBotProvider defines model for CreateBot.Provider.
type CreateBotProvider string

// CreateChart defines model for CreateChart.
type CreateChart struct {
	ChartType    *CreateChartChartType   `json:"chartType,omitempty"`
	Dashboards   *[]string               `json:"dashboards,omitempty"`
	DataProducts *[]string               `json:"dataProducts,omitempty"`
	Description  *string                 `json:"description,omitempty"`
	DisplayName  *string                 `json:"displayName,omitempty"`
	Domain       *string                 `json:"domain,omitempty"`
	Extension    *map[string]interface{} `json:"extension,omitempty"`
	LifeCycle    *LifeCycle              `json:"lifeCycle,omitempty"`
	Name         string                  `json:"name"`
	Owners       *[]EntityReference      `json:"owners,omitempty"`
	Reviewers    *[]EntityReference      `json:"reviewers,omitempty"`
	Service      string                  `json:"service"`
	SourceHash   *string                 `json:"sourceHash,omitempty"`
	SourceUrl    *string                 `json:"sourceUrl,omitempty"`
	Tags         *[]TagLabel             `json:"tags,omitempty"`
}

// CreateChartChartType defines model for CreateChart.ChartType.
type CreateChartChartType string

// CreateClassification defines model for CreateClassification.
type CreateClassification struct {
	DataProducts      *[]string                     `json:"dataProducts,omitempty"`
	Description       string                        `json:"description"`
	DisplayName       *string                       `json:"displayName,omitempty"`
	Domain            *string                       `json:"domain,omitempty"`
	Extension         *map[string]interface{}       `json:"extension,omitempty"`
	LifeCycle         *LifeCycle                    `json:"lifeCycle,omitempty"`
	MutuallyExclusive *bool                         `json:"mutuallyExclusive,omitempty"`
	Name              string                        `json:"name"`
	Owners            *[]EntityReference            `json:"owners,omitempty"`
	Provider          *CreateClassificationProvider `json:"provider,omitempty"`
	Reviewers         *[]EntityReference            `json:"reviewers,omitempty"`
	Tags              *[]TagLabel                   `json:"tags,omitempty"`
}

// CreateClassificationProvider defines model for CreateClassification.Provider.
type CreateClassificationProvider string

// CreateContainer defines model for CreateContainer.
type CreateContainer struct {
	DataModel       *ContainerDataModel           `json:"dataModel,omitempty"`
	DataProducts    *[]string                     `json:"dataProducts,omitempty"`
	Description     *string                       `json:"description,omitempty"`
	DisplayName     *string                       `json:"displayName,omitempty"`
	Domain          *string                       `json:"domain,omitempty"`
	Extension       *map[string]interface{}       `json:"extension,omitempty"`
	FileFormats     *[]CreateContainerFileFormats `json:"fileFormats,omitempty"`
	FullPath        *string                       `json:"fullPath,omitempty"`
	LifeCycle       *LifeCycle                    `json:"lifeCycle,omitempty"`
	Name            string                        `json:"name"`
	NumberOfObjects *float64                      `json:"numberOfObjects,omitempty"`
	Owners          *[]EntityReference            `json:"owners,omitempty"`
	Parent          *EntityReference              `json:"parent,omitempty"`
	Prefix          *string                       `json:"prefix,omitempty"`
	Reviewers       *[]EntityReference            `json:"reviewers,omitempty"`
	Service         string                        `json:"service"`
	Size            *float64                      `json:"size,omitempty"`
	SourceHash      *string                       `json:"sourceHash,omitempty"`
	SourceUrl       *string                       `json:"sourceUrl,omitempty"`
	Tags            *[]TagLabel                   `json:"tags,omitempty"`
}

// CreateContainerFileFormats defines model for CreateContainer.FileFormats.
type CreateContainerFileFormats string

// CreateCustomMetric defines model for CreateCustomMetric.
type CreateCustomMetric struct {
	ColumnName  *string            `json:"columnName,omitempty"`
	Description *string            `json:"description,omitempty"`
	Expression  string             `json:"expression"`
	Name        string             `json:"name"`
	Owners      *[]EntityReference `json:"owners,omitempty"`
	UpdatedAt   *int64             `json:"updatedAt,omitempty"`
	UpdatedBy   *string            `json:"updatedBy,omitempty"`
}

// CreateDashboard defines model for CreateDashboard.
type CreateDashboard struct {
	Charts        *[]string                     `json:"charts,omitempty"`
	DashboardType *CreateDashboardDashboardType `json:"dashboardType,omitempty"`
	DataModels    *[]string                     `json:"dataModels,omitempty"`
	DataProducts  *[]string                     `json:"dataProducts,omitempty"`
	Description   *string                       `json:"description,omitempty"`
	DisplayName   *string                       `json:"displayName,omitempty"`
	Domain        *string                       `json:"domain,omitempty"`
	Extension     *map[string]interface{}       `json:"extension,omitempty"`
	LifeCycle     *LifeCycle                    `json:"lifeCycle,omitempty"`
	Name          string                        `json:"name"`
	Owners        *[]EntityReference            `json:"owners,omitempty"`
	Project       *string                       `json:"project,omitempty"`
	Reviewers     *[]EntityReference            `json:"reviewers,omitempty"`
	Service       string                        `json:"service"`
	SourceHash    *string                       `json:"sourceHash,omitempty"`
	SourceUrl     *string                       `json:"sourceUrl,omitempty"`
	Tags          *[]TagLabel                   `json:"tags,omitempty"`
}

// CreateDashboardDashboardType defines model for CreateDashboard.DashboardType.
type CreateDashboardDashboardType string

// CreateDashboardDataModel defines model for CreateDashboardDataModel.
type CreateDashboardDataModel struct {
	Columns       []Column                              `json:"columns"`
	DataModelType CreateDashboardDataModelDataModelType `json:"dataModelType"`
	DataProducts  *[]string                             `json:"dataProducts,omitempty"`
	Description   *string                               `json:"description,omitempty"`
	DisplayName   *string                               `json:"displayName,omitempty"`
	Domain        *string                               `json:"domain,omitempty"`
	Extension     *map[string]interface{}               `json:"extension,omitempty"`
	LifeCycle     *LifeCycle                            `json:"lifeCycle,omitempty"`
	Name          string                                `json:"name"`
	Owners        *[]EntityReference                    `json:"owners,omitempty"`
	Project       *string                               `json:"project,omitempty"`
	Reviewers     *[]EntityReference                    `json:"reviewers,omitempty"`
	Service       string                                `json:"service"`
	ServiceType   *CreateDashboardDataModelServiceType  `json:"serviceType,omitempty"`
	SourceHash    *string                               `json:"sourceHash,omitempty"`
	Sql           *string                               `json:"sql,omitempty"`
	Tags          *[]TagLabel                           `json:"tags,omitempty"`
}

// CreateDashboardDataModelDataModelType defines model for CreateDashboardDataModel.DataModelType.
type CreateDashboardDataModelDataModelType string

// CreateDashboardDataModelServiceType defines model for CreateDashboardDataModel.ServiceType.
type CreateDashboardDataModelServiceType string

// CreateDashboardService defines model for CreateDashboardService.
type CreateDashboardService struct {
	Connection      *DashboardConnection              `json:"connection,omitempty"`
	DataProducts    *[]string                         `json:"dataProducts,omitempty"`
	Description     *string                           `json:"description,omitempty"`
	DisplayName     *string                           `json:"displayName,omitempty"`
	Domain          *string                           `json:"domain,omitempty"`
	Extension       *map[string]interface{}           `json:"extension,omitempty"`
	IngestionRunner *EntityReference                  `json:"ingestionRunner,omitempty"`
	LifeCycle       *LifeCycle                        `json:"lifeCycle,omitempty"`
	Name            string                            `json:"name"`
	Owners          *[]EntityReference                `json:"owners,omitempty"`
	Reviewers       *[]EntityReference                `json:"reviewers,omitempty"`
	ServiceType     CreateDashboardServiceServiceType `json:"serviceType"`
	Tags            *[]TagLabel                       `json:"tags,omitempty"`
}

// CreateDashboardServiceServiceType defines model for CreateDashboardService.ServiceType.
type CreateDashboardServiceServiceType string

// CreateDataProduct defines model for CreateDataProduct.
type CreateDataProduct struct {
	Assets             *[]EntityReference      `json:"assets,omitempty"`
	DataProducts       *[]string               `json:"dataProducts,omitempty"`
	Description        string                  `json:"description"`
	DisplayName        *string                 `json:"displayName,omitempty"`
	Domain             string                  `json:"domain"`
	Experts            *[]string               `json:"experts,omitempty"`
	Extension          *map[string]interface{} `json:"extension,omitempty"`
	FullyQualifiedName *string                 `json:"fullyQualifiedName,omitempty"`
	LifeCycle          *LifeCycle              `json:"lifeCycle,omitempty"`
	Name               string                  `json:"name"`
	Owners             *[]EntityReference      `json:"owners,omitempty"`
	Reviewers          *[]EntityReference      `json:"reviewers,omitempty"`
	Style              *Style                  `json:"style,omitempty"`
	Tags               *[]TagLabel             `json:"tags,omitempty"`
}

// CreateDatabase defines model for CreateDatabase.
type CreateDatabase struct {
	DataProducts    *[]string               `json:"dataProducts,omitempty"`
	Default         *bool                   `json:"default,omitempty"`
	Description     *string                 `json:"description,omitempty"`
	DisplayName     *string                 `json:"displayName,omitempty"`
	Domain          *string                 `json:"domain,omitempty"`
	Extension       *map[string]interface{} `json:"extension,omitempty"`
	LifeCycle       *LifeCycle              `json:"lifeCycle,omitempty"`
	Name            string                  `json:"name"`
	Owners          *[]EntityReference      `json:"owners,omitempty"`
	RetentionPeriod *string                 `json:"retentionPeriod,omitempty"`
	Reviewers       *[]EntityReference      `json:"reviewers,omitempty"`
	Service         string                  `json:"service"`
	SourceHash      *string                 `json:"sourceHash,omitempty"`
	SourceUrl       *string                 `json:"sourceUrl,omitempty"`
	Tags            *[]TagLabel             `json:"tags,omitempty"`
}

// CreateDatabaseSchema defines model for CreateDatabaseSchema.
type CreateDatabaseSchema struct {
	DataProducts    *[]string               `json:"dataProducts,omitempty"`
	Database        string                  `json:"database"`
	Description     *string                 `json:"description,omitempty"`
	DisplayName     *string                 `json:"displayName,omitempty"`
	Domain          *string                 `json:"domain,omitempty"`
	Extension       *map[string]interface{} `json:"extension,omitempty"`
	LifeCycle       *LifeCycle              `json:"lifeCycle,omitempty"`
	Name            string                  `json:"name"`
	Owners          *[]EntityReference      `json:"owners,omitempty"`
	RetentionPeriod *string                 `json:"retentionPeriod,omitempty"`
	Reviewers       *[]EntityReference      `json:"reviewers,omitempty"`
	SourceHash      *string                 `json:"sourceHash,omitempty"`
	SourceUrl       *string                 `json:"sourceUrl,omitempty"`
	Tags            *[]TagLabel             `json:"tags,omitempty"`
}

// CreateDatabaseService defines model for CreateDatabaseService.
type CreateDatabaseService struct {
	Connection      *DatabaseConnection              `json:"connection,omitempty"`
	DataProducts    *[]string                        `json:"dataProducts,omitempty"`
	Description     *string                          `json:"description,omitempty"`
	DisplayName     *string                          `json:"displayName,omitempty"`
	Domain          *string                          `json:"domain,omitempty"`
	Extension       *map[string]interface{}          `json:"extension,omitempty"`
	IngestionRunner *EntityReference                 `json:"ingestionRunner,omitempty"`
	LifeCycle       *LifeCycle                       `json:"lifeCycle,omitempty"`
	Name            string                           `json:"name"`
	Owners          *[]EntityReference               `json:"owners,omitempty"`
	Reviewers       *[]EntityReference               `json:"reviewers,omitempty"`
	ServiceType     CreateDatabaseServiceServiceType `json:"serviceType"`
	Tags            *[]TagLabel                      `json:"tags,omitempty"`
}

// CreateDatabaseServiceServiceType defines model for CreateDatabaseService.ServiceType.
type CreateDatabaseServiceServiceType string

// CreateDocument defines model for CreateDocument.
type CreateDocument struct {
	Data               Data                    `json:"data"`
	DataProducts       *[]string               `json:"dataProducts,omitempty"`
	Description        *string                 `json:"description,omitempty"`
	DisplayName        *string                 `json:"displayName,omitempty"`
	Domain             *string                 `json:"domain,omitempty"`
	EntityType         string                  `json:"entityType"`
	Extension          *map[string]interface{} `json:"extension,omitempty"`
	FullyQualifiedName string                  `json:"fullyQualifiedName"`
	LifeCycle          *LifeCycle              `json:"lifeCycle,omitempty"`
	Name               string                  `json:"name"`
	Owners             *[]EntityReference      `json:"owners,omitempty"`
	Reviewers          *[]EntityReference      `json:"reviewers,omitempty"`
	Tags               *[]TagLabel             `json:"tags,omitempty"`
}

// CreateDomain defines model for CreateDomain.
type CreateDomain struct {
	DataProducts       *[]string               `json:"dataProducts,omitempty"`
	Description        string                  `json:"description"`
	DisplayName        *string                 `json:"displayName,omitempty"`
	Domain             *string                 `json:"domain,omitempty"`
	DomainType         CreateDomainDomainType  `json:"domainType"`
	Experts            *[]string               `json:"experts,omitempty"`
	Extension          *map[string]interface{} `json:"extension,omitempty"`
	FullyQualifiedName *string                 `json:"fullyQualifiedName,omitempty"`
	LifeCycle          *LifeCycle              `json:"lifeCycle,omitempty"`
	Name               string                  `json:"name"`
	Owners             *[]EntityReference      `json:"owners,omitempty"`
	Parent             *string                 `json:"parent,omitempty"`
	Reviewers          *[]EntityReference      `json:"reviewers,omitempty"`
	Style              *Style                  `json:"style,omitempty"`
	Tags               *[]TagLabel             `json:"tags,omitempty"`
}

// CreateDomainDomainType defines model for CreateDomain.DomainType.
type CreateDomainDomainType string

// CreateEventSubscription defines model for CreateEventSubscription.
type CreateEventSubscription struct {
	AlertType    CreateEventSubscriptionAlertType   `json:"alertType"`
	BatchSize    *int32                             `json:"batchSize,omitempty"`
	ClassName    *string                            `json:"className,omitempty"`
	Config       *map[string]map[string]interface{} `json:"config,omitempty"`
	DataProducts *[]string                          `json:"dataProducts,omitempty"`
	Description  *string                            `json:"description,omitempty"`
	Destinations *[]SubscriptionDestination         `json:"destinations,omitempty"`
	DisplayName  *string                            `json:"displayName,omitempty"`
	Domain       *string                            `json:"domain,omitempty"`
	Enabled      *bool                              `json:"enabled,omitempty"`
	Extension    *map[string]interface{}            `json:"extension,omitempty"`
	Input        *AlertFilteringInput               `json:"input,omitempty"`
	LifeCycle    *LifeCycle                         `json:"lifeCycle,omitempty"`
	Name         string                             `json:"name"`
	Owners       *[]EntityReference                 `json:"owners,omitempty"`
	PollInterval *int32                             `json:"pollInterval,omitempty"`
	Provider     *CreateEventSubscriptionProvider   `json:"provider,omitempty"`
	Resources    *[]string                          `json:"resources,omitempty"`
	Retries      *int32                             `json:"retries,omitempty"`
	Reviewers    *[]EntityReference                 `json:"reviewers,omitempty"`
	Tags         *[]TagLabel                        `json:"tags,omitempty"`
	Trigger      *TriggerConfig                     `json:"trigger,omitempty"`
}

// CreateEventSubscriptionAlertType defines model for CreateEventSubscription.AlertType.
type CreateEventSubscriptionAlertType string

// CreateEventSubscriptionProvider defines model for CreateEventSubscription.Provider.
type CreateEventSubscriptionProvider string

// CreateGlossary defines model for CreateGlossary.
type CreateGlossary struct {
	DataProducts      *[]string               `json:"dataProducts,omitempty"`
	Description       string                  `json:"description"`
	DisplayName       *string                 `json:"displayName,omitempty"`
	Domain            *string                 `json:"domain,omitempty"`
	Extension         *map[string]interface{} `json:"extension,omitempty"`
	LifeCycle         *LifeCycle              `json:"lifeCycle,omitempty"`
	MutuallyExclusive *bool                   `json:"mutuallyExclusive,omitempty"`
	Name              string                  `json:"name"`
	Owners            *[]EntityReference      `json:"owners,omitempty"`
	Provider          *CreateGlossaryProvider `json:"provider,omitempty"`
	Reviewers         *[]EntityReference      `json:"reviewers,omitempty"`
	Tags              *[]TagLabel             `json:"tags,omitempty"`
}

// CreateGlossaryProvider defines model for CreateGlossary.Provider.
type CreateGlossaryProvider string

// CreateGlossaryTerm defines model for CreateGlossaryTerm.
type CreateGlossaryTerm struct {
	DataProducts      *[]string                   `json:"dataProducts,omitempty"`
	Description       string                      `json:"description"`
	DisplayName       *string                     `json:"displayName,omitempty"`
	Domain            *string                     `json:"domain,omitempty"`
	Extension         *map[string]interface{}     `json:"extension,omitempty"`
	Glossary          string                      `json:"glossary"`
	LifeCycle         *LifeCycle                  `json:"lifeCycle,omitempty"`
	MutuallyExclusive *bool                       `json:"mutuallyExclusive,omitempty"`
	Name              string                      `json:"name"`
	Owners            *[]EntityReference          `json:"owners,omitempty"`
	Parent            *string                     `json:"parent,omitempty"`
	Provider          *CreateGlossaryTermProvider `json:"provider,omitempty"`
	References        *[]TermReference            `json:"references,omitempty"`
	RelatedTerms      *[]string                   `json:"relatedTerms,omitempty"`
	Reviewers         *[]EntityReference          `json:"reviewers,omitempty"`
	Style             *Style                      `json:"style,omitempty"`
	Synonyms          *[]string                   `json:"synonyms,omitempty"`
	Tags              *[]TagLabel                 `json:"tags,omitempty"`
}

// CreateGlossaryTermProvider defines model for CreateGlossaryTerm.Provider.
type CreateGlossaryTermProvider string

// CreateIngestionPipeline defines model for CreateIngestionPipeline.
type CreateIngestionPipeline struct {
	AirflowConfig AirflowConfig                       `json:"airflowConfig"`
	DataProducts  *[]string                           `json:"dataProducts,omitempty"`
	Description   *string                             `json:"description,omitempty"`
	DisplayName   *string                             `json:"displayName,omitempty"`
	Domain        *string                             `json:"domain,omitempty"`
	Extension     *map[string]interface{}             `json:"extension,omitempty"`
	LifeCycle     *LifeCycle                          `json:"lifeCycle,omitempty"`
	LoggerLevel   *CreateIngestionPipelineLoggerLevel `json:"loggerLevel,omitempty"`
	Name          string                              `json:"name"`
	Owners        *[]EntityReference                  `json:"owners,omitempty"`
	PipelineType  CreateIngestionPipelinePipelineType `json:"pipelineType"`
	Reviewers     *[]EntityReference                  `json:"reviewers,omitempty"`
	Service       EntityReference                     `json:"service"`
	SourceConfig  SourceConfig                        `json:"sourceConfig"`
	Tags          *[]TagLabel                         `json:"tags,omitempty"`
}

// CreateIngestionPipelineLoggerLevel defines model for CreateIngestionPipeline.LoggerLevel.
type CreateIngestionPipelineLoggerLevel string

// CreateIngestionPipelinePipelineType defines model for CreateIngestionPipeline.PipelineType.
type CreateIngestionPipelinePipelineType string

// CreateLogicalTestCases defines model for CreateLogicalTestCases.
type CreateLogicalTestCases struct {
	TestCaseIds []openapi_types.UUID `json:"testCaseIds"`
	TestSuiteId openapi_types.UUID   `json:"testSuiteId"`
}

// CreateMessagingService defines model for CreateMessagingService.
type CreateMessagingService struct {
	Connection      *MessagingConnection              `json:"connection,omitempty"`
	DataProducts    *[]string                         `json:"dataProducts,omitempty"`
	Description     *string                           `json:"description,omitempty"`
	DisplayName     *string                           `json:"displayName,omitempty"`
	Domain          *string                           `json:"domain,omitempty"`
	Extension       *map[string]interface{}           `json:"extension,omitempty"`
	IngestionRunner *EntityReference                  `json:"ingestionRunner,omitempty"`
	LifeCycle       *LifeCycle                        `json:"lifeCycle,omitempty"`
	Name            string                            `json:"name"`
	Owners          *[]EntityReference                `json:"owners,omitempty"`
	Reviewers       *[]EntityReference                `json:"reviewers,omitempty"`
	ServiceType     CreateMessagingServiceServiceType `json:"serviceType"`
	Tags            *[]TagLabel                       `json:"tags,omitempty"`
}

// CreateMessagingServiceServiceType defines model for CreateMessagingService.ServiceType.
type CreateMessagingServiceServiceType string

// CreateMetadataService defines model for CreateMetadataService.
type CreateMetadataService struct {
	Connection      *MetadataConnection              `json:"connection,omitempty"`
	DataProducts    *[]string                        `json:"dataProducts,omitempty"`
	Description     *string                          `json:"description,omitempty"`
	DisplayName     *string                          `json:"displayName,omitempty"`
	Domain          *string                          `json:"domain,omitempty"`
	Extension       *map[string]interface{}          `json:"extension,omitempty"`
	IngestionRunner *EntityReference                 `json:"ingestionRunner,omitempty"`
	LifeCycle       *LifeCycle                       `json:"lifeCycle,omitempty"`
	Name            string                           `json:"name"`
	Owners          *[]EntityReference               `json:"owners,omitempty"`
	Reviewers       *[]EntityReference               `json:"reviewers,omitempty"`
	ServiceType     CreateMetadataServiceServiceType `json:"serviceType"`
	Tags            *[]TagLabel                      `json:"tags,omitempty"`
}

// CreateMetadataServiceServiceType defines model for CreateMetadataService.ServiceType.
type CreateMetadataServiceServiceType string

// CreateMetric defines model for CreateMetric.
type CreateMetric struct {
	DataProducts      *[]string                      `json:"dataProducts,omitempty"`
	Description       *string                        `json:"description,omitempty"`
	DisplayName       *string                        `json:"displayName,omitempty"`
	Domain            *string                        `json:"domain,omitempty"`
	Extension         *map[string]interface{}        `json:"extension,omitempty"`
	Granularity       *CreateMetricGranularity       `json:"granularity,omitempty"`
	LifeCycle         *LifeCycle                     `json:"lifeCycle,omitempty"`
	MetricExpression  *MetricExpression              `json:"metricExpression,omitempty"`
	MetricType        *CreateMetricMetricType        `json:"metricType,omitempty"`
	Name              string                         `json:"name"`
	Owners            *[]EntityReference             `json:"owners,omitempty"`
	RelatedMetrics    *[]string                      `json:"relatedMetrics,omitempty"`
	Reviewers         *[]EntityReference             `json:"reviewers,omitempty"`
	Tags              *[]TagLabel                    `json:"tags,omitempty"`
	UnitOfMeasurement *CreateMetricUnitOfMeasurement `json:"unitOfMeasurement,omitempty"`
}

// CreateMetricGranularity defines model for CreateMetric.Granularity.
type CreateMetricGranularity string

// CreateMetricMetricType defines model for CreateMetric.MetricType.
type CreateMetricMetricType string

// CreateMetricUnitOfMeasurement defines model for CreateMetric.UnitOfMeasurement.
type CreateMetricUnitOfMeasurement string

// CreateMlModel defines model for CreateMlModel.
type CreateMlModel struct {
	Algorithm         *string                 `json:"algorithm,omitempty"`
	Dashboard         *string                 `json:"dashboard,omitempty"`
	DataProducts      *[]string               `json:"dataProducts,omitempty"`
	Description       *string                 `json:"description,omitempty"`
	DisplayName       *string                 `json:"displayName,omitempty"`
	Domain            *string                 `json:"domain,omitempty"`
	Extension         *map[string]interface{} `json:"extension,omitempty"`
	LifeCycle         *LifeCycle              `json:"lifeCycle,omitempty"`
	MlFeatures        *[]MlFeature            `json:"mlFeatures,omitempty"`
	MlHyperParameters *[]MlHyperParameter     `json:"mlHyperParameters,omitempty"`
	MlStore           *MlStore                `json:"mlStore,omitempty"`
	Name              string                  `json:"name"`
	Owners            *[]EntityReference      `json:"owners,omitempty"`
	Reviewers         *[]EntityReference      `json:"reviewers,omitempty"`
	Server            *string                 `json:"server,omitempty"`
	Service           string                  `json:"service"`
	SourceHash        *string                 `json:"sourceHash,omitempty"`
	SourceUrl         *string                 `json:"sourceUrl,omitempty"`
	Tags              *[]TagLabel             `json:"tags,omitempty"`
	Target            *string                 `json:"target,omitempty"`
}

// CreateMlModelService defines model for CreateMlModelService.
type CreateMlModelService struct {
	Connection      *MlModelConnection              `json:"connection,omitempty"`
	DataProducts    *[]string                       `json:"dataProducts,omitempty"`
	Description     *string                         `json:"description,omitempty"`
	DisplayName     *string                         `json:"displayName,omitempty"`
	Domain          *string                         `json:"domain,omitempty"`
	Extension       *map[string]interface{}         `json:"extension,omitempty"`
	IngestionRunner *EntityReference                `json:"ingestionRunner,omitempty"`
	LifeCycle       *LifeCycle                      `json:"lifeCycle,omitempty"`
	Name            string                          `json:"name"`
	Owners          *[]EntityReference              `json:"owners,omitempty"`
	Reviewers       *[]EntityReference              `json:"reviewers,omitempty"`
	ServiceType     CreateMlModelServiceServiceType `json:"serviceType"`
	Tags            *[]TagLabel                     `json:"tags,omitempty"`
}

// CreateMlModelServiceServiceType defines model for CreateMlModelService.ServiceType.
type CreateMlModelServiceServiceType string

// CreatePersona defines model for CreatePersona.
type CreatePersona struct {
	DataProducts *[]string               `json:"dataProducts,omitempty"`
	Description  *string                 `json:"description,omitempty"`
	DisplayName  *string                 `json:"displayName,omitempty"`
	Domain       *string                 `json:"domain,omitempty"`
	Extension    *map[string]interface{} `json:"extension,omitempty"`
	LifeCycle    *LifeCycle              `json:"lifeCycle,omitempty"`
	Name         string                  `json:"name"`
	Owners       *[]EntityReference      `json:"owners,omitempty"`
	Reviewers    *[]EntityReference      `json:"reviewers,omitempty"`
	Tags         *[]TagLabel             `json:"tags,omitempty"`
	Users        *[]openapi_types.UUID   `json:"users,omitempty"`
}

// CreatePersonalToken defines model for CreatePersonalToken.
type CreatePersonalToken struct {
	JWTTokenExpiry CreatePersonalTokenJWTTokenExpiry `json:"JWTTokenExpiry"`
	TokenName      string                            `json:"tokenName"`
}

// CreatePersonalTokenJWTTokenExpiry defines model for CreatePersonalToken.JWTTokenExpiry.
type CreatePersonalTokenJWTTokenExpiry string

// CreatePipeline defines model for CreatePipeline.
type CreatePipeline struct {
	Concurrency      *int32                  `json:"concurrency,omitempty"`
	DataProducts     *[]string               `json:"dataProducts,omitempty"`
	Description      *string                 `json:"description,omitempty"`
	DisplayName      *string                 `json:"displayName,omitempty"`
	Domain           *string                 `json:"domain,omitempty"`
	Extension        *map[string]interface{} `json:"extension,omitempty"`
	LifeCycle        *LifeCycle              `json:"lifeCycle,omitempty"`
	Name             string                  `json:"name"`
	Owners           *[]EntityReference      `json:"owners,omitempty"`
	PipelineLocation *string                 `json:"pipelineLocation,omitempty"`
	Reviewers        *[]EntityReference      `json:"reviewers,omitempty"`
	ScheduleInterval *string                 `json:"scheduleInterval,omitempty"`
	Service          string                  `json:"service"`
	SourceHash       *string                 `json:"sourceHash,omitempty"`
	SourceUrl        *string                 `json:"sourceUrl,omitempty"`
	StartDate        *time.Time              `json:"startDate,omitempty"`
	State            *CreatePipelineState    `json:"state,omitempty"`
	Tags             *[]TagLabel             `json:"tags,omitempty"`
	Tasks            *[]Task                 `json:"tasks,omitempty"`
}

// CreatePipelineState defines model for CreatePipeline.State.
type CreatePipelineState string

// CreatePipelineService defines model for CreatePipelineService.
type CreatePipelineService struct {
	Connection       *PipelineConnection              `json:"connection,omitempty"`
	DataProducts     *[]string                        `json:"dataProducts,omitempty"`
	Description      *string                          `json:"description,omitempty"`
	DisplayName      *string                          `json:"displayName,omitempty"`
	Domain           *string                          `json:"domain,omitempty"`
	Extension        *map[string]interface{}          `json:"extension,omitempty"`
	IngestionRunner  *EntityReference                 `json:"ingestionRunner,omitempty"`
	LifeCycle        *LifeCycle                       `json:"lifeCycle,omitempty"`
	Name             string                           `json:"name"`
	Owners           *[]EntityReference               `json:"owners,omitempty"`
	Reviewers        *[]EntityReference               `json:"reviewers,omitempty"`
	ScheduleInterval *string                          `json:"scheduleInterval,omitempty"`
	ServiceType      CreatePipelineServiceServiceType `json:"serviceType"`
	Tags             *[]TagLabel                      `json:"tags,omitempty"`
}

// CreatePipelineServiceServiceType defines model for CreatePipelineService.ServiceType.
type CreatePipelineServiceServiceType string

// CreatePolicy defines model for CreatePolicy.
type CreatePolicy struct {
	DataProducts *[]string               `json:"dataProducts,omitempty"`
	Description  *string                 `json:"description,omitempty"`
	DisplayName  *string                 `json:"displayName,omitempty"`
	Domain       *string                 `json:"domain,omitempty"`
	Enabled      *bool                   `json:"enabled,omitempty"`
	Extension    *map[string]interface{} `json:"extension,omitempty"`
	LifeCycle    *LifeCycle              `json:"lifeCycle,omitempty"`
	Location     *openapi_types.UUID     `json:"location,omitempty"`
	Name         string                  `json:"name"`
	Owners       *[]EntityReference      `json:"owners,omitempty"`
	Reviewers    *[]EntityReference      `json:"reviewers,omitempty"`
	Rules        []Rule                  `json:"rules"`
	Tags         *[]TagLabel             `json:"tags,omitempty"`
}

// CreatePost defines model for CreatePost.
type CreatePost struct {
	From    string `json:"from"`
	Message string `json:"message"`
}

// CreateQuery defines model for CreateQuery.
type CreateQuery struct {
	DataProducts     *[]string               `json:"dataProducts,omitempty"`
	Description      *string                 `json:"description,omitempty"`
	Dialect          *string                 `json:"dialect,omitempty"`
	DisplayName      *string                 `json:"displayName,omitempty"`
	Domain           *string                 `json:"domain,omitempty"`
	Duration         *float64                `json:"duration,omitempty"`
	ExcludeUsage     *bool                   `json:"exclude_usage,omitempty"`
	Extension        *map[string]interface{} `json:"extension,omitempty"`
	LifeCycle        *LifeCycle              `json:"lifeCycle,omitempty"`
	Name             *string                 `json:"name,omitempty"`
	Owners           *[]EntityReference      `json:"owners,omitempty"`
	ProcessedLineage *bool                   `json:"processedLineage,omitempty"`
	Query            string                  `json:"query"`
	QueryDate        *int64                  `json:"queryDate,omitempty"`
	QueryUsedIn      *[]EntityReference      `json:"queryUsedIn,omitempty"`
	QueryType        *string                 `json:"query_type,omitempty"`
	Reviewers        *[]EntityReference      `json:"reviewers,omitempty"`
	Service          string                  `json:"service"`
	Tags             *[]TagLabel             `json:"tags,omitempty"`
	TriggeredBy      *EntityReference        `json:"triggeredBy,omitempty"`
	UsedBy           *[]string               `json:"usedBy,omitempty"`
	Users            *[]string               `json:"users,omitempty"`
}

// CreateQueryCostRecord defines model for CreateQueryCostRecord.
type CreateQueryCostRecord struct {
	Cost           float64         `json:"cost"`
	Count          float64         `json:"count"`
	JsonSchema     *string         `json:"jsonSchema,omitempty"`
	QueryReference EntityReference `json:"queryReference"`
	Timestamp      int64           `json:"timestamp"`
	TotalDuration  *float64        `json:"totalDuration,omitempty"`
}

// CreateRole defines model for CreateRole.
type CreateRole struct {
	DataProducts *[]string               `json:"dataProducts,omitempty"`
	Description  *string                 `json:"description,omitempty"`
	DisplayName  *string                 `json:"displayName,omitempty"`
	Domain       *string                 `json:"domain,omitempty"`
	Extension    *map[string]interface{} `json:"extension,omitempty"`
	LifeCycle    *LifeCycle              `json:"lifeCycle,omitempty"`
	Name         string                  `json:"name"`
	Owners       *[]EntityReference      `json:"owners,omitempty"`
	Policies     []string                `json:"policies"`
	Reviewers    *[]EntityReference      `json:"reviewers,omitempty"`
	Tags         *[]TagLabel             `json:"tags,omitempty"`
}

// CreateSearchIndex defines model for CreateSearchIndex.
type CreateSearchIndex struct {
	DataProducts        *[]string                   `json:"dataProducts,omitempty"`
	Description         *string                     `json:"description,omitempty"`
	DisplayName         *string                     `json:"displayName,omitempty"`
	Domain              *string                     `json:"domain,omitempty"`
	Extension           *map[string]interface{}     `json:"extension,omitempty"`
	Fields              []SearchIndexField          `json:"fields"`
	IndexType           *CreateSearchIndexIndexType `json:"indexType,omitempty"`
	LifeCycle           *LifeCycle                  `json:"lifeCycle,omitempty"`
	Name                string                      `json:"name"`
	Owners              *[]EntityReference          `json:"owners,omitempty"`
	Reviewers           *[]EntityReference          `json:"reviewers,omitempty"`
	SearchIndexSettings *SearchIndexSettings        `json:"searchIndexSettings,omitempty"`
	Service             string                      `json:"service"`
	SourceHash          *string                     `json:"sourceHash,omitempty"`
	Tags                *[]TagLabel                 `json:"tags,omitempty"`
}

// CreateSearchIndexIndexType defines model for CreateSearchIndex.IndexType.
type CreateSearchIndexIndexType string

// CreateSearchService defines model for CreateSearchService.
type CreateSearchService struct {
	Connection      *SearchConnection              `json:"connection,omitempty"`
	DataProducts    *[]string                      `json:"dataProducts,omitempty"`
	Description     *string                        `json:"description,omitempty"`
	DisplayName     *string                        `json:"displayName,omitempty"`
	Domain          *string                        `json:"domain,omitempty"`
	Extension       *map[string]interface{}        `json:"extension,omitempty"`
	IngestionRunner *EntityReference               `json:"ingestionRunner,omitempty"`
	LifeCycle       *LifeCycle                     `json:"lifeCycle,omitempty"`
	Name            string                         `json:"name"`
	Owners          *[]EntityReference             `json:"owners,omitempty"`
	Reviewers       *[]EntityReference             `json:"reviewers,omitempty"`
	ServiceType     CreateSearchServiceServiceType `json:"serviceType"`
	Tags            *[]TagLabel                    `json:"tags,omitempty"`
}

// CreateSearchServiceServiceType defines model for CreateSearchService.ServiceType.
type CreateSearchServiceServiceType string

// CreateStorageService defines model for CreateStorageService.
type CreateStorageService struct {
	Connection      *StorageConnection              `json:"connection,omitempty"`
	DataProducts    *[]string                       `json:"dataProducts,omitempty"`
	Description     *string                         `json:"description,omitempty"`
	DisplayName     *string                         `json:"displayName,omitempty"`
	Domain          *string                         `json:"domain,omitempty"`
	Extension       *map[string]interface{}         `json:"extension,omitempty"`
	IngestionRunner *EntityReference                `json:"ingestionRunner,omitempty"`
	LifeCycle       *LifeCycle                      `json:"lifeCycle,omitempty"`
	Name            string                          `json:"name"`
	Owners          *[]EntityReference              `json:"owners,omitempty"`
	Reviewers       *[]EntityReference              `json:"reviewers,omitempty"`
	ServiceType     CreateStorageServiceServiceType `json:"serviceType"`
	Tags            *[]TagLabel                     `json:"tags,omitempty"`
}

// CreateStorageServiceServiceType defines model for CreateStorageService.ServiceType.
type CreateStorageServiceServiceType string

// CreateStoredProcedure defines model for CreateStoredProcedure.
type CreateStoredProcedure struct {
	DataProducts        *[]string                                 `json:"dataProducts,omitempty"`
	DatabaseSchema      *string                                   `json:"databaseSchema,omitempty"`
	Description         *string                                   `json:"description,omitempty"`
	DisplayName         *string                                   `json:"displayName,omitempty"`
	Domain              *string                                   `json:"domain,omitempty"`
	Extension           *map[string]interface{}                   `json:"extension,omitempty"`
	LifeCycle           *LifeCycle                                `json:"lifeCycle,omitempty"`
	Name                string                                    `json:"name"`
	Owners              *[]EntityReference                        `json:"owners,omitempty"`
	Reviewers           *[]EntityReference                        `json:"reviewers,omitempty"`
	SourceHash          *string                                   `json:"sourceHash,omitempty"`
	SourceUrl           *string                                   `json:"sourceUrl,omitempty"`
	StoredProcedureCode StoredProcedureCode                       `json:"storedProcedureCode"`
	StoredProcedureType *CreateStoredProcedureStoredProcedureType `json:"storedProcedureType,omitempty"`
	Tags                *[]TagLabel                               `json:"tags,omitempty"`
}

// CreateStoredProcedureStoredProcedureType defines model for CreateStoredProcedure.StoredProcedureType.
type CreateStoredProcedureStoredProcedureType string

// CreateSuggestion defines model for CreateSuggestion.
type CreateSuggestion struct {
	Description *string               `json:"description,omitempty"`
	EntityLink  *string               `json:"entityLink,omitempty"`
	TagLabels   *[]TagLabel           `json:"tagLabels,omitempty"`
	Type        *CreateSuggestionType `json:"type,omitempty"`
}

// CreateSuggestionType defines model for CreateSuggestion.Type.
type CreateSuggestionType string

// CreateTable defines model for CreateTable.
type CreateTable struct {
	Columns             []Column                `json:"columns"`
	DataModel           *DataModel              `json:"dataModel,omitempty"`
	DataProducts        *[]string               `json:"dataProducts,omitempty"`
	DatabaseSchema      string                  `json:"databaseSchema"`
	Description         *string                 `json:"description,omitempty"`
	DisplayName         *string                 `json:"displayName,omitempty"`
	Domain              *string                 `json:"domain,omitempty"`
	Extension           *map[string]interface{} `json:"extension,omitempty"`
	FileFormat          *CreateTableFileFormat  `json:"fileFormat,omitempty"`
	LifeCycle           *LifeCycle              `json:"lifeCycle,omitempty"`
	LocationPath        *string                 `json:"locationPath,omitempty"`
	Name                string                  `json:"name"`
	Owners              *[]EntityReference      `json:"owners,omitempty"`
	RetentionPeriod     *string                 `json:"retentionPeriod,omitempty"`
	Reviewers           *[]EntityReference      `json:"reviewers,omitempty"`
	SchemaDefinition    *string                 `json:"schemaDefinition,omitempty"`
	SourceHash          *string                 `json:"sourceHash,omitempty"`
	SourceUrl           *string                 `json:"sourceUrl,omitempty"`
	TableConstraints    *[]TableConstraint      `json:"tableConstraints,omitempty"`
	TablePartition      *TablePartition         `json:"tablePartition,omitempty"`
	TableProfilerConfig *TableProfilerConfig    `json:"tableProfilerConfig,omitempty"`
	TableType           *CreateTableTableType   `json:"tableType,omitempty"`
	Tags                *[]TagLabel             `json:"tags,omitempty"`
}

// CreateTableFileFormat defines model for CreateTable.FileFormat.
type CreateTableFileFormat string

// CreateTableTableType defines model for CreateTable.TableType.
type CreateTableTableType string

// CreateTableProfile defines model for CreateTableProfile.
type CreateTableProfile struct {
	ColumnProfile *[]ColumnProfile `json:"columnProfile,omitempty"`
	SystemProfile *[]SystemProfile `json:"systemProfile,omitempty"`
	TableProfile  TableProfile     `json:"tableProfile"`
}

// CreateTag defines model for CreateTag.
type CreateTag struct {
	AssociatedTags    *[]string               `json:"associatedTags,omitempty"`
	Classification    *string                 `json:"classification,omitempty"`
	DataProducts      *[]string               `json:"dataProducts,omitempty"`
	Description       string                  `json:"description"`
	DisplayName       *string                 `json:"displayName,omitempty"`
	Domain            *string                 `json:"domain,omitempty"`
	Extension         *map[string]interface{} `json:"extension,omitempty"`
	LifeCycle         *LifeCycle              `json:"lifeCycle,omitempty"`
	MutuallyExclusive *bool                   `json:"mutuallyExclusive,omitempty"`
	Name              string                  `json:"name"`
	Owners            *[]EntityReference      `json:"owners,omitempty"`
	Parent            *string                 `json:"parent,omitempty"`
	Provider          *CreateTagProvider      `json:"provider,omitempty"`
	Reviewers         *[]EntityReference      `json:"reviewers,omitempty"`
	Style             *Style                  `json:"style,omitempty"`
	Tags              *[]TagLabel             `json:"tags,omitempty"`
}

// CreateTagProvider defines model for CreateTag.Provider.
type CreateTagProvider string

// CreateTaskDetails defines model for CreateTaskDetails.
type CreateTaskDetails struct {
	Assignees  []EntityReference     `json:"assignees"`
	OldValue   *string               `json:"oldValue,omitempty"`
	Suggestion *string               `json:"suggestion,omitempty"`
	Type       CreateTaskDetailsType `json:"type"`
}

// CreateTaskDetailsType defines model for CreateTaskDetails.Type.
type CreateTaskDetailsType string

// CreateTeam defines model for CreateTeam.
type CreateTeam struct {
	Children     *[]openapi_types.UUID   `json:"children,omitempty"`
	DataProducts *[]string               `json:"dataProducts,omitempty"`
	DefaultRoles *[]openapi_types.UUID   `json:"defaultRoles,omitempty"`
	Description  *string                 `json:"description,omitempty"`
	DisplayName  *string                 `json:"displayName,omitempty"`
	Domain       *string                 `json:"domain,omitempty"`
	Domains      *[]string               `json:"domains,omitempty"`
	Email        *string                 `json:"email,omitempty"`
	Extension    *map[string]interface{} `json:"extension,omitempty"`
	IsJoinable   *bool                   `json:"isJoinable,omitempty"`
	LifeCycle    *LifeCycle              `json:"lifeCycle,omitempty"`
	Name         string                  `json:"name"`
	Owners       *[]EntityReference      `json:"owners,omitempty"`
	Parents      *[]openapi_types.UUID   `json:"parents,omitempty"`
	Policies     *[]openapi_types.UUID   `json:"policies,omitempty"`
	Profile      *Profile                `json:"profile,omitempty"`
	Reviewers    *[]EntityReference      `json:"reviewers,omitempty"`
	Tags         *[]TagLabel             `json:"tags,omitempty"`
	TeamType     CreateTeamTeamType      `json:"teamType"`
	Users        *[]openapi_types.UUID   `json:"users,omitempty"`
}

// CreateTeamTeamType defines model for CreateTeam.TeamType.
type CreateTeamTeamType string

// CreateTestCase defines model for CreateTestCase.
type CreateTestCase struct {
	ComputePassedFailedRowCount *bool                     `json:"computePassedFailedRowCount,omitempty"`
	DataProducts                *[]string                 `json:"dataProducts,omitempty"`
	Description                 *string                   `json:"description,omitempty"`
	DisplayName                 *string                   `json:"displayName,omitempty"`
	Domain                      *string                   `json:"domain,omitempty"`
	EntityLink                  string                    `json:"entityLink"`
	Extension                   *map[string]interface{}   `json:"extension,omitempty"`
	LifeCycle                   *LifeCycle                `json:"lifeCycle,omitempty"`
	Name                        string                    `json:"name"`
	Owners                      *[]EntityReference        `json:"owners,omitempty"`
	ParameterValues             *[]TestCaseParameterValue `json:"parameterValues,omitempty"`
	Reviewers                   *[]EntityReference        `json:"reviewers,omitempty"`
	Tags                        *[]TagLabel               `json:"tags,omitempty"`
	TestDefinition              string                    `json:"testDefinition"`
	TestSuite                   string                    `json:"testSuite"`
	UseDynamicAssertion         *bool                     `json:"useDynamicAssertion,omitempty"`
}

// CreateTestCaseResolutionStatus defines model for CreateTestCaseResolutionStatus.
type CreateTestCaseResolutionStatus struct {
	Severity                        *CreateTestCaseResolutionStatusSeverity                    `json:"severity,omitempty"`
	TestCaseReference               string                                                     `json:"testCaseReference"`
	TestCaseResolutionStatusDetails *map[string]interface{}                                    `json:"testCaseResolutionStatusDetails,omitempty"`
	TestCaseResolutionStatusType    CreateTestCaseResolutionStatusTestCaseResolutionStatusType `json:"testCaseResolutionStatusType"`
}

// CreateTestCaseResolutionStatusSeverity defines model for CreateTestCaseResolutionStatus.Severity.
type CreateTestCaseResolutionStatusSeverity string

// CreateTestCaseResolutionStatusTestCaseResolutionStatusType defines model for CreateTestCaseResolutionStatus.TestCaseResolutionStatusType.
type CreateTestCaseResolutionStatusTestCaseResolutionStatusType string

// CreateTestCaseResult defines model for CreateTestCaseResult.
type CreateTestCaseResult struct {
	FailedRows           *int32                             `json:"failedRows,omitempty"`
	FailedRowsPercentage *float64                           `json:"failedRowsPercentage,omitempty"`
	Fqn                  *string                            `json:"fqn,omitempty"`
	IncidentId           *openapi_types.UUID                `json:"incidentId,omitempty"`
	MaxBound             *float64                           `json:"maxBound,omitempty"`
	MinBound             *float64                           `json:"minBound,omitempty"`
	PassedRows           *int32                             `json:"passedRows,omitempty"`
	PassedRowsPercentage *float64                           `json:"passedRowsPercentage,omitempty"`
	Result               *string                            `json:"result,omitempty"`
	SampleData           *string                            `json:"sampleData,omitempty"`
	TestCaseStatus       CreateTestCaseResultTestCaseStatus `json:"testCaseStatus"`
	TestResultValue      []TestResultValue                  `json:"testResultValue"`
	Timestamp            int64                              `json:"timestamp"`
}

// CreateTestCaseResultTestCaseStatus defines model for CreateTestCaseResult.TestCaseStatus.
type CreateTestCaseResultTestCaseStatus string

// CreateTestDefinition defines model for CreateTestDefinition.
type CreateTestDefinition struct {
	DataProducts        *[]string                                 `json:"dataProducts,omitempty"`
	Description         string                                    `json:"description"`
	DisplayName         *string                                   `json:"displayName,omitempty"`
	Domain              *string                                   `json:"domain,omitempty"`
	EntityType          CreateTestDefinitionEntityType            `json:"entityType"`
	Extension           *map[string]interface{}                   `json:"extension,omitempty"`
	LifeCycle           *LifeCycle                                `json:"lifeCycle,omitempty"`
	Name                string                                    `json:"name"`
	Owners              *[]EntityReference                        `json:"owners,omitempty"`
	ParameterDefinition *[]TestCaseParameter                      `json:"parameterDefinition,omitempty"`
	Provider            *CreateTestDefinitionProvider             `json:"provider,omitempty"`
	Reviewers           *[]EntityReference                        `json:"reviewers,omitempty"`
	SupportedDataTypes  *[]CreateTestDefinitionSupportedDataTypes `json:"supportedDataTypes,omitempty"`
	Tags                *[]TagLabel                               `json:"tags,omitempty"`
	TestPlatforms       []CreateTestDefinitionTestPlatforms       `json:"testPlatforms"`
}

// CreateTestDefinitionEntityType defines model for CreateTestDefinition.EntityType.
type CreateTestDefinitionEntityType string

// CreateTestDefinitionProvider defines model for CreateTestDefinition.Provider.
type CreateTestDefinitionProvider string

// CreateTestDefinitionSupportedDataTypes defines model for CreateTestDefinition.SupportedDataTypes.
type CreateTestDefinitionSupportedDataTypes string

// CreateTestDefinitionTestPlatforms defines model for CreateTestDefinition.TestPlatforms.
type CreateTestDefinitionTestPlatforms string

// CreateTestSuite defines model for CreateTestSuite.
type CreateTestSuite struct {
	BasicEntityReference      *string                 `json:"basicEntityReference,omitempty"`
	DataProducts              *[]string               `json:"dataProducts,omitempty"`
	Description               *string                 `json:"description,omitempty"`
	DisplayName               *string                 `json:"displayName,omitempty"`
	Domain                    *string                 `json:"domain,omitempty"`
	ExecutableEntityReference *string                 `json:"executableEntityReference,omitempty"`
	Extension                 *map[string]interface{} `json:"extension,omitempty"`
	LifeCycle                 *LifeCycle              `json:"lifeCycle,omitempty"`
	Name                      string                  `json:"name"`
	Owners                    *[]EntityReference      `json:"owners,omitempty"`
	Reviewers                 *[]EntityReference      `json:"reviewers,omitempty"`
	Tags                      *[]TagLabel             `json:"tags,omitempty"`
}

// CreateThread defines model for CreateThread.
type CreateThread struct {
	About               string               `json:"about"`
	AddressedTo         *string              `json:"addressedTo,omitempty"`
	AnnouncementDetails *AnnouncementDetails `json:"announcementDetails,omitempty"`
	ChatbotDetails      *ChatbotDetails      `json:"chatbotDetails,omitempty"`
	From                string               `json:"from"`
	Message             string               `json:"message"`
	TaskDetails         *CreateTaskDetails   `json:"taskDetails,omitempty"`
	Type                *CreateThreadType    `json:"type,omitempty"`
}

// CreateThreadType defines model for CreateThread.Type.
type CreateThreadType string

// CreateTopic defines model for CreateTopic.
type CreateTopic struct {
	CleanupPolicies       *[]CreateTopicCleanupPolicies `json:"cleanupPolicies,omitempty"`
	DataProducts          *[]string                     `json:"dataProducts,omitempty"`
	Description           *string                       `json:"description,omitempty"`
	DisplayName           *string                       `json:"displayName,omitempty"`
	Domain                *string                       `json:"domain,omitempty"`
	Extension             *map[string]interface{}       `json:"extension,omitempty"`
	LifeCycle             *LifeCycle                    `json:"lifeCycle,omitempty"`
	MaximumMessageSize    *int32                        `json:"maximumMessageSize,omitempty"`
	MessageSchema         *MessageSchema                `json:"messageSchema,omitempty"`
	MinimumInSyncReplicas *int32                        `json:"minimumInSyncReplicas,omitempty"`
	Name                  string                        `json:"name"`
	Owners                *[]EntityReference            `json:"owners,omitempty"`
	Partitions            int32                         `json:"partitions"`
	ReplicationFactor     *int32                        `json:"replicationFactor,omitempty"`
	RetentionSize         *float64                      `json:"retentionSize,omitempty"`
	RetentionTime         *float64                      `json:"retentionTime,omitempty"`
	Reviewers             *[]EntityReference            `json:"reviewers,omitempty"`
	Service               string                        `json:"service"`
	SourceHash            *string                       `json:"sourceHash,omitempty"`
	SourceUrl             *string                       `json:"sourceUrl,omitempty"`
	Tags                  *[]TagLabel                   `json:"tags,omitempty"`
	TopicConfig           *TopicConfig                  `json:"topicConfig,omitempty"`
}

// CreateTopicCleanupPolicies defines model for CreateTopic.CleanupPolicies.
type CreateTopicCleanupPolicies string

// CreateType defines model for CreateType.
type CreateType struct {
	Category     *CreateTypeCategory     `json:"category,omitempty"`
	DataProducts *[]string               `json:"dataProducts,omitempty"`
	Description  string                  `json:"description"`
	DisplayName  *string                 `json:"displayName,omitempty"`
	Domain       *string                 `json:"domain,omitempty"`
	Extension    *map[string]interface{} `json:"extension,omitempty"`
	LifeCycle    *LifeCycle              `json:"lifeCycle,omitempty"`
	Name         string                  `json:"name"`
	NameSpace    string                  `json:"nameSpace"`
	Owners       *[]EntityReference      `json:"owners,omitempty"`
	Reviewers    *[]EntityReference      `json:"reviewers,omitempty"`
	Schema       string                  `json:"schema"`
	Tags         *[]TagLabel             `json:"tags,omitempty"`
}

// CreateTypeCategory defines model for CreateType.Category.
type CreateTypeCategory string

// CreateUser defines model for CreateUser.
type CreateUser struct {
	AuthenticationMechanism *AuthenticationMechanism      `json:"authenticationMechanism,omitempty"`
	BotName                 *string                       `json:"botName,omitempty"`
	ConfirmPassword         *string                       `json:"confirmPassword,omitempty"`
	CreatePasswordType      *CreateUserCreatePasswordType `json:"createPasswordType,omitempty"`
	DataProducts            *[]string                     `json:"dataProducts,omitempty"`
	DefaultPersona          *EntityReference              `json:"defaultPersona,omitempty"`
	Description             *string                       `json:"description,omitempty"`
	DisplayName             *string                       `json:"displayName,omitempty"`
	Domain                  *string                       `json:"domain,omitempty"`
	Domains                 *[]string                     `json:"domains,omitempty"`
	Email                   string                        `json:"email"`
	Extension               *map[string]interface{}       `json:"extension,omitempty"`
	IsAdmin                 *bool                         `json:"isAdmin,omitempty"`
	IsBot                   *bool                         `json:"isBot,omitempty"`
	LifeCycle               *LifeCycle                    `json:"lifeCycle,omitempty"`
	Name                    string                        `json:"name"`
	Owners                  *[]EntityReference            `json:"owners,omitempty"`
	Password                *string                       `json:"password,omitempty"`
	Personas                *[]EntityReference            `json:"personas,omitempty"`
	Profile                 *Profile                      `json:"profile,omitempty"`
	Reviewers               *[]EntityReference            `json:"reviewers,omitempty"`
	Roles                   *[]openapi_types.UUID         `json:"roles,omitempty"`
	Tags                    *[]TagLabel                   `json:"tags,omitempty"`
	Teams                   *[]openapi_types.UUID         `json:"teams,omitempty"`
	Timezone                *string                       `json:"timezone,omitempty"`
}

// CreateUserCreatePasswordType defines model for CreateUser.CreatePasswordType.
type CreateUserCreatePasswordType string

// CreateWorkflowDefinition defines model for CreateWorkflowDefinition.
type CreateWorkflowDefinition struct {
	DataProducts *[]string                          `json:"dataProducts,omitempty"`
	Description  string                             `json:"description"`
	DisplayName  *string                            `json:"displayName,omitempty"`
	Domain       *string                            `json:"domain,omitempty"`
	Edges        *[]EdgeDefinition                  `json:"edges,omitempty"`
	Extension    *map[string]interface{}            `json:"extension,omitempty"`
	LifeCycle    *LifeCycle                         `json:"lifeCycle,omitempty"`
	Name         string                             `json:"name"`
	Nodes        *[]WorkflowNodeDefinitionInterface `json:"nodes,omitempty"`
	Owners       *[]EntityReference                 `json:"owners,omitempty"`
	Reviewers    *[]EntityReference                 `json:"reviewers,omitempty"`
	Tags         *[]TagLabel                        `json:"tags,omitempty"`
	Trigger      *WorkflowTriggerInterface          `json:"trigger,omitempty"`
	Type         *CreateWorkflowDefinitionType      `json:"type,omitempty"`
}

// CreateWorkflowDefinitionType defines model for CreateWorkflowDefinition.Type.
type CreateWorkflowDefinitionType string

// CsvImportResult defines model for CsvImportResult.
type CsvImportResult struct {
	AbortReason           *string                `json:"abortReason,omitempty"`
	DryRun                *bool                  `json:"dryRun,omitempty"`
	ImportResultsCsv      *string                `json:"importResultsCsv,omitempty"`
	NumberOfRowsFailed    *int32                 `json:"numberOfRowsFailed,omitempty"`
	NumberOfRowsPassed    *int32                 `json:"numberOfRowsPassed,omitempty"`
	NumberOfRowsProcessed *int32                 `json:"numberOfRowsProcessed,omitempty"`
	Status                *CsvImportResultStatus `json:"status,omitempty"`
}

// CsvImportResultStatus defines model for CsvImportResult.Status.
type CsvImportResultStatus string

// CustomMetric defines model for CustomMetric.
type CustomMetric struct {
	ColumnName  *string             `json:"columnName,omitempty"`
	Description *string             `json:"description,omitempty"`
	Expression  string              `json:"expression"`
	Id          *openapi_types.UUID `json:"id,omitempty"`
	Name        string              `json:"name"`
	Owners      *[]EntityReference  `json:"owners,omitempty"`
	UpdatedAt   *int64              `json:"updatedAt,omitempty"`
	UpdatedBy   *string             `json:"updatedBy,omitempty"`
}

// CustomMetricProfile defines model for CustomMetricProfile.
type CustomMetricProfile struct {
	Name  *string  `json:"name,omitempty"`
	Value *float64 `json:"value,omitempty"`
}

// CustomProperty defines model for CustomProperty.
type CustomProperty struct {
	CustomPropertyConfig *CustomPropertyConfig `json:"customPropertyConfig,omitempty"`
	Description          string                `json:"description"`
	DisplayName          *string               `json:"displayName,omitempty"`
	Name                 string                `json:"name"`
	PropertyType         EntityReference       `json:"propertyType"`
}

// CustomPropertyConfig defines model for CustomPropertyConfig.
type CustomPropertyConfig struct {
	Config *map[string]interface{} `json:"config,omitempty"`
}

// DailyCount defines model for DailyCount.
type DailyCount struct {
	Count int32  `json:"count"`
	Date  string `json:"date"`
}

// Dashboard defines model for Dashboard.
type Dashboard struct {
	Certification                *AssetCertification     `json:"certification,omitempty"`
	ChangeDescription            *ChangeDescription      `json:"changeDescription,omitempty"`
	Charts                       *[]EntityReference      `json:"charts,omitempty"`
	Children                     *[]EntityReference      `json:"children,omitempty"`
	DashboardType                *DashboardDashboardType `json:"dashboardType,omitempty"`
	DataModels                   *[]EntityReference      `json:"dataModels,omitempty"`
	DataProducts                 *[]EntityReference      `json:"dataProducts,omitempty"`
	Deleted                      *bool                   `json:"deleted,omitempty"`
	Description                  *string                 `json:"description,omitempty"`
	DisplayName                  *string                 `json:"displayName,omitempty"`
	Domain                       *EntityReference        `json:"domain,omitempty"`
	Experts                      *[]EntityReference      `json:"experts,omitempty"`
	Extension                    *map[string]interface{} `json:"extension,omitempty"`
	Followers                    *[]EntityReference      `json:"followers,omitempty"`
	FullyQualifiedName           *string                 `json:"fullyQualifiedName,omitempty"`
	Href                         *string                 `json:"href,omitempty"`
	Id                           openapi_types.UUID      `json:"id"`
	IncrementalChangeDescription *ChangeDescription      `json:"incrementalChangeDescription,omitempty"`
	LifeCycle                    *LifeCycle              `json:"lifeCycle,omitempty"`
	Name                         string                  `json:"name"`
	Owners                       *[]EntityReference      `json:"owners,omitempty"`
	Project                      *string                 `json:"project,omitempty"`
	Provider                     *DashboardProvider      `json:"provider,omitempty"`
	Reviewers                    *[]EntityReference      `json:"reviewers,omitempty"`
	Service                      EntityReference         `json:"service"`
	ServiceType                  *DashboardServiceType   `json:"serviceType,omitempty"`
	SourceHash                   *string                 `json:"sourceHash,omitempty"`
	SourceUrl                    *string                 `json:"sourceUrl,omitempty"`
	Style                        *Style                  `json:"style,omitempty"`
	Tags                         *[]TagLabel             `json:"tags,omitempty"`
	UpdatedAt                    *int64                  `json:"updatedAt,omitempty"`
	UpdatedBy                    *string                 `json:"updatedBy,omitempty"`
	UsageSummary                 *UsageDetails           `json:"usageSummary,omitempty"`
	Version                      *float64                `json:"version,omitempty"`
	Votes                        *Votes                  `json:"votes,omitempty"`
}

// DashboardDashboardType defines model for Dashboard.DashboardType.
type DashboardDashboardType string

// DashboardProvider defines model for Dashboard.Provider.
type DashboardProvider string

// DashboardServiceType defines model for Dashboard.ServiceType.
type DashboardServiceType string

// DashboardConnection defines model for DashboardConnection.
type DashboardConnection struct {
	Config *map[string]interface{} `json:"config,omitempty"`
}

// DashboardDataModel defines model for DashboardDataModel.
type DashboardDataModel struct {
	Certification                *AssetCertification             `json:"certification,omitempty"`
	ChangeDescription            *ChangeDescription              `json:"changeDescription,omitempty"`
	Children                     *[]EntityReference              `json:"children,omitempty"`
	Columns                      []Column                        `json:"columns"`
	DataModelType                DashboardDataModelDataModelType `json:"dataModelType"`
	DataProducts                 *[]EntityReference              `json:"dataProducts,omitempty"`
	Deleted                      *bool                           `json:"deleted,omitempty"`
	Description                  *string                         `json:"description,omitempty"`
	DisplayName                  *string                         `json:"displayName,omitempty"`
	Domain                       *EntityReference                `json:"domain,omitempty"`
	Experts                      *[]EntityReference              `json:"experts,omitempty"`
	Extension                    *map[string]interface{}         `json:"extension,omitempty"`
	Followers                    *[]EntityReference              `json:"followers,omitempty"`
	FullyQualifiedName           *string                         `json:"fullyQualifiedName,omitempty"`
	Href                         *string                         `json:"href,omitempty"`
	Id                           openapi_types.UUID              `json:"id"`
	IncrementalChangeDescription *ChangeDescription              `json:"incrementalChangeDescription,omitempty"`
	LifeCycle                    *LifeCycle                      `json:"lifeCycle,omitempty"`
	Name                         string                          `json:"name"`
	Owners                       *[]EntityReference              `json:"owners,omitempty"`
	Project                      *string                         `json:"project,omitempty"`
	Provider                     *DashboardDataModelProvider     `json:"provider,omitempty"`
	Reviewers                    *[]EntityReference              `json:"reviewers,omitempty"`
	Service                      *EntityReference                `json:"service,omitempty"`
	ServiceType                  *DashboardDataModelServiceType  `json:"serviceType,omitempty"`
	SourceHash                   *string                         `json:"sourceHash,omitempty"`
	Sql                          *string                         `json:"sql,omitempty"`
	Style                        *Style                          `json:"style,omitempty"`
	Tags                         *[]TagLabel                     `json:"tags,omitempty"`
	UpdatedAt                    *int64                          `json:"updatedAt,omitempty"`
	UpdatedBy                    *string                         `json:"updatedBy,omitempty"`
	UsageSummary                 *UsageDetails                   `json:"usageSummary,omitempty"`
	Version                      *float64                        `json:"version,omitempty"`
	Votes                        *Votes                          `json:"votes,omitempty"`
}

// DashboardDataModelDataModelType defines model for DashboardDataModel.DataModelType.
type DashboardDataModelDataModelType string

// DashboardDataModelProvider defines model for DashboardDataModel.Provider.
type DashboardDataModelProvider string

// DashboardDataModelServiceType defines model for DashboardDataModel.ServiceType.
type DashboardDataModelServiceType string

// DashboardDataModelList defines model for DashboardDataModelList.
type DashboardDataModelList struct {
	Data   []DashboardDataModel `json:"data"`
	Errors *[]EntityError       `json:"errors,omitempty"`
	Paging *Paging              `json:"paging,omitempty"`
}

// DashboardList defines model for DashboardList.
type DashboardList struct {
	Data   []Dashboard    `json:"data"`
	Errors *[]EntityError `json:"errors,omitempty"`
	Paging *Paging        `json:"paging,omitempty"`
}

// DashboardService defines model for DashboardService.
type DashboardService struct {
	Certification                *AssetCertification         `json:"certification,omitempty"`
	ChangeDescription            *ChangeDescription          `json:"changeDescription,omitempty"`
	Children                     *[]EntityReference          `json:"children,omitempty"`
	Connection                   *DashboardConnection        `json:"connection,omitempty"`
	DataProducts                 *[]EntityReference          `json:"dataProducts,omitempty"`
	Deleted                      *bool                       `json:"deleted,omitempty"`
	Description                  *string                     `json:"description,omitempty"`
	DisplayName                  *string                     `json:"displayName,omitempty"`
	Domain                       *EntityReference            `json:"domain,omitempty"`
	Experts                      *[]EntityReference          `json:"experts,omitempty"`
	Extension                    *map[string]interface{}     `json:"extension,omitempty"`
	Followers                    *[]EntityReference          `json:"followers,omitempty"`
	FullyQualifiedName           *string                     `json:"fullyQualifiedName,omitempty"`
	Href                         *string                     `json:"href,omitempty"`
	Id                           openapi_types.UUID          `json:"id"`
	IncrementalChangeDescription *ChangeDescription          `json:"incrementalChangeDescription,omitempty"`
	IngestionRunner              *EntityReference            `json:"ingestionRunner,omitempty"`
	LifeCycle                    *LifeCycle                  `json:"lifeCycle,omitempty"`
	Name                         string                      `json:"name"`
	Owners                       *[]EntityReference          `json:"owners,omitempty"`
	Pipelines                    *[]EntityReference          `json:"pipelines,omitempty"`
	Provider                     *DashboardServiceProvider   `json:"provider,omitempty"`
	Reviewers                    *[]EntityReference          `json:"reviewers,omitempty"`
	Service                      *EntityReference            `json:"service,omitempty"`
	ServiceType                  DashboardServiceServiceType `json:"serviceType"`
	Style                        *Style                      `json:"style,omitempty"`
	Tags                         *[]TagLabel                 `json:"tags,omitempty"`
	TestConnectionResult         *TestConnectionResult       `json:"testConnectionResult,omitempty"`
	UpdatedAt                    *int64                      `json:"updatedAt,omitempty"`
	UpdatedBy                    *string                     `json:"updatedBy,omitempty"`
	UsageSummary                 *UsageDetails               `json:"usageSummary,omitempty"`
	Version                      *float64                    `json:"version,omitempty"`
	Votes                        *Votes                      `json:"votes,omitempty"`
}

// DashboardServiceProvider defines model for DashboardService.Provider.
type DashboardServiceProvider string

// DashboardServiceServiceType defines model for DashboardService.ServiceType.
type DashboardServiceServiceType string

// DashboardServiceList defines model for DashboardServiceList.
type DashboardServiceList struct {
	Data   []DashboardService `json:"data"`
	Errors *[]EntityError     `json:"errors,omitempty"`
	Paging *Paging            `json:"paging,omitempty"`
}

// Data defines model for Data.
type Data = map[string]interface{}

// DataModel defines model for DataModel.
type DataModel struct {
	Columns      *[]Column          `json:"columns,omitempty"`
	Description  *string            `json:"description,omitempty"`
	GeneratedAt  *time.Time         `json:"generatedAt,omitempty"`
	ModelType    DataModelModelType `json:"modelType"`
	Owners       *[]EntityReference `json:"owners,omitempty"`
	Path         *string            `json:"path,omitempty"`
	RawSql       *string            `json:"rawSql,omitempty"`
	ResourceType *string            `json:"resourceType,omitempty"`
	Sql          *string            `json:"sql,omitempty"`
	Tags         *[]TagLabel        `json:"tags,omitempty"`
	Upstream     *[]string          `json:"upstream,omitempty"`
}

// DataModelModelType defines model for DataModel.ModelType.
type DataModelModelType string

// DataProduct defines model for DataProduct.
type DataProduct struct {
	Assets                       *[]EntityReference      `json:"assets,omitempty"`
	Certification                *AssetCertification     `json:"certification,omitempty"`
	ChangeDescription            *ChangeDescription      `json:"changeDescription,omitempty"`
	Children                     *[]EntityReference      `json:"children,omitempty"`
	DataProducts                 *[]EntityReference      `json:"dataProducts,omitempty"`
	Deleted                      *bool                   `json:"deleted,omitempty"`
	Description                  string                  `json:"description"`
	DisplayName                  *string                 `json:"displayName,omitempty"`
	Domain                       *EntityReference        `json:"domain,omitempty"`
	Experts                      *[]EntityReference      `json:"experts,omitempty"`
	Extension                    *map[string]interface{} `json:"extension,omitempty"`
	Followers                    *[]EntityReference      `json:"followers,omitempty"`
	FullyQualifiedName           *string                 `json:"fullyQualifiedName,omitempty"`
	Href                         *string                 `json:"href,omitempty"`
	Id                           openapi_types.UUID      `json:"id"`
	IncrementalChangeDescription *ChangeDescription      `json:"incrementalChangeDescription,omitempty"`
	LifeCycle                    *LifeCycle              `json:"lifeCycle,omitempty"`
	Name                         string                  `json:"name"`
	Owners                       *[]EntityReference      `json:"owners,omitempty"`
	Provider                     *DataProductProvider    `json:"provider,omitempty"`
	Reviewers                    *[]EntityReference      `json:"reviewers,omitempty"`
	Service                      *EntityReference        `json:"service,omitempty"`
	Style                        *Style                  `json:"style,omitempty"`
	Tags                         *[]TagLabel             `json:"tags,omitempty"`
	UpdatedAt                    *int64                  `json:"updatedAt,omitempty"`
	UpdatedBy                    *string                 `json:"updatedBy,omitempty"`
	UsageSummary                 *UsageDetails           `json:"usageSummary,omitempty"`
	Version                      *float64                `json:"version,omitempty"`
	Votes                        *Votes                  `json:"votes,omitempty"`
}

// DataProductProvider defines model for DataProduct.Provider.
type DataProductProvider string

// DataProductList defines model for DataProductList.
type DataProductList struct {
	Data   []DataProduct  `json:"data"`
	Errors *[]EntityError `json:"errors,omitempty"`
	Paging *Paging        `json:"paging,omitempty"`
}

// DataQualityReport defines model for DataQualityReport.
type DataQualityReport struct {
	Data     []Datum                   `json:"data"`
	Metadata DataQualityReportMetadata `json:"metadata"`
}

// DataQualityReportMetadata defines model for DataQualityReportMetadata.
type DataQualityReportMetadata struct {
	Dimensions *[]string `json:"dimensions,omitempty"`
	Keys       *[]string `json:"keys,omitempty"`
	Metrics    *[]string `json:"metrics,omitempty"`
}

// Database defines model for Database.
type Database struct {
	Certification                *AssetCertification     `json:"certification,omitempty"`
	ChangeDescription            *ChangeDescription      `json:"changeDescription,omitempty"`
	Children                     *[]EntityReference      `json:"children,omitempty"`
	DataProducts                 *[]EntityReference      `json:"dataProducts,omitempty"`
	DatabaseProfilerConfig       *DatabaseProfilerConfig `json:"databaseProfilerConfig,omitempty"`
	DatabaseSchemas              *[]EntityReference      `json:"databaseSchemas,omitempty"`
	Default                      *bool                   `json:"default,omitempty"`
	Deleted                      *bool                   `json:"deleted,omitempty"`
	Description                  *string                 `json:"description,omitempty"`
	DisplayName                  *string                 `json:"displayName,omitempty"`
	Domain                       *EntityReference        `json:"domain,omitempty"`
	Experts                      *[]EntityReference      `json:"experts,omitempty"`
	Extension                    *map[string]interface{} `json:"extension,omitempty"`
	Followers                    *[]EntityReference      `json:"followers,omitempty"`
	FullyQualifiedName           *string                 `json:"fullyQualifiedName,omitempty"`
	Href                         *string                 `json:"href,omitempty"`
	Id                           openapi_types.UUID      `json:"id"`
	IncrementalChangeDescription *ChangeDescription      `json:"incrementalChangeDescription,omitempty"`
	LifeCycle                    *LifeCycle              `json:"lifeCycle,omitempty"`
	Location                     *EntityReference        `json:"location,omitempty"`
	Name                         string                  `json:"name"`
	Owners                       *[]EntityReference      `json:"owners,omitempty"`
	Provider                     *DatabaseProvider       `json:"provider,omitempty"`
	RetentionPeriod              *string                 `json:"retentionPeriod,omitempty"`
	Reviewers                    *[]EntityReference      `json:"reviewers,omitempty"`
	Service                      EntityReference         `json:"service"`
	ServiceType                  *DatabaseServiceType    `json:"serviceType,omitempty"`
	SourceHash                   *string                 `json:"sourceHash,omitempty"`
	SourceUrl                    *string                 `json:"sourceUrl,omitempty"`
	Style                        *Style                  `json:"style,omitempty"`
	Tags                         *[]TagLabel             `json:"tags,omitempty"`
	UpdatedAt                    *int64                  `json:"updatedAt,omitempty"`
	UpdatedBy                    *string                 `json:"updatedBy,omitempty"`
	UsageSummary                 *UsageDetails           `json:"usageSummary,omitempty"`
	Version                      *float64                `json:"version,omitempty"`
	Votes                        *Votes                  `json:"votes,omitempty"`
}

// DatabaseProvider defines model for Database.Provider.
type DatabaseProvider string

// DatabaseServiceType defines model for Database.ServiceType.
type DatabaseServiceType string

// DatabaseConnection defines model for DatabaseConnection.
type DatabaseConnection struct {
	Config *map[string]interface{} `json:"config,omitempty"`
}

// DatabaseList defines model for DatabaseList.
type DatabaseList struct {
	Data   []Database     `json:"data"`
	Errors *[]EntityError `json:"errors,omitempty"`
	Paging *Paging        `json:"paging,omitempty"`
}

// DatabaseProfilerConfig defines model for DatabaseProfilerConfig.
type DatabaseProfilerConfig struct {
	ProfileSample           *float64                                  `json:"profileSample,omitempty"`
	ProfileSampleType       *DatabaseProfilerConfigProfileSampleType  `json:"profileSampleType,omitempty"`
	RandomizedSample        *bool                                     `json:"randomizedSample,omitempty"`
	SampleDataCount         *int32                                    `json:"sampleDataCount,omitempty"`
	SampleDataStorageConfig *SampleDataStorageConfig                  `json:"sampleDataStorageConfig,omitempty"`
	SamplingMethodType      *DatabaseProfilerConfigSamplingMethodType `json:"samplingMethodType,omitempty"`
}

// DatabaseProfilerConfigProfileSampleType defines model for DatabaseProfilerConfig.ProfileSampleType.
type DatabaseProfilerConfigProfileSampleType string

// DatabaseProfilerConfigSamplingMethodType defines model for DatabaseProfilerConfig.SamplingMethodType.
type DatabaseProfilerConfigSamplingMethodType string

// DatabaseSchema defines model for DatabaseSchema.
type DatabaseSchema struct {
	Certification                *AssetCertification           `json:"certification,omitempty"`
	ChangeDescription            *ChangeDescription            `json:"changeDescription,omitempty"`
	Children                     *[]EntityReference            `json:"children,omitempty"`
	DataProducts                 *[]EntityReference            `json:"dataProducts,omitempty"`
	Database                     EntityReference               `json:"database"`
	DatabaseSchemaProfilerConfig *DatabaseSchemaProfilerConfig `json:"databaseSchemaProfilerConfig,omitempty"`
	Deleted                      *bool                         `json:"deleted,omitempty"`
	Description                  *string                       `json:"description,omitempty"`
	DisplayName                  *string                       `json:"displayName,omitempty"`
	Domain                       *EntityReference              `json:"domain,omitempty"`
	Experts                      *[]EntityReference            `json:"experts,omitempty"`
	Extension                    *map[string]interface{}       `json:"extension,omitempty"`
	Followers                    *[]EntityReference            `json:"followers,omitempty"`
	FullyQualifiedName           *string                       `json:"fullyQualifiedName,omitempty"`
	Href                         *string                       `json:"href,omitempty"`
	Id                           openapi_types.UUID            `json:"id"`
	IncrementalChangeDescription *ChangeDescription            `json:"incrementalChangeDescription,omitempty"`
	LifeCycle                    *LifeCycle                    `json:"lifeCycle,omitempty"`
	Name                         string                        `json:"name"`
	Owners                       *[]EntityReference            `json:"owners,omitempty"`
	Provider                     *DatabaseSchemaProvider       `json:"provider,omitempty"`
	RetentionPeriod              *string                       `json:"retentionPeriod,omitempty"`
	Reviewers                    *[]EntityReference            `json:"reviewers,omitempty"`
	Service                      EntityReference               `json:"service"`
	ServiceType                  *DatabaseSchemaServiceType    `json:"serviceType,omitempty"`
	SourceHash                   *string                       `json:"sourceHash,omitempty"`
	SourceUrl                    *string                       `json:"sourceUrl,omitempty"`
	Style                        *Style                        `json:"style,omitempty"`
	Tables                       *[]EntityReference            `json:"tables,omitempty"`
	Tags                         *[]TagLabel                   `json:"tags,omitempty"`
	UpdatedAt                    *int64                        `json:"updatedAt,omitempty"`
	UpdatedBy                    *string                       `json:"updatedBy,omitempty"`
	UsageSummary                 *UsageDetails                 `json:"usageSummary,omitempty"`
	Version                      *float64                      `json:"version,omitempty"`
	Votes                        *Votes                        `json:"votes,omitempty"`
}

// DatabaseSchemaProvider defines model for DatabaseSchema.Provider.
type DatabaseSchemaProvider string

// DatabaseSchemaServiceType defines model for DatabaseSchema.ServiceType.
type DatabaseSchemaServiceType string

// DatabaseSchemaList defines model for DatabaseSchemaList.
type DatabaseSchemaList struct {
	Data   []DatabaseSchema `json:"data"`
	Errors *[]EntityError   `json:"errors,omitempty"`
	Paging *Paging          `json:"paging,omitempty"`
}

// DatabaseSchemaProfilerConfig defines model for DatabaseSchemaProfilerConfig.
type DatabaseSchemaProfilerConfig struct {
	ProfileSample           *float64                                        `json:"profileSample,omitempty"`
	ProfileSampleType       *DatabaseSchemaProfilerConfigProfileSampleType  `json:"profileSampleType,omitempty"`
	RandomizedSample        *bool                                           `json:"randomizedSample,omitempty"`
	SampleDataCount         *int32                                          `json:"sampleDataCount,omitempty"`
	SampleDataStorageConfig *SampleDataStorageConfig                        `json:"sampleDataStorageConfig,omitempty"`
	SamplingMethodType      *DatabaseSchemaProfilerConfigSamplingMethodType `json:"samplingMethodType,omitempty"`
}

// DatabaseSchemaProfilerConfigProfileSampleType defines model for DatabaseSchemaProfilerConfig.ProfileSampleType.
type DatabaseSchemaProfilerConfigProfileSampleType string

// DatabaseSchemaProfilerConfigSamplingMethodType defines model for DatabaseSchemaProfilerConfig.SamplingMethodType.
type DatabaseSchemaProfilerConfigSamplingMethodType string

// DatabaseService defines model for DatabaseService.
type DatabaseService struct {
	Certification                *AssetCertification        `json:"certification,omitempty"`
	ChangeDescription            *ChangeDescription         `json:"changeDescription,omitempty"`
	Children                     *[]EntityReference         `json:"children,omitempty"`
	Connection                   *DatabaseConnection        `json:"connection,omitempty"`
	DataProducts                 *[]EntityReference         `json:"dataProducts,omitempty"`
	Deleted                      *bool                      `json:"deleted,omitempty"`
	Description                  *string                    `json:"description,omitempty"`
	DisplayName                  *string                    `json:"displayName,omitempty"`
	Domain                       *EntityReference           `json:"domain,omitempty"`
	Experts                      *[]EntityReference         `json:"experts,omitempty"`
	Extension                    *map[string]interface{}    `json:"extension,omitempty"`
	Followers                    *[]EntityReference         `json:"followers,omitempty"`
	FullyQualifiedName           *string                    `json:"fullyQualifiedName,omitempty"`
	Href                         *string                    `json:"href,omitempty"`
	Id                           openapi_types.UUID         `json:"id"`
	IncrementalChangeDescription *ChangeDescription         `json:"incrementalChangeDescription,omitempty"`
	IngestionRunner              *EntityReference           `json:"ingestionRunner,omitempty"`
	LifeCycle                    *LifeCycle                 `json:"lifeCycle,omitempty"`
	Name                         string                     `json:"name"`
	Owners                       *[]EntityReference         `json:"owners,omitempty"`
	Pipelines                    *[]EntityReference         `json:"pipelines,omitempty"`
	Provider                     *DatabaseServiceProvider   `json:"provider,omitempty"`
	Reviewers                    *[]EntityReference         `json:"reviewers,omitempty"`
	Service                      *EntityReference           `json:"service,omitempty"`
	ServiceType                  DatabaseServiceServiceType `json:"serviceType"`
	Style                        *Style                     `json:"style,omitempty"`
	Tags                         *[]TagLabel                `json:"tags,omitempty"`
	TestConnectionResult         *TestConnectionResult      `json:"testConnectionResult,omitempty"`
	UpdatedAt                    *int64                     `json:"updatedAt,omitempty"`
	UpdatedBy                    *string                    `json:"updatedBy,omitempty"`
	UsageSummary                 *UsageDetails              `json:"usageSummary,omitempty"`
	Version                      *float64                   `json:"version,omitempty"`
	Votes                        *Votes                     `json:"votes,omitempty"`
}

// DatabaseServiceProvider defines model for DatabaseService.Provider.
type DatabaseServiceProvider string

// DatabaseServiceServiceType defines model for DatabaseService.ServiceType.
type DatabaseServiceServiceType string

// DatabaseServiceList defines model for DatabaseServiceList.
type DatabaseServiceList struct {
	Data   []DatabaseService `json:"data"`
	Errors *[]EntityError    `json:"errors,omitempty"`
	Paging *Paging           `json:"paging,omitempty"`
}

// Datum defines model for Datum.
type Datum = map[string]interface{}

// Document defines model for Document.
type Document struct {
	Certification                *AssetCertification     `json:"certification,omitempty"`
	ChangeDescription            *ChangeDescription      `json:"changeDescription,omitempty"`
	Children                     *[]EntityReference      `json:"children,omitempty"`
	Data                         Data                    `json:"data"`
	DataProducts                 *[]EntityReference      `json:"dataProducts,omitempty"`
	Deleted                      *bool                   `json:"deleted,omitempty"`
	Description                  *string                 `json:"description,omitempty"`
	DisplayName                  *string                 `json:"displayName,omitempty"`
	Domain                       *EntityReference        `json:"domain,omitempty"`
	EntityType                   string                  `json:"entityType"`
	Experts                      *[]EntityReference      `json:"experts,omitempty"`
	Extension                    *map[string]interface{} `json:"extension,omitempty"`
	Followers                    *[]EntityReference      `json:"followers,omitempty"`
	FullyQualifiedName           string                  `json:"fullyQualifiedName"`
	Href                         *string                 `json:"href,omitempty"`
	Id                           *openapi_types.UUID     `json:"id,omitempty"`
	IncrementalChangeDescription *ChangeDescription      `json:"incrementalChangeDescription,omitempty"`
	LifeCycle                    *LifeCycle              `json:"lifeCycle,omitempty"`
	Name                         string                  `json:"name"`
	Owners                       *[]EntityReference      `json:"owners,omitempty"`
	Provider                     *DocumentProvider       `json:"provider,omitempty"`
	Reviewers                    *[]EntityReference      `json:"reviewers,omitempty"`
	Service                      *EntityReference        `json:"service,omitempty"`
	Style                        *Style                  `json:"style,omitempty"`
	Tags                         *[]TagLabel             `json:"tags,omitempty"`
	UpdatedAt                    *int64                  `json:"updatedAt,omitempty"`
	UpdatedBy                    *string                 `json:"updatedBy,omitempty"`
	UsageSummary                 *UsageDetails           `json:"usageSummary,omitempty"`
	Version                      *float64                `json:"version,omitempty"`
	Votes                        *Votes                  `json:"votes,omitempty"`
}

// DocumentProvider defines model for Document.Provider.
type DocumentProvider string

// DocumentField defines model for DocumentField.
type DocumentField struct {
	IgnoredValues       *[]map[string]interface{} `json:"ignoredValues,omitempty"`
	IgnoredValuesWriter *ToXContentFragment       `json:"ignoredValuesWriter,omitempty"`
	Name                *string                   `json:"name,omitempty"`
	ValidValuesWriter   *ToXContentFragment       `json:"validValuesWriter,omitempty"`
	Value               *map[string]interface{}   `json:"value,omitempty"`
	Values              *[]map[string]interface{} `json:"values,omitempty"`
}

// DocumentList defines model for DocumentList.
type DocumentList struct {
	Data   []Document     `json:"data"`
	Errors *[]EntityError `json:"errors,omitempty"`
	Paging *Paging        `json:"paging,omitempty"`
}

// Domain defines model for Domain.
type Domain struct {
	Assets                       *[]EntityReference      `json:"assets,omitempty"`
	Certification                *AssetCertification     `json:"certification,omitempty"`
	ChangeDescription            *ChangeDescription      `json:"changeDescription,omitempty"`
	Children                     *[]EntityReference      `json:"children,omitempty"`
	DataProducts                 *[]EntityReference      `json:"dataProducts,omitempty"`
	Deleted                      *bool                   `json:"deleted,omitempty"`
	Description                  string                  `json:"description"`
	DisplayName                  *string                 `json:"displayName,omitempty"`
	Domain                       *EntityReference        `json:"domain,omitempty"`
	DomainType                   DomainDomainType        `json:"domainType"`
	Experts                      *[]EntityReference      `json:"experts,omitempty"`
	Extension                    *map[string]interface{} `json:"extension,omitempty"`
	Followers                    *[]EntityReference      `json:"followers,omitempty"`
	FullyQualifiedName           *string                 `json:"fullyQualifiedName,omitempty"`
	Href                         *string                 `json:"href,omitempty"`
	Id                           openapi_types.UUID      `json:"id"`
	IncrementalChangeDescription *ChangeDescription      `json:"incrementalChangeDescription,omitempty"`
	LifeCycle                    *LifeCycle              `json:"lifeCycle,omitempty"`
	Name                         string                  `json:"name"`
	Owners                       *[]EntityReference      `json:"owners,omitempty"`
	Parent                       *EntityReference        `json:"parent,omitempty"`
	Provider                     *DomainProvider         `json:"provider,omitempty"`
	Reviewers                    *[]EntityReference      `json:"reviewers,omitempty"`
	Service                      *EntityReference        `json:"service,omitempty"`
	Style                        *Style                  `json:"style,omitempty"`
	Tags                         *[]TagLabel             `json:"tags,omitempty"`
	UpdatedAt                    *int64                  `json:"updatedAt,omitempty"`
	UpdatedBy                    *string                 `json:"updatedBy,omitempty"`
	UsageSummary                 *UsageDetails           `json:"usageSummary,omitempty"`
	Version                      *float64                `json:"version,omitempty"`
	Votes                        *Votes                  `json:"votes,omitempty"`
}

// DomainDomainType defines model for Domain.DomainType.
type DomainDomainType string

// DomainProvider defines model for Domain.Provider.
type DomainProvider string

// DomainList defines model for DomainList.
type DomainList struct {
	Data   []Domain       `json:"data"`
	Errors *[]EntityError `json:"errors,omitempty"`
	Paging *Paging        `json:"paging,omitempty"`
}

// Edge defines model for Edge.
type Edge struct {
	Description    *string            `json:"description,omitempty"`
	FromEntity     openapi_types.UUID `json:"fromEntity"`
	LineageDetails *LineageDetails    `json:"lineageDetails,omitempty"`
	ToEntity       openapi_types.UUID `json:"toEntity"`
}

// EdgeDefinition defines model for EdgeDefinition.
type EdgeDefinition struct {
	Condition *string `json:"condition,omitempty"`
	From      string  `json:"from"`
	To        string  `json:"to"`
}

// ElasticsSearch defines model for ElasticsSearch.
type ElasticsSearch struct {
	Config *ComponentConfig `json:"config,omitempty"`
	Type   string           `json:"type"`
}

// EmailRequest defines model for EmailRequest.
type EmailRequest struct {
	Email string `json:"email"`
}

// EmailTemplate defines model for EmailTemplate.
type EmailTemplate struct {
	PlaceHolders []EmailTemplatePlaceholder `json:"placeHolders"`
	Template     string                     `json:"template"`
}

// EmailTemplatePlaceholder defines model for EmailTemplatePlaceholder.
type EmailTemplatePlaceholder struct {
	Description string `json:"description"`
	Name        string `json:"name"`
}

// EntitiesEdge defines model for EntitiesEdge.
type EntitiesEdge struct {
	Description    *string         `json:"description,omitempty"`
	FromEntity     EntityReference `json:"fromEntity"`
	LineageDetails *LineageDetails `json:"lineageDetails,omitempty"`
	ToEntity       EntityReference `json:"toEntity"`
}

// EntityError defines model for EntityError.
type EntityError struct {
	Entity  *map[string]interface{} `json:"entity,omitempty"`
	Message *string                 `json:"message,omitempty"`
}

// EntityHierarchy defines model for EntityHierarchy.
type EntityHierarchy struct {
	Children           *[]EntityHierarchy `json:"children,omitempty"`
	Description        string             `json:"description"`
	DisplayName        *string            `json:"displayName,omitempty"`
	FullyQualifiedName *string            `json:"fullyQualifiedName,omitempty"`
	Id                 openapi_types.UUID `json:"id"`
	Name               string             `json:"name"`
}

// EntityHierarchyList defines model for EntityHierarchyList.
type EntityHierarchyList struct {
	Data   []EntityHierarchy `json:"data"`
	Errors *[]EntityError    `json:"errors,omitempty"`
	Paging *Paging           `json:"paging,omitempty"`
}

// EntityHistory defines model for EntityHistory.
type EntityHistory struct {
	EntityType string                   `json:"entityType"`
	Versions   []map[string]interface{} `json:"versions"`
}

// EntityLineage defines model for EntityLineage.
type EntityLineage struct {
	DownstreamEdges *[]Edge            `json:"downstreamEdges,omitempty"`
	Entity          EntityReference    `json:"entity"`
	Nodes           *[]EntityReference `json:"nodes,omitempty"`
	UpstreamEdges   *[]Edge            `json:"upstreamEdges,omitempty"`
}

// EntityReference defines model for EntityReference.
type EntityReference struct {
	Deleted            *bool              `json:"deleted,omitempty"`
	Description        *string            `json:"description,omitempty"`
	DisplayName        *string            `json:"displayName,omitempty"`
	FullyQualifiedName *string            `json:"fullyQualifiedName,omitempty"`
	Href               *string            `json:"href,omitempty"`
	Id                 openapi_types.UUID `json:"id"`
	Inherited          *bool              `json:"inherited,omitempty"`
	Name               *string            `json:"name,omitempty"`
	Type               string             `json:"type"`
}

// EntitySpecificInstruction defines model for EntitySpecificInstruction.
type EntitySpecificInstruction struct {
	EntityType string          `json:"entityType"`
	Sections   []PromptSection `json:"sections"`
}

// EntityStats defines model for EntityStats.
type EntityStats = map[string]interface{}

// EntityUsage defines model for EntityUsage.
type EntityUsage struct {
	Entity EntityReference `json:"entity"`
	Usage  []UsageDetails  `json:"usage"`
}

// EventFilterRule defines model for EventFilterRule.
type EventFilterRule struct {
	Arguments          *[]string                       `json:"arguments,omitempty"`
	Condition          string                          `json:"condition"`
	Description        *string                         `json:"description,omitempty"`
	DisplayName        *string                         `json:"displayName,omitempty"`
	Effect             EventFilterRuleEffect           `json:"effect"`
	FullyQualifiedName *string                         `json:"fullyQualifiedName,omitempty"`
	InputType          *EventFilterRuleInputType       `json:"inputType,omitempty"`
	Name               *string                         `json:"name,omitempty"`
	PrefixCondition    *EventFilterRulePrefixCondition `json:"prefixCondition,omitempty"`
}

// EventFilterRuleEffect defines model for EventFilterRule.Effect.
type EventFilterRuleEffect string

// EventFilterRuleInputType defines model for EventFilterRule.InputType.
type EventFilterRuleInputType string

// EventFilterRulePrefixCondition defines model for EventFilterRule.PrefixCondition.
type EventFilterRulePrefixCondition string

// EventList defines model for EventList.
type EventList struct {
	Data   []ChangeEvent  `json:"data"`
	Errors *[]EntityError `json:"errors,omitempty"`
	Paging *Paging        `json:"paging,omitempty"`
}

// EventSubscription defines model for EventSubscription.
type EventSubscription struct {
	AlertType                    EventSubscriptionAlertType         `json:"alertType"`
	BatchSize                    *int32                             `json:"batchSize,omitempty"`
	Certification                *AssetCertification                `json:"certification,omitempty"`
	ChangeDescription            *ChangeDescription                 `json:"changeDescription,omitempty"`
	Children                     *[]EntityReference                 `json:"children,omitempty"`
	ClassName                    *string                            `json:"className,omitempty"`
	Config                       *map[string]map[string]interface{} `json:"config,omitempty"`
	DataProducts                 *[]EntityReference                 `json:"dataProducts,omitempty"`
	Deleted                      *bool                              `json:"deleted,omitempty"`
	Description                  *string                            `json:"description,omitempty"`
	Destinations                 []SubscriptionDestination          `json:"destinations"`
	DisplayName                  *string                            `json:"displayName,omitempty"`
	Domain                       *EntityReference                   `json:"domain,omitempty"`
	Enabled                      *bool                              `json:"enabled,omitempty"`
	Experts                      *[]EntityReference                 `json:"experts,omitempty"`
	Extension                    *map[string]interface{}            `json:"extension,omitempty"`
	FilteringRules               *FilteringRules                    `json:"filteringRules,omitempty"`
	Followers                    *[]EntityReference                 `json:"followers,omitempty"`
	FullyQualifiedName           *string                            `json:"fullyQualifiedName,omitempty"`
	Href                         *string                            `json:"href,omitempty"`
	Id                           openapi_types.UUID                 `json:"id"`
	IncrementalChangeDescription *ChangeDescription                 `json:"incrementalChangeDescription,omitempty"`
	Input                        *AlertFilteringInput               `json:"input,omitempty"`
	LifeCycle                    *LifeCycle                         `json:"lifeCycle,omitempty"`
	Name                         string                             `json:"name"`
	Owners                       *[]EntityReference                 `json:"owners,omitempty"`
	PollInterval                 *int32                             `json:"pollInterval,omitempty"`
	Provider                     *EventSubscriptionProvider         `json:"provider,omitempty"`
	Retries                      *int32                             `json:"retries,omitempty"`
	Reviewers                    *[]EntityReference                 `json:"reviewers,omitempty"`
	Service                      *EntityReference                   `json:"service,omitempty"`
	Style                        *Style                             `json:"style,omitempty"`
	Tags                         *[]TagLabel                        `json:"tags,omitempty"`
	Trigger                      *TriggerConfig                     `json:"trigger,omitempty"`
	UpdatedAt                    *int64                             `json:"updatedAt,omitempty"`
	UpdatedBy                    *string                            `json:"updatedBy,omitempty"`
	UsageSummary                 *UsageDetails                      `json:"usageSummary,omitempty"`
	Version                      *float64                           `json:"version,omitempty"`
	Votes                        *Votes                             `json:"votes,omitempty"`
}

// EventSubscriptionAlertType defines model for EventSubscription.AlertType.
type EventSubscriptionAlertType string

// EventSubscriptionProvider defines model for EventSubscription.Provider.
type EventSubscriptionProvider string

// EventSubscriptionDestinationTestRequest defines model for EventSubscriptionDestinationTestRequest.
type EventSubscriptionDestinationTestRequest struct {
	Destinations *[]SubscriptionDestination `json:"destinations,omitempty"`
}

// EventSubscriptionDiagnosticInfo defines model for EventSubscriptionDiagnosticInfo.
type EventSubscriptionDiagnosticInfo struct {
	CurrentOffset                  *int64         `json:"currentOffset,omitempty"`
	FailedEventsCount              *int64         `json:"failedEventsCount,omitempty"`
	HasProcessedAllEvents          *bool          `json:"hasProcessedAllEvents,omitempty"`
	LatestOffset                   *int64         `json:"latestOffset,omitempty"`
	RelevantUnprocessedEventsCount *int64         `json:"relevantUnprocessedEventsCount,omitempty"`
	RelevantUnprocessedEventsList  *[]ChangeEvent `json:"relevantUnprocessedEventsList,omitempty"`
	StartingOffset                 *int64         `json:"startingOffset,omitempty"`
	SuccessfulEventsCount          *int64         `json:"successfulEventsCount,omitempty"`
	TotalUnprocessedEventsCount    *int64         `json:"totalUnprocessedEventsCount,omitempty"`
	TotalUnprocessedEventsList     *[]ChangeEvent `json:"totalUnprocessedEventsList,omitempty"`
}

// EventSubscriptionList defines model for EventSubscriptionList.
type EventSubscriptionList struct {
	Data   []EventSubscription `json:"data"`
	Errors *[]EntityError      `json:"errors,omitempty"`
	Paging *Paging             `json:"paging,omitempty"`
}

// EventsRecord defines model for EventsRecord.
type EventsRecord struct {
	FailedEventsCount     *int64 `json:"failedEventsCount,omitempty"`
	PendingEventsCount    *int64 `json:"pendingEventsCount,omitempty"`
	SuccessfulEventsCount *int64 `json:"successfulEventsCount,omitempty"`
	TotalEventsCount      *int64 `json:"totalEventsCount,omitempty"`
}

// Explanation defines model for Explanation.
type Explanation struct {
	Description *string        `json:"description,omitempty"`
	Details     *[]Explanation `json:"details,omitempty"`
	Match       *bool          `json:"match,omitempty"`
	Value       *float32       `json:"value,omitempty"`
}

// ExtensionFieldGuidelines defines model for ExtensionFieldGuidelines.
type ExtensionFieldGuidelines struct {
	Examples *[]QueryExample    `json:"examples,omitempty"`
	Header   string             `json:"header"`
	Sections []GuidelineSection `json:"sections"`
}

// ExtraHeaders defines model for ExtraHeaders.
type ExtraHeaders = map[string]interface{}

// FailureContext defines model for FailureContext.
type FailureContext struct {
	Failure *IndexingError `json:"failure,omitempty"`
}

// FeedInfo defines model for FeedInfo.
type FeedInfo struct {
	EntitySpecificInfo *map[string]interface{} `json:"entitySpecificInfo,omitempty"`
	FieldName          *string                 `json:"fieldName,omitempty"`
	HeaderMessage      *string                 `json:"headerMessage,omitempty"`
}

// Field defines model for Field.
type Field struct {
	Children           *[]Field      `json:"children,omitempty"`
	DataType           FieldDataType `json:"dataType"`
	DataTypeDisplay    *string       `json:"dataTypeDisplay,omitempty"`
	Description        *string       `json:"description,omitempty"`
	DisplayName        *string       `json:"displayName,omitempty"`
	FullyQualifiedName *string       `json:"fullyQualifiedName,omitempty"`
	Name               string        `json:"name"`
	Tags               *[]TagLabel   `json:"tags,omitempty"`
}

// FieldDataType defines model for Field.DataType.
type FieldDataType string

// FieldBoost defines model for FieldBoost.
type FieldBoost struct {
	Boost *float64 `json:"boost,omitempty"`
	Field string   `json:"field"`
}

// FieldChange defines model for FieldChange.
type FieldChange struct {
	Name     *string                 `json:"name,omitempty"`
	NewValue *string                  `json:"newValue,omitempty"`
	OldValue *string                  `json:"oldValue,omitempty"`
}

// FieldComparatorSource defines model for FieldComparatorSource.
type FieldComparatorSource = map[string]interface{}

// FieldInterpretation defines model for FieldInterpretation.
type FieldInterpretation struct {
	Explanation string `json:"explanation"`
	Pattern     string `json:"pattern"`
}

// FieldValueBoost defines model for FieldValueBoost.
type FieldValueBoost struct {
	Condition *Condition               `json:"condition,omitempty"`
	Factor    float64                  `json:"factor"`
	Field     string                   `json:"field"`
	Missing   *float64                 `json:"missing,omitempty"`
	Modifier  *FieldValueBoostModifier `json:"modifier,omitempty"`
}

// FieldValueBoostModifier defines model for FieldValueBoost.Modifier.
type FieldValueBoostModifier string

// Field1 defines model for Field__1.
type Field1 struct {
	Description string `json:"description"`
	Name        string `json:"name"`
}

// FilterPattern defines model for FilterPattern.
type FilterPattern struct {
	Excludes *[]string `json:"excludes,omitempty"`
	Includes *[]string `json:"includes,omitempty"`
}

// FilterResourceDescriptor defines model for FilterResourceDescriptor.
type FilterResourceDescriptor struct {
	Name             *string            `json:"name,omitempty"`
	SupportedActions *[]EventFilterRule `json:"supportedActions,omitempty"`
	SupportedFilters *[]EventFilterRule `json:"supportedFilters,omitempty"`
}

// FilteringRules defines model for FilteringRules.
type FilteringRules struct {
	Actions   *[]EventFilterRule `json:"actions,omitempty"`
	Resources []string           `json:"resources"`
	Rules     *[]EventFilterRule `json:"rules,omitempty"`
}

// Function defines model for Function.
type Function struct {
	Description            *string                     `json:"description,omitempty"`
	Examples               *[]map[string]interface{}   `json:"examples,omitempty"`
	Input                  *string                     `json:"input,omitempty"`
	Name                   *string                     `json:"name,omitempty"`
	ParamAdditionalContext *ParamAdditionalContext     `json:"paramAdditionalContext,omitempty"`
	ParameterInputType     *FunctionParameterInputType `json:"parameterInputType,omitempty"`
}

// FunctionParameterInputType defines model for Function.ParameterInputType.
type FunctionParameterInputType string

// GenerateTokenRequest defines model for GenerateTokenRequest.
type GenerateTokenRequest struct {
	JWTTokenExpiry GenerateTokenRequestJWTTokenExpiry `json:"JWTTokenExpiry"`
}

// GenerateTokenRequestJWTTokenExpiry defines model for GenerateTokenRequest.JWTTokenExpiry.
type GenerateTokenRequestJWTTokenExpiry string

// GlobalSettings defines model for GlobalSettings.
type GlobalSettings struct {
	Aggregations        *[]Aggregation     `json:"aggregations,omitempty"`
	EnableAccessControl *bool              `json:"enableAccessControl,omitempty"`
	FieldValueBoosts    *[]FieldValueBoost `json:"fieldValueBoosts,omitempty"`
	HighlightFields     *[]string          `json:"highlightFields,omitempty"`
	MaxAggregateSize    *int32             `json:"maxAggregateSize,omitempty"`
	MaxAnalyzedOffset   *int32             `json:"maxAnalyzedOffset,omitempty"`
	MaxResultHits       *int32             `json:"maxResultHits,omitempty"`
	TermBoosts          *[]TermBoost       `json:"termBoosts,omitempty"`
}

// Glossary defines model for Glossary.
type Glossary struct {
	Certification                *AssetCertification     `json:"certification,omitempty"`
	ChangeDescription            *ChangeDescription      `json:"changeDescription,omitempty"`
	Children                     *[]EntityReference      `json:"children,omitempty"`
	DataProducts                 *[]EntityReference      `json:"dataProducts,omitempty"`
	Deleted                      *bool                   `json:"deleted,omitempty"`
	Description                  string                  `json:"description"`
	Disabled                     *bool                   `json:"disabled,omitempty"`
	DisplayName                  *string                 `json:"displayName,omitempty"`
	Domain                       *EntityReference        `json:"domain,omitempty"`
	Experts                      *[]EntityReference      `json:"experts,omitempty"`
	Extension                    *map[string]interface{} `json:"extension,omitempty"`
	Followers                    *[]EntityReference      `json:"followers,omitempty"`
	FullyQualifiedName           *string                 `json:"fullyQualifiedName,omitempty"`
	Href                         *string                 `json:"href,omitempty"`
	Id                           openapi_types.UUID      `json:"id"`
	IncrementalChangeDescription *ChangeDescription      `json:"incrementalChangeDescription,omitempty"`
	LifeCycle                    *LifeCycle              `json:"lifeCycle,omitempty"`
	MutuallyExclusive            *bool                   `json:"mutuallyExclusive,omitempty"`
	Name                         string                  `json:"name"`
	Owners                       *[]EntityReference      `json:"owners,omitempty"`
	Provider                     *GlossaryProvider       `json:"provider,omitempty"`
	Reviewers                    *[]EntityReference      `json:"reviewers,omitempty"`
	Service                      *EntityReference        `json:"service,omitempty"`
	Style                        *Style                  `json:"style,omitempty"`
	Tags                         *[]TagLabel             `json:"tags,omitempty"`
	TermCount                    *int32                  `json:"termCount,omitempty"`
	UpdatedAt                    *int64                  `json:"updatedAt,omitempty"`
	UpdatedBy                    *string                 `json:"updatedBy,omitempty"`
	UsageCount                   *int32                  `json:"usageCount,omitempty"`
	UsageSummary                 *UsageDetails           `json:"usageSummary,omitempty"`
	Version                      *float64                `json:"version,omitempty"`
	Votes                        *Votes                  `json:"votes,omitempty"`
}

// GlossaryProvider defines model for Glossary.Provider.
type GlossaryProvider string

// GlossaryList defines model for GlossaryList.
type GlossaryList struct {
	Data   []Glossary     `json:"data"`
	Errors *[]EntityError `json:"errors,omitempty"`
	Paging *Paging        `json:"paging,omitempty"`
}

// GlossaryTerm defines model for GlossaryTerm.
type GlossaryTerm struct {
	Certification                *AssetCertification     `json:"certification,omitempty"`
	ChangeDescription            *ChangeDescription      `json:"changeDescription,omitempty"`
	Children                     *[]EntityReference      `json:"children,omitempty"`
	ChildrenCount                *int32                  `json:"childrenCount,omitempty"`
	DataProducts                 *[]EntityReference      `json:"dataProducts,omitempty"`
	Deleted                      *bool                   `json:"deleted,omitempty"`
	Description                  string                  `json:"description"`
	Disabled                     *bool                   `json:"disabled,omitempty"`
	DisplayName                  *string                 `json:"displayName,omitempty"`
	Domain                       *EntityReference        `json:"domain,omitempty"`
	Experts                      *[]EntityReference      `json:"experts,omitempty"`
	Extension                    *map[string]interface{} `json:"extension,omitempty"`
	Followers                    *[]EntityReference      `json:"followers,omitempty"`
	FullyQualifiedName           *string                 `json:"fullyQualifiedName,omitempty"`
	Glossary                     EntityReference         `json:"glossary"`
	Href                         *string                 `json:"href,omitempty"`
	Id                           openapi_types.UUID      `json:"id"`
	IncrementalChangeDescription *ChangeDescription      `json:"incrementalChangeDescription,omitempty"`
	LifeCycle                    *LifeCycle              `json:"lifeCycle,omitempty"`
	MutuallyExclusive            *bool                   `json:"mutuallyExclusive,omitempty"`
	Name                         string                  `json:"name"`
	Owners                       *[]EntityReference      `json:"owners,omitempty"`
	Parent                       *EntityReference        `json:"parent,omitempty"`
	Provider                     *GlossaryTermProvider   `json:"provider,omitempty"`
	References                   *[]TermReference        `json:"references,omitempty"`
	RelatedTerms                 *[]EntityReference      `json:"relatedTerms,omitempty"`
	Reviewers                    *[]EntityReference      `json:"reviewers,omitempty"`
	Service                      *EntityReference        `json:"service,omitempty"`
	Status                       *GlossaryTermStatus     `json:"status,omitempty"`
	Style                        *Style                  `json:"style,omitempty"`
	Synonyms                     *[]string               `json:"synonyms,omitempty"`
	Tags                         *[]TagLabel             `json:"tags,omitempty"`
	UpdatedAt                    *int64                  `json:"updatedAt,omitempty"`
	UpdatedBy                    *string                 `json:"updatedBy,omitempty"`
	UsageCount                   *int32                  `json:"usageCount,omitempty"`
	UsageSummary                 *UsageDetails           `json:"usageSummary,omitempty"`
	Version                      *float64                `json:"version,omitempty"`
	Votes                        *Votes                  `json:"votes,omitempty"`
}

// GlossaryTermProvider defines model for GlossaryTerm.Provider.
type GlossaryTermProvider string

// GlossaryTermStatus defines model for GlossaryTerm.Status.
type GlossaryTermStatus string

// GlossaryTermList defines model for GlossaryTermList.
type GlossaryTermList struct {
	Data   []GlossaryTerm `json:"data"`
	Errors *[]EntityError `json:"errors,omitempty"`
	Paging *Paging        `json:"paging,omitempty"`
}

// GuidelineSection defines model for GuidelineSection.
type GuidelineSection struct {
	Guidelines []string `json:"guidelines"`
	Title      string   `json:"title"`
}

// HighlightField defines model for HighlightField.
type HighlightField struct {
	Fragment  *bool   `json:"fragment,omitempty"`
	Fragments *[]Text `json:"fragments,omitempty"`
	Name      *string `json:"name,omitempty"`
}

// Histogram defines model for Histogram.
type Histogram struct {
	Boundaries  *[]map[string]interface{} `json:"boundaries,omitempty"`
	Frequencies *[]map[string]interface{} `json:"frequencies,omitempty"`
}

// ImageList defines model for ImageList.
type ImageList struct {
	Image    *string `json:"image,omitempty"`
	Image192 *string `json:"image192,omitempty"`
	Image24  *string `json:"image24,omitempty"`
	Image32  *string `json:"image32,omitempty"`
	Image48  *string `json:"image48,omitempty"`
	Image512 *string `json:"image512,omitempty"`
	Image72  *string `json:"image72,omitempty"`
}

// Index defines model for Index.
type Index struct {
	Fragment *bool   `json:"fragment,omitempty"`
	Name     *string `json:"name,omitempty"`
	Uuid     *string `json:"uuid,omitempty"`
}

// IndexSorter defines model for IndexSorter.
type IndexSorter struct {
	ProviderName *string `json:"providerName,omitempty"`
}

// IndexingError defines model for IndexingError.
type IndexingError struct {
	ErrorSource      *IndexingErrorErrorSource `json:"errorSource,omitempty"`
	FailedCount      *int32                    `json:"failedCount,omitempty"`
	FailedEntities   *[]EntityError            `json:"failedEntities,omitempty"`
	LastFailedCursor *string                   `json:"lastFailedCursor,omitempty"`
	Message          *string                   `json:"message,omitempty"`
	Reason           *string                   `json:"reason,omitempty"`
	StackTrace       *string                   `json:"stackTrace,omitempty"`
	SubmittedCount   *int32                    `json:"submittedCount,omitempty"`
	SuccessCount     *int32                    `json:"successCount,omitempty"`
}

// IndexingErrorErrorSource defines model for IndexingError.ErrorSource.
type IndexingErrorErrorSource string

// IngestionPipeline defines model for IngestionPipeline.
type IngestionPipeline struct {
	AirflowConfig                AirflowConfig                 `json:"airflowConfig"`
	ApplicationType              *string                       `json:"applicationType,omitempty"`
	Certification                *AssetCertification           `json:"certification,omitempty"`
	ChangeDescription            *ChangeDescription            `json:"changeDescription,omitempty"`
	Children                     *[]EntityReference            `json:"children,omitempty"`
	DataProducts                 *[]EntityReference            `json:"dataProducts,omitempty"`
	Deleted                      *bool                         `json:"deleted,omitempty"`
	Deployed                     *bool                         `json:"deployed,omitempty"`
	Description                  *string                       `json:"description,omitempty"`
	DisplayName                  *string                       `json:"displayName,omitempty"`
	Domain                       *EntityReference              `json:"domain,omitempty"`
	Enabled                      *bool                         `json:"enabled,omitempty"`
	Experts                      *[]EntityReference            `json:"experts,omitempty"`
	Extension                    *map[string]interface{}       `json:"extension,omitempty"`
	Followers                    *[]EntityReference            `json:"followers,omitempty"`
	FullyQualifiedName           *string                       `json:"fullyQualifiedName,omitempty"`
	Href                         *string                       `json:"href,omitempty"`
	Id                           *openapi_types.UUID           `json:"id,omitempty"`
	IncrementalChangeDescription *ChangeDescription            `json:"incrementalChangeDescription,omitempty"`
	IngestionRunner              *EntityReference              `json:"ingestionRunner,omitempty"`
	LifeCycle                    *LifeCycle                    `json:"lifeCycle,omitempty"`
	LoggerLevel                  *IngestionPipelineLoggerLevel `json:"loggerLevel,omitempty"`
	Name                         string                        `json:"name"`
	OpenMetadataServerConnection *OpenMetadataConnection       `json:"openMetadataServerConnection,omitempty"`
	Owners                       *[]EntityReference            `json:"owners,omitempty"`
	PipelineStatuses             *PipelineStatus               `json:"pipelineStatuses,omitempty"`
	PipelineType                 IngestionPipelinePipelineType `json:"pipelineType"`
	Provider                     *IngestionPipelineProvider    `json:"provider,omitempty"`
	Reviewers                    *[]EntityReference            `json:"reviewers,omitempty"`
	Service                      *EntityReference              `json:"service,omitempty"`
	SourceConfig                 SourceConfig                  `json:"sourceConfig"`
	Style                        *Style                        `json:"style,omitempty"`
	Tags                         *[]TagLabel                   `json:"tags,omitempty"`
	UpdatedAt                    *int64                        `json:"updatedAt,omitempty"`
	UpdatedBy                    *string                       `json:"updatedBy,omitempty"`
	UsageSummary                 *UsageDetails                 `json:"usageSummary,omitempty"`
	Version                      *float64                      `json:"version,omitempty"`
	Votes                        *Votes                        `json:"votes,omitempty"`
}

// IngestionPipelineLoggerLevel defines model for IngestionPipeline.LoggerLevel.
type IngestionPipelineLoggerLevel string

// IngestionPipelinePipelineType defines model for IngestionPipeline.PipelineType.
type IngestionPipelinePipelineType string

// IngestionPipelineProvider defines model for IngestionPipeline.Provider.
type IngestionPipelineProvider string

// JWTAuthMechanism defines model for JWTAuthMechanism.
type JWTAuthMechanism struct {
	JWTToken          *string                        `json:"JWTToken,omitempty"`
	JWTTokenExpiresAt *int64                         `json:"JWTTokenExpiresAt,omitempty"`
	JWTTokenExpiry    JWTAuthMechanismJWTTokenExpiry `json:"JWTTokenExpiry"`
}

// JWTAuthMechanismJWTTokenExpiry defines model for JWTAuthMechanism.JWTTokenExpiry.
type JWTAuthMechanismJWTTokenExpiry string

// JoinedWith defines model for JoinedWith.
type JoinedWith struct {
	FullyQualifiedName string `json:"fullyQualifiedName"`
	JoinCount          int32  `json:"joinCount"`
}

// JwtResponse defines model for JwtResponse.
type JwtResponse struct {
	AccessToken    *string `json:"accessToken,omitempty"`
	ExpiryDuration *int64  `json:"expiryDuration,omitempty"`
	RefreshToken   *string `json:"refreshToken,omitempty"`
	TokenType      *string `json:"tokenType,omitempty"`
}

// LifeCycle defines model for LifeCycle.
type LifeCycle struct {
	Accessed *AccessDetails `json:"accessed,omitempty"`
	Created  *AccessDetails `json:"created,omitempty"`
	Updated  *AccessDetails `json:"updated,omitempty"`
}

// LineageDetails defines model for LineageDetails.
type LineageDetails struct {
	AssetEdges     *int32                `json:"assetEdges,omitempty"`
	ColumnsLineage *[]ColumnLineage      `json:"columnsLineage,omitempty"`
	CreatedAt      *int64                `json:"createdAt,omitempty"`
	CreatedBy      *string               `json:"createdBy,omitempty"`
	Description    *string               `json:"description,omitempty"`
	Pipeline       *EntityReference      `json:"pipeline,omitempty"`
	Source         *LineageDetailsSource `json:"source,omitempty"`
	SqlQuery       *string               `json:"sqlQuery,omitempty"`
	UpdatedAt      *int64                `json:"updatedAt,omitempty"`
	UpdatedBy      *string               `json:"updatedBy,omitempty"`
}

// LineageDetailsSource defines model for LineageDetails.Source.
type LineageDetailsSource string

// LoginRequest defines model for LoginRequest.
type LoginRequest struct {
	Email    string `json:"email"`
	Password string `json:"password"`
}

// LogoutRequest defines model for LogoutRequest.
type LogoutRequest struct {
	LogoutTime   *time.Time `json:"logoutTime,omitempty"`
	RefreshToken *string    `json:"refreshToken,omitempty"`
	Token        string     `json:"token"`
	Username     *string    `json:"username,omitempty"`
}

// MappingConfiguration defines model for MappingConfiguration.
type MappingConfiguration struct {
	FieldInterpretations *[]FieldInterpretation `json:"fieldInterpretations,omitempty"`
	IncludeMappings      *bool                  `json:"includeMappings,omitempty"`
	MappingSection       *TitleSection          `json:"mappingSection,omitempty"`
}

// MessageSchema defines model for MessageSchema.
type MessageSchema struct {
	SchemaFields *[]Field                 `json:"schemaFields,omitempty"`
	SchemaText   *string                  `json:"schemaText,omitempty"`
	SchemaType   *MessageSchemaSchemaType `json:"schemaType,omitempty"`
}

// MessageSchemaSchemaType defines model for MessageSchema.SchemaType.
type MessageSchemaSchemaType string

// MessagingConnection defines model for MessagingConnection.
type MessagingConnection struct {
	Config *map[string]interface{} `json:"config,omitempty"`
}

// MessagingService defines model for MessagingService.
type MessagingService struct {
	Certification                *AssetCertification         `json:"certification,omitempty"`
	ChangeDescription            *ChangeDescription          `json:"changeDescription,omitempty"`
	Children                     *[]EntityReference          `json:"children,omitempty"`
	Connection                   *MessagingConnection        `json:"connection,omitempty"`
	DataProducts                 *[]EntityReference          `json:"dataProducts,omitempty"`
	Deleted                      *bool                       `json:"deleted,omitempty"`
	Description                  *string                     `json:"description,omitempty"`
	DisplayName                  *string                     `json:"displayName,omitempty"`
	Domain                       *EntityReference            `json:"domain,omitempty"`
	Experts                      *[]EntityReference          `json:"experts,omitempty"`
	Extension                    *map[string]interface{}     `json:"extension,omitempty"`
	Followers                    *[]EntityReference          `json:"followers,omitempty"`
	FullyQualifiedName           *string                     `json:"fullyQualifiedName,omitempty"`
	Href                         *string                     `json:"href,omitempty"`
	Id                           openapi_types.UUID          `json:"id"`
	IncrementalChangeDescription *ChangeDescription          `json:"incrementalChangeDescription,omitempty"`
	IngestionRunner              *EntityReference            `json:"ingestionRunner,omitempty"`
	LifeCycle                    *LifeCycle                  `json:"lifeCycle,omitempty"`
	Name                         string                      `json:"name"`
	Owners                       *[]EntityReference          `json:"owners,omitempty"`
	Pipelines                    *[]EntityReference          `json:"pipelines,omitempty"`
	Provider                     *MessagingServiceProvider   `json:"provider,omitempty"`
	Reviewers                    *[]EntityReference          `json:"reviewers,omitempty"`
	Service                      *EntityReference            `json:"service,omitempty"`
	ServiceType                  MessagingServiceServiceType `json:"serviceType"`
	Style                        *Style                      `json:"style,omitempty"`
	Tags                         *[]TagLabel                 `json:"tags,omitempty"`
	TestConnectionResult         *TestConnectionResult       `json:"testConnectionResult,omitempty"`
	UpdatedAt                    *int64                      `json:"updatedAt,omitempty"`
	UpdatedBy                    *string                     `json:"updatedBy,omitempty"`
	UsageSummary                 *UsageDetails               `json:"usageSummary,omitempty"`
	Version                      *float64                    `json:"version,omitempty"`
	Votes                        *Votes                      `json:"votes,omitempty"`
}

// MessagingServiceProvider defines model for MessagingService.Provider.
type MessagingServiceProvider string

// MessagingServiceServiceType defines model for MessagingService.ServiceType.
type MessagingServiceServiceType string

// MessagingServiceList defines model for MessagingServiceList.
type MessagingServiceList struct {
	Data   []MessagingService `json:"data"`
	Errors *[]EntityError     `json:"errors,omitempty"`
	Paging *Paging            `json:"paging,omitempty"`
}

// MetadataConnection defines model for MetadataConnection.
type MetadataConnection struct {
	Config *map[string]interface{} `json:"config,omitempty"`
}

// MetadataService defines model for MetadataService.
type MetadataService struct {
	Certification                *AssetCertification        `json:"certification,omitempty"`
	ChangeDescription            *ChangeDescription         `json:"changeDescription,omitempty"`
	Children                     *[]EntityReference         `json:"children,omitempty"`
	Connection                   *MetadataConnection        `json:"connection,omitempty"`
	DataProducts                 *[]EntityReference         `json:"dataProducts,omitempty"`
	Deleted                      *bool                      `json:"deleted,omitempty"`
	Description                  *string                    `json:"description,omitempty"`
	DisplayName                  *string                    `json:"displayName,omitempty"`
	Domain                       *EntityReference           `json:"domain,omitempty"`
	Experts                      *[]EntityReference         `json:"experts,omitempty"`
	Extension                    *map[string]interface{}    `json:"extension,omitempty"`
	Followers                    *[]EntityReference         `json:"followers,omitempty"`
	FullyQualifiedName           *string                    `json:"fullyQualifiedName,omitempty"`
	Href                         *string                    `json:"href,omitempty"`
	Id                           openapi_types.UUID         `json:"id"`
	IncrementalChangeDescription *ChangeDescription         `json:"incrementalChangeDescription,omitempty"`
	IngestionRunner              *EntityReference           `json:"ingestionRunner,omitempty"`
	LifeCycle                    *LifeCycle                 `json:"lifeCycle,omitempty"`
	Name                         string                     `json:"name"`
	Owners                       *[]EntityReference         `json:"owners,omitempty"`
	Pipelines                    *[]EntityReference         `json:"pipelines,omitempty"`
	Provider                     *MetadataServiceProvider   `json:"provider,omitempty"`
	Reviewers                    *[]EntityReference         `json:"reviewers,omitempty"`
	Service                      *EntityReference           `json:"service,omitempty"`
	ServiceType                  MetadataServiceServiceType `json:"serviceType"`
	Style                        *Style                     `json:"style,omitempty"`
	Tags                         *[]TagLabel                `json:"tags,omitempty"`
	TestConnectionResult         *TestConnectionResult      `json:"testConnectionResult,omitempty"`
	UpdatedAt                    *int64                     `json:"updatedAt,omitempty"`
	UpdatedBy                    *string                    `json:"updatedBy,omitempty"`
	UsageSummary                 *UsageDetails              `json:"usageSummary,omitempty"`
	Version                      *float64                   `json:"version,omitempty"`
	Votes                        *Votes                     `json:"votes,omitempty"`
}

// MetadataServiceProvider defines model for MetadataService.Provider.
type MetadataServiceProvider string

// MetadataServiceServiceType defines model for MetadataService.ServiceType.
type MetadataServiceServiceType string

// MetadataServiceList defines model for MetadataServiceList.
type MetadataServiceList struct {
	Data   []MetadataService `json:"data"`
	Errors *[]EntityError    `json:"errors,omitempty"`
	Paging *Paging           `json:"paging,omitempty"`
}

// Metric defines model for Metric.
type Metric struct {
	Certification                *AssetCertification      `json:"certification,omitempty"`
	ChangeDescription            *ChangeDescription       `json:"changeDescription,omitempty"`
	Children                     *[]EntityReference       `json:"children,omitempty"`
	DataProducts                 *[]EntityReference       `json:"dataProducts,omitempty"`
	Deleted                      *bool                    `json:"deleted,omitempty"`
	Description                  *string                  `json:"description,omitempty"`
	DisplayName                  *string                  `json:"displayName,omitempty"`
	Domain                       *EntityReference         `json:"domain,omitempty"`
	Experts                      *[]EntityReference       `json:"experts,omitempty"`
	Extension                    *map[string]interface{}  `json:"extension,omitempty"`
	Followers                    *[]EntityReference       `json:"followers,omitempty"`
	FullyQualifiedName           *string                  `json:"fullyQualifiedName,omitempty"`
	Granularity                  *MetricGranularity       `json:"granularity,omitempty"`
	Href                         *string                  `json:"href,omitempty"`
	Id                           openapi_types.UUID       `json:"id"`
	IncrementalChangeDescription *ChangeDescription       `json:"incrementalChangeDescription,omitempty"`
	LifeCycle                    *LifeCycle               `json:"lifeCycle,omitempty"`
	MetricExpression             *MetricExpression        `json:"metricExpression,omitempty"`
	MetricType                   *MetricMetricType        `json:"metricType,omitempty"`
	Name                         string                   `json:"name"`
	Owners                       *[]EntityReference       `json:"owners,omitempty"`
	Provider                     *MetricProvider          `json:"provider,omitempty"`
	RelatedMetrics               *[]EntityReference       `json:"relatedMetrics,omitempty"`
	Reviewers                    *[]EntityReference       `json:"reviewers,omitempty"`
	Service                      *EntityReference         `json:"service,omitempty"`
	Style                        *Style                   `json:"style,omitempty"`
	Tags                         *[]TagLabel              `json:"tags,omitempty"`
	UnitOfMeasurement            *MetricUnitOfMeasurement `json:"unitOfMeasurement,omitempty"`
	UpdatedAt                    *int64                   `json:"updatedAt,omitempty"`
	UpdatedBy                    *string                  `json:"updatedBy,omitempty"`
	UsageSummary                 *UsageDetails            `json:"usageSummary,omitempty"`
	Version                      *float64                 `json:"version,omitempty"`
	Votes                        *Votes                   `json:"votes,omitempty"`
}

// MetricGranularity defines model for Metric.Granularity.
type MetricGranularity string

// MetricMetricType defines model for Metric.MetricType.
type MetricMetricType string

// MetricProvider defines model for Metric.Provider.
type MetricProvider string

// MetricUnitOfMeasurement defines model for Metric.UnitOfMeasurement.
type MetricUnitOfMeasurement string

// MetricExpression defines model for MetricExpression.
type MetricExpression struct {
	Code     *string                   `json:"code,omitempty"`
	Language *MetricExpressionLanguage `json:"language,omitempty"`
}

// MetricExpressionLanguage defines model for MetricExpression.Language.
type MetricExpressionLanguage string

// MetricsList defines model for MetricsList.
type MetricsList struct {
	Data   []Metric       `json:"data"`
	Errors *[]EntityError `json:"errors,omitempty"`
	Paging *Paging        `json:"paging,omitempty"`
}

// MlFeature defines model for MlFeature.
type MlFeature struct {
	DataType           *MlFeatureDataType `json:"dataType,omitempty"`
	Description        *string            `json:"description,omitempty"`
	FeatureAlgorithm   *string            `json:"featureAlgorithm,omitempty"`
	FeatureSources     *[]MlFeatureSource `json:"featureSources,omitempty"`
	FullyQualifiedName *string            `json:"fullyQualifiedName,omitempty"`
	Name               *string            `json:"name,omitempty"`
	Tags               *[]TagLabel        `json:"tags,omitempty"`
}

// MlFeatureDataType defines model for MlFeature.DataType.
type MlFeatureDataType string

// MlFeatureSource defines model for MlFeatureSource.
type MlFeatureSource struct {
	DataSource         *EntityReference         `json:"dataSource,omitempty"`
	DataType           *MlFeatureSourceDataType `json:"dataType,omitempty"`
	Description        *string                  `json:"description,omitempty"`
	FullyQualifiedName *string                  `json:"fullyQualifiedName,omitempty"`
	Name               *string                  `json:"name,omitempty"`
	Tags               *[]TagLabel              `json:"tags,omitempty"`
}

// MlFeatureSourceDataType defines model for MlFeatureSource.DataType.
type MlFeatureSourceDataType string

// MlHyperParameter defines model for MlHyperParameter.
type MlHyperParameter struct {
	Description *string `json:"description,omitempty"`
	Name        *string `json:"name,omitempty"`
	Value       *string `json:"value,omitempty"`
}

// MlModel defines model for MlModel.
type MlModel struct {
	Algorithm                    string                  `json:"algorithm"`
	Certification                *AssetCertification     `json:"certification,omitempty"`
	ChangeDescription            *ChangeDescription      `json:"changeDescription,omitempty"`
	Children                     *[]EntityReference      `json:"children,omitempty"`
	Dashboard                    *EntityReference        `json:"dashboard,omitempty"`
	DataProducts                 *[]EntityReference      `json:"dataProducts,omitempty"`
	Deleted                      *bool                   `json:"deleted,omitempty"`
	Description                  *string                 `json:"description,omitempty"`
	DisplayName                  *string                 `json:"displayName,omitempty"`
	Domain                       *EntityReference        `json:"domain,omitempty"`
	Experts                      *[]EntityReference      `json:"experts,omitempty"`
	Extension                    *map[string]interface{} `json:"extension,omitempty"`
	Followers                    *[]EntityReference      `json:"followers,omitempty"`
	FullyQualifiedName           *string                 `json:"fullyQualifiedName,omitempty"`
	Href                         *string                 `json:"href,omitempty"`
	Id                           openapi_types.UUID      `json:"id"`
	IncrementalChangeDescription *ChangeDescription      `json:"incrementalChangeDescription,omitempty"`
	LifeCycle                    *LifeCycle              `json:"lifeCycle,omitempty"`
	MlFeatures                   *[]MlFeature            `json:"mlFeatures,omitempty"`
	MlHyperParameters            *[]MlHyperParameter     `json:"mlHyperParameters,omitempty"`
	MlStore                      *MlStore                `json:"mlStore,omitempty"`
	Name                         string                  `json:"name"`
	Owners                       *[]EntityReference      `json:"owners,omitempty"`
	Provider                     *MlModelProvider        `json:"provider,omitempty"`
	Reviewers                    *[]EntityReference      `json:"reviewers,omitempty"`
	Server                       *string                 `json:"server,omitempty"`
	Service                      EntityReference         `json:"service"`
	ServiceType                  *MlModelServiceType     `json:"serviceType,omitempty"`
	SourceHash                   *string                 `json:"sourceHash,omitempty"`
	SourceUrl                    *string                 `json:"sourceUrl,omitempty"`
	Style                        *Style                  `json:"style,omitempty"`
	Tags                         *[]TagLabel             `json:"tags,omitempty"`
	Target                       *string                 `json:"target,omitempty"`
	UpdatedAt                    *int64                  `json:"updatedAt,omitempty"`
	UpdatedBy                    *string                 `json:"updatedBy,omitempty"`
	UsageSummary                 *UsageDetails           `json:"usageSummary,omitempty"`
	Version                      *float64                `json:"version,omitempty"`
	Votes                        *Votes                  `json:"votes,omitempty"`
}

// MlModelProvider defines model for MlModel.Provider.
type MlModelProvider string

// MlModelServiceType defines model for MlModel.ServiceType.
type MlModelServiceType string

// MlModelConnection defines model for MlModelConnection.
type MlModelConnection struct {
	Config *map[string]interface{} `json:"config,omitempty"`
}

// MlModelList defines model for MlModelList.
type MlModelList struct {
	Data   []MlModel      `json:"data"`
	Errors *[]EntityError `json:"errors,omitempty"`
	Paging *Paging        `json:"paging,omitempty"`
}

// MlModelService defines model for MlModelService.
type MlModelService struct {
	Certification                *AssetCertification       `json:"certification,omitempty"`
	ChangeDescription            *ChangeDescription        `json:"changeDescription,omitempty"`
	Children                     *[]EntityReference        `json:"children,omitempty"`
	Connection                   *MlModelConnection        `json:"connection,omitempty"`
	DataProducts                 *[]EntityReference        `json:"dataProducts,omitempty"`
	Deleted                      *bool                     `json:"deleted,omitempty"`
	Description                  *string                   `json:"description,omitempty"`
	DisplayName                  *string                   `json:"displayName,omitempty"`
	Domain                       *EntityReference          `json:"domain,omitempty"`
	Experts                      *[]EntityReference        `json:"experts,omitempty"`
	Extension                    *map[string]interface{}   `json:"extension,omitempty"`
	Followers                    *[]EntityReference        `json:"followers,omitempty"`
	FullyQualifiedName           *string                   `json:"fullyQualifiedName,omitempty"`
	Href                         *string                   `json:"href,omitempty"`
	Id                           openapi_types.UUID        `json:"id"`
	IncrementalChangeDescription *ChangeDescription        `json:"incrementalChangeDescription,omitempty"`
	IngestionRunner              *EntityReference          `json:"ingestionRunner,omitempty"`
	LifeCycle                    *LifeCycle                `json:"lifeCycle,omitempty"`
	Name                         string                    `json:"name"`
	Owners                       *[]EntityReference        `json:"owners,omitempty"`
	Pipelines                    *[]EntityReference        `json:"pipelines,omitempty"`
	Provider                     *MlModelServiceProvider   `json:"provider,omitempty"`
	Reviewers                    *[]EntityReference        `json:"reviewers,omitempty"`
	Service                      *EntityReference          `json:"service,omitempty"`
	ServiceType                  MlModelServiceServiceType `json:"serviceType"`
	Style                        *Style                    `json:"style,omitempty"`
	Tags                         *[]TagLabel               `json:"tags,omitempty"`
	TestConnectionResult         *TestConnectionResult     `json:"testConnectionResult,omitempty"`
	UpdatedAt                    *int64                    `json:"updatedAt,omitempty"`
	UpdatedBy                    *string                   `json:"updatedBy,omitempty"`
	UsageSummary                 *UsageDetails             `json:"usageSummary,omitempty"`
	Version                      *float64                  `json:"version,omitempty"`
	Votes                        *Votes                    `json:"votes,omitempty"`
}

// MlModelServiceProvider defines model for MlModelService.Provider.
type MlModelServiceProvider string

// MlModelServiceServiceType defines model for MlModelService.ServiceType.
type MlModelServiceServiceType string

// MlModelServiceList defines model for MlModelServiceList.
type MlModelServiceList struct {
	Data   []MlModelService `json:"data"`
	Errors *[]EntityError   `json:"errors,omitempty"`
	Paging *Paging          `json:"paging,omitempty"`
}

// MlStore defines model for MlStore.
type MlStore struct {
	ImageRepository *string `json:"imageRepository,omitempty"`
	Storage         *string `json:"storage,omitempty"`
}

// NLQConfiguration defines model for NLQConfiguration.
type NLQConfiguration struct {
	EntitySpecificInstructions *[]EntitySpecificInstruction `json:"entitySpecificInstructions,omitempty"`
	Examples                   *[]QueryExample              `json:"examples,omitempty"`
	ExtensionFieldGuidelines   *ExtensionFieldGuidelines    `json:"extensionFieldGuidelines,omitempty"`
	GlobalInstructions         *[]PromptSection             `json:"globalInstructions,omitempty"`
	MappingConfiguration       *MappingConfiguration        `json:"mappingConfiguration,omitempty"`
	PromptTemplate             *string                      `json:"promptTemplate,omitempty"`
}

// NestedIdentity defines model for NestedIdentity.
type NestedIdentity struct {
	Child    *NestedIdentity `json:"child,omitempty"`
	Field    *Text           `json:"field,omitempty"`
	Fragment *bool           `json:"fragment,omitempty"`
	Offset   *int32          `json:"offset,omitempty"`
}

// OpenMetadataConnection defines model for OpenMetadataConnection.
type OpenMetadataConnection struct {
	ApiVersion                                *string                                       `json:"apiVersion,omitempty"`
	AuthProvider                              *OpenMetadataConnectionAuthProvider           `json:"authProvider,omitempty"`
	ClusterName                               *string                                       `json:"clusterName,omitempty"`
	DatabaseFilterPattern                     *FilterPattern                                `json:"databaseFilterPattern,omitempty"`
	ElasticsSearch                            *ElasticsSearch                               `json:"elasticsSearch,omitempty"`
	EnableVersionValidation                   *bool                                         `json:"enableVersionValidation,omitempty"`
	ExtraHeaders                              *ExtraHeaders                                 `json:"extraHeaders,omitempty"`
	ForceEntityOverwriting                    *bool                                         `json:"forceEntityOverwriting,omitempty"`
	HostPort                                  string                                        `json:"hostPort"`
	IncludeDashboards                         *bool                                         `json:"includeDashboards,omitempty"`
	IncludeDatabaseServices                   *bool                                         `json:"includeDatabaseServices,omitempty"`
	IncludeGlossaryTerms                      *bool                                         `json:"includeGlossaryTerms,omitempty"`
	IncludeMessagingServices                  *bool                                         `json:"includeMessagingServices,omitempty"`
	IncludeMlModels                           *bool                                         `json:"includeMlModels,omitempty"`
	IncludePipelineServices                   *bool                                         `json:"includePipelineServices,omitempty"`
	IncludePipelines                          *bool                                         `json:"includePipelines,omitempty"`
	IncludePolicy                             *bool                                         `json:"includePolicy,omitempty"`
	IncludeTables                             *bool                                         `json:"includeTables,omitempty"`
	IncludeTags                               *bool                                         `json:"includeTags,omitempty"`
	IncludeTeams                              *bool                                         `json:"includeTeams,omitempty"`
	IncludeTopics                             *bool                                         `json:"includeTopics,omitempty"`
	IncludeUsers                              *bool                                         `json:"includeUsers,omitempty"`
	LimitRecords                              *int32                                        `json:"limitRecords,omitempty"`
	SchemaFilterPattern                       *FilterPattern                                `json:"schemaFilterPattern,omitempty"`
	SecretsManagerLoader                      *OpenMetadataConnectionSecretsManagerLoader   `json:"secretsManagerLoader,omitempty"`
	SecretsManagerProvider                    *OpenMetadataConnectionSecretsManagerProvider `json:"secretsManagerProvider,omitempty"`
	SecurityConfig                            *OpenMetadataJWTClientConfig                  `json:"securityConfig,omitempty"`
	SslConfig                                 *map[string]interface{}                       `json:"sslConfig,omitempty"`
	StoreServiceConnection                    *bool                                         `json:"storeServiceConnection,omitempty"`
	SupportsDataInsightExtraction             *bool                                         `json:"supportsDataInsightExtraction,omitempty"`
	SupportsElasticSearchReindexingExtraction *bool                                         `json:"supportsElasticSearchReindexingExtraction,omitempty"`
	TableFilterPattern                        *FilterPattern                                `json:"tableFilterPattern,omitempty"`
	Type                                      *OpenMetadataConnectionType                   `json:"type,omitempty"`
	VerifySSL                                 *OpenMetadataConnectionVerifySSL              `json:"verifySSL,omitempty"`
}

// OpenMetadataConnectionAuthProvider defines model for OpenMetadataConnection.AuthProvider.
type OpenMetadataConnectionAuthProvider string

// OpenMetadataConnectionSecretsManagerLoader defines model for OpenMetadataConnection.SecretsManagerLoader.
type OpenMetadataConnectionSecretsManagerLoader string

// OpenMetadataConnectionSecretsManagerProvider defines model for OpenMetadataConnection.SecretsManagerProvider.
type OpenMetadataConnectionSecretsManagerProvider string

// OpenMetadataConnectionType defines model for OpenMetadataConnection.Type.
type OpenMetadataConnectionType string

// OpenMetadataConnectionVerifySSL defines model for OpenMetadataConnection.VerifySSL.
type OpenMetadataConnectionVerifySSL string

// OpenMetadataJWTClientConfig defines model for OpenMetadataJWTClientConfig.
type OpenMetadataJWTClientConfig struct {
	JwtToken string `json:"jwtToken"`
}

// OpenMetadataServerVersion defines model for OpenMetadataServerVersion.
type OpenMetadataServerVersion struct {
	Revision  *string `json:"revision,omitempty"`
	Timestamp *int64  `json:"timestamp,omitempty"`
	Version   *string `json:"version,omitempty"`
}

// Paging defines model for Paging.
type Paging struct {
	After  *string `json:"after,omitempty"`
	Before *string `json:"before,omitempty"`
	Limit  *int32  `json:"limit,omitempty"`
	Offset *int32  `json:"offset,omitempty"`
	Total  int32   `json:"total"`
}

// ParamAdditionalContext defines model for ParamAdditionalContext.
type ParamAdditionalContext struct {
	Data *map[string]interface{} `json:"data,omitempty"`
}

// PartitionColumnDetails defines model for PartitionColumnDetails.
type PartitionColumnDetails struct {
	ColumnName   *string                             `json:"columnName,omitempty"`
	Interval     *string                             `json:"interval,omitempty"`
	IntervalType *PartitionColumnDetailsIntervalType `json:"intervalType,omitempty"`
}

// PartitionColumnDetailsIntervalType defines model for PartitionColumnDetails.IntervalType.
type PartitionColumnDetailsIntervalType string

// PartitionProfilerConfig defines model for PartitionProfilerConfig.
type PartitionProfilerConfig struct {
	EnablePartitioning         *bool                                         `json:"enablePartitioning,omitempty"`
	PartitionColumnName        *string                                       `json:"partitionColumnName,omitempty"`
	PartitionIntegerRangeEnd   *int32                                        `json:"partitionIntegerRangeEnd,omitempty"`
	PartitionIntegerRangeStart *int32                                        `json:"partitionIntegerRangeStart,omitempty"`
	PartitionInterval          *int32                                        `json:"partitionInterval,omitempty"`
	PartitionIntervalType      *PartitionProfilerConfigPartitionIntervalType `json:"partitionIntervalType,omitempty"`
	PartitionIntervalUnit      *PartitionProfilerConfigPartitionIntervalUnit `json:"partitionIntervalUnit,omitempty"`
	PartitionValues            *[]map[string]interface{}                     `json:"partitionValues,omitempty"`
}

// PartitionProfilerConfigPartitionIntervalType defines model for PartitionProfilerConfig.PartitionIntervalType.
type PartitionProfilerConfigPartitionIntervalType string

// PartitionProfilerConfigPartitionIntervalUnit defines model for PartitionProfilerConfig.PartitionIntervalUnit.
type PartitionProfilerConfigPartitionIntervalUnit string

// PasswordResetRequest defines model for PasswordResetRequest.
type PasswordResetRequest struct {
	ConfirmPassword *string `json:"confirmPassword,omitempty"`
	Password        *string `json:"password,omitempty"`
	Token           *string `json:"token,omitempty"`
	Username        string  `json:"username"`
}

// Permission defines model for Permission.
type Permission struct {
	Access    *PermissionAccess    `json:"access,omitempty"`
	Operation *PermissionOperation `json:"operation,omitempty"`
	Policy    *string              `json:"policy,omitempty"`
	Role      *string              `json:"role,omitempty"`
	Rule      *Rule                `json:"rule,omitempty"`
}

// PermissionAccess defines model for Permission.Access.
type PermissionAccess string

// PermissionOperation defines model for Permission.Operation.
type PermissionOperation string

// Persona defines model for Persona.
type Persona struct {
	Certification                *AssetCertification     `json:"certification,omitempty"`
	ChangeDescription            *ChangeDescription      `json:"changeDescription,omitempty"`
	Children                     *[]EntityReference      `json:"children,omitempty"`
	DataProducts                 *[]EntityReference      `json:"dataProducts,omitempty"`
	Deleted                      *bool                   `json:"deleted,omitempty"`
	Description                  *string                 `json:"description,omitempty"`
	DisplayName                  *string                 `json:"displayName,omitempty"`
	Domain                       *EntityReference        `json:"domain,omitempty"`
	Experts                      *[]EntityReference      `json:"experts,omitempty"`
	Extension                    *map[string]interface{} `json:"extension,omitempty"`
	Followers                    *[]EntityReference      `json:"followers,omitempty"`
	FullyQualifiedName           *string                 `json:"fullyQualifiedName,omitempty"`
	Href                         *string                 `json:"href,omitempty"`
	Id                           openapi_types.UUID      `json:"id"`
	IncrementalChangeDescription *ChangeDescription      `json:"incrementalChangeDescription,omitempty"`
	LifeCycle                    *LifeCycle              `json:"lifeCycle,omitempty"`
	Name                         string                  `json:"name"`
	Owners                       *[]EntityReference      `json:"owners,omitempty"`
	Provider                     *PersonaProvider        `json:"provider,omitempty"`
	Reviewers                    *[]EntityReference      `json:"reviewers,omitempty"`
	Service                      *EntityReference        `json:"service,omitempty"`
	Style                        *Style                  `json:"style,omitempty"`
	Tags                         *[]TagLabel             `json:"tags,omitempty"`
	UiCustomization              *EntityReference        `json:"uiCustomization,omitempty"`
	UpdatedAt                    *int64                  `json:"updatedAt,omitempty"`
	UpdatedBy                    *string                 `json:"updatedBy,omitempty"`
	UsageSummary                 *UsageDetails           `json:"usageSummary,omitempty"`
	Users                        *[]EntityReference      `json:"users,omitempty"`
	Version                      *float64                `json:"version,omitempty"`
	Votes                        *Votes                  `json:"votes,omitempty"`
}

// PersonaProvider defines model for Persona.Provider.
type PersonaProvider string

// PersonaList defines model for PersonaList.
type PersonaList struct {
	Data   []Persona      `json:"data"`
	Errors *[]EntityError `json:"errors,omitempty"`
	Paging *Paging        `json:"paging,omitempty"`
}

// PersonalAccessToken defines model for PersonalAccessToken.
type PersonalAccessToken struct {
	ExpiryDate int64                         `json:"expiryDate"`
	JwtToken   *string                       `json:"jwtToken,omitempty"`
	Token      openapi_types.UUID            `json:"token"`
	TokenName  *string                       `json:"tokenName,omitempty"`
	TokenType  *PersonalAccessTokenTokenType `json:"tokenType,omitempty"`
	UserId     openapi_types.UUID            `json:"userId"`
}

// PersonalAccessTokenTokenType defines model for PersonalAccessToken.TokenType.
type PersonalAccessTokenTokenType string

// PersonalAccessTokenList defines model for PersonalAccessTokenList.
type PersonalAccessTokenList struct {
	Data   []PersonalAccessToken `json:"data"`
	Errors *[]EntityError        `json:"errors,omitempty"`
	Paging *Paging               `json:"paging,omitempty"`
}

// Pipeline defines model for Pipeline.
type Pipeline struct {
	Certification                *AssetCertification     `json:"certification,omitempty"`
	ChangeDescription            *ChangeDescription      `json:"changeDescription,omitempty"`
	Children                     *[]EntityReference      `json:"children,omitempty"`
	Concurrency                  *int32                  `json:"concurrency,omitempty"`
	DataProducts                 *[]EntityReference      `json:"dataProducts,omitempty"`
	Deleted                      *bool                   `json:"deleted,omitempty"`
	Description                  *string                 `json:"description,omitempty"`
	DisplayName                  *string                 `json:"displayName,omitempty"`
	Domain                       *EntityReference        `json:"domain,omitempty"`
	Experts                      *[]EntityReference      `json:"experts,omitempty"`
	Extension                    *map[string]interface{} `json:"extension,omitempty"`
	Followers                    *[]EntityReference      `json:"followers,omitempty"`
	FullyQualifiedName           *string                 `json:"fullyQualifiedName,omitempty"`
	Href                         *string                 `json:"href,omitempty"`
	Id                           openapi_types.UUID      `json:"id"`
	IncrementalChangeDescription *ChangeDescription      `json:"incrementalChangeDescription,omitempty"`
	LifeCycle                    *LifeCycle              `json:"lifeCycle,omitempty"`
	Name                         string                  `json:"name"`
	Owners                       *[]EntityReference      `json:"owners,omitempty"`
	PipelineLocation             *string                 `json:"pipelineLocation,omitempty"`
	PipelineStatus               *PipelineStatus         `json:"pipelineStatus,omitempty"`
	Provider                     *PipelineProvider       `json:"provider,omitempty"`
	Reviewers                    *[]EntityReference      `json:"reviewers,omitempty"`
	ScheduleInterval             *string                 `json:"scheduleInterval,omitempty"`
	Service                      EntityReference         `json:"service"`
	ServiceType                  *PipelineServiceType    `json:"serviceType,omitempty"`
	SourceHash                   *string                 `json:"sourceHash,omitempty"`
	SourceUrl                    *string                 `json:"sourceUrl,omitempty"`
	StartDate                    *time.Time              `json:"startDate,omitempty"`
	State                        *PipelineState          `json:"state,omitempty"`
	Style                        *Style                  `json:"style,omitempty"`
	Tags                         *[]TagLabel             `json:"tags,omitempty"`
	Tasks                        *[]Task                 `json:"tasks,omitempty"`
	UpdatedAt                    *int64                  `json:"updatedAt,omitempty"`
	UpdatedBy                    *string                 `json:"updatedBy,omitempty"`
	UsageSummary                 *UsageDetails           `json:"usageSummary,omitempty"`
	Version                      *float64                `json:"version,omitempty"`
	Votes                        *Votes                  `json:"votes,omitempty"`
}

// PipelineProvider defines model for Pipeline.Provider.
type PipelineProvider string

// PipelineServiceType defines model for Pipeline.ServiceType.
type PipelineServiceType string

// PipelineState defines model for Pipeline.State.
type PipelineState string

// PipelineConnection defines model for PipelineConnection.
type PipelineConnection struct {
	Config *map[string]interface{} `json:"config,omitempty"`
}

// PipelineList defines model for PipelineList.
type PipelineList struct {
	Data   []Pipeline     `json:"data"`
	Errors *[]EntityError `json:"errors,omitempty"`
	Paging *Paging        `json:"paging,omitempty"`
}

// PipelineService defines model for PipelineService.
type PipelineService struct {
	Certification                *AssetCertification        `json:"certification,omitempty"`
	ChangeDescription            *ChangeDescription         `json:"changeDescription,omitempty"`
	Children                     *[]EntityReference         `json:"children,omitempty"`
	Connection                   *PipelineConnection        `json:"connection,omitempty"`
	DataProducts                 *[]EntityReference         `json:"dataProducts,omitempty"`
	Deleted                      *bool                      `json:"deleted,omitempty"`
	Description                  *string                    `json:"description,omitempty"`
	DisplayName                  *string                    `json:"displayName,omitempty"`
	Domain                       *EntityReference           `json:"domain,omitempty"`
	Experts                      *[]EntityReference         `json:"experts,omitempty"`
	Extension                    *map[string]interface{}    `json:"extension,omitempty"`
	Followers                    *[]EntityReference         `json:"followers,omitempty"`
	FullyQualifiedName           *string                    `json:"fullyQualifiedName,omitempty"`
	Href                         *string                    `json:"href,omitempty"`
	Id                           openapi_types.UUID         `json:"id"`
	IncrementalChangeDescription *ChangeDescription         `json:"incrementalChangeDescription,omitempty"`
	IngestionRunner              *EntityReference           `json:"ingestionRunner,omitempty"`
	LifeCycle                    *LifeCycle                 `json:"lifeCycle,omitempty"`
	Name                         string                     `json:"name"`
	Owners                       *[]EntityReference         `json:"owners,omitempty"`
	Pipelines                    *[]EntityReference         `json:"pipelines,omitempty"`
	Provider                     *PipelineServiceProvider   `json:"provider,omitempty"`
	Reviewers                    *[]EntityReference         `json:"reviewers,omitempty"`
	Service                      *EntityReference           `json:"service,omitempty"`
	ServiceType                  PipelineServiceServiceType `json:"serviceType"`
	Style                        *Style                     `json:"style,omitempty"`
	Tags                         *[]TagLabel                `json:"tags,omitempty"`
	TestConnectionResult         *TestConnectionResult      `json:"testConnectionResult,omitempty"`
	UpdatedAt                    *int64                     `json:"updatedAt,omitempty"`
	UpdatedBy                    *string                    `json:"updatedBy,omitempty"`
	UsageSummary                 *UsageDetails              `json:"usageSummary,omitempty"`
	Version                      *float64                   `json:"version,omitempty"`
	Votes                        *Votes                     `json:"votes,omitempty"`
}

// PipelineServiceProvider defines model for PipelineService.Provider.
type PipelineServiceProvider string

// PipelineServiceServiceType defines model for PipelineService.ServiceType.
type PipelineServiceServiceType string

// PipelineServiceClientResponse defines model for PipelineServiceClientResponse.
type PipelineServiceClientResponse struct {
	Code     int32   `json:"code"`
	Platform string  `json:"platform"`
	Reason   *string `json:"reason,omitempty"`
	Version  *string `json:"version,omitempty"`
}

// PipelineServiceList defines model for PipelineServiceList.
type PipelineServiceList struct {
	Data   []PipelineService `json:"data"`
	Errors *[]EntityError    `json:"errors,omitempty"`
	Paging *Paging           `json:"paging,omitempty"`
}

// PipelineStatus defines model for PipelineStatus.
type PipelineStatus struct {
	Config        *map[string]map[string]interface{} `json:"config,omitempty"`
	EndDate       *int64                             `json:"endDate,omitempty"`
	PipelineState *PipelineStatusPipelineState       `json:"pipelineState,omitempty"`
	RunId         *string                            `json:"runId,omitempty"`
	StartDate     *int64                             `json:"startDate,omitempty"`
	Status        *[]StepSummary                     `json:"status,omitempty"`
	Timestamp     *int64                             `json:"timestamp,omitempty"`
}

// PipelineStatusPipelineState defines model for PipelineStatus.PipelineState.
type PipelineStatusPipelineState string

// PipelineStatusList defines model for PipelineStatusList.
type PipelineStatusList struct {
	Data   []PipelineStatus `json:"data"`
	Errors *[]EntityError   `json:"errors,omitempty"`
	Paging *Paging          `json:"paging,omitempty"`
}

// Policy defines model for Policy.
type Policy struct {
	AllowDelete                  *bool                   `json:"allowDelete,omitempty"`
	AllowEdit                    *bool                   `json:"allowEdit,omitempty"`
	Certification                *AssetCertification     `json:"certification,omitempty"`
	ChangeDescription            *ChangeDescription      `json:"changeDescription,omitempty"`
	Children                     *[]EntityReference      `json:"children,omitempty"`
	DataProducts                 *[]EntityReference      `json:"dataProducts,omitempty"`
	Deleted                      *bool                   `json:"deleted,omitempty"`
	Description                  *string                 `json:"description,omitempty"`
	Disabled                     *bool                   `json:"disabled,omitempty"`
	DisplayName                  *string                 `json:"displayName,omitempty"`
	Domain                       *EntityReference        `json:"domain,omitempty"`
	Enabled                      *bool                   `json:"enabled,omitempty"`
	Experts                      *[]EntityReference      `json:"experts,omitempty"`
	Extension                    *map[string]interface{} `json:"extension,omitempty"`
	Followers                    *[]EntityReference      `json:"followers,omitempty"`
	FullyQualifiedName           *string                 `json:"fullyQualifiedName,omitempty"`
	Href                         *string                 `json:"href,omitempty"`
	Id                           openapi_types.UUID      `json:"id"`
	IncrementalChangeDescription *ChangeDescription      `json:"incrementalChangeDescription,omitempty"`
	LifeCycle                    *LifeCycle              `json:"lifeCycle,omitempty"`
	Location                     *EntityReference        `json:"location,omitempty"`
	Name                         string                  `json:"name"`
	Owners                       *[]EntityReference      `json:"owners,omitempty"`
	Provider                     *PolicyProvider         `json:"provider,omitempty"`
	Reviewers                    *[]EntityReference      `json:"reviewers,omitempty"`
	Roles                        *[]EntityReference      `json:"roles,omitempty"`
	Rules                        []Rule                  `json:"rules"`
	Service                      *EntityReference        `json:"service,omitempty"`
	Style                        *Style                  `json:"style,omitempty"`
	Tags                         *[]TagLabel             `json:"tags,omitempty"`
	Teams                        *[]EntityReference      `json:"teams,omitempty"`
	UpdatedAt                    *int64                  `json:"updatedAt,omitempty"`
	UpdatedBy                    *string                 `json:"updatedBy,omitempty"`
	UsageSummary                 *UsageDetails           `json:"usageSummary,omitempty"`
	Version                      *float64                `json:"version,omitempty"`
	Votes                        *Votes                  `json:"votes,omitempty"`
}

// PolicyProvider defines model for Policy.Provider.
type PolicyProvider string

// PolicyList defines model for PolicyList.
type PolicyList struct {
	Data   []Policy       `json:"data"`
	Errors *[]EntityError `json:"errors,omitempty"`
	Paging *Paging        `json:"paging,omitempty"`
}

// Post defines model for Post.
type Post struct {
	From      string             `json:"from"`
	Id        openapi_types.UUID `json:"id"`
	Message   string             `json:"message"`
	PostTs    *int64             `json:"postTs,omitempty"`
	Reactions *[]Reaction        `json:"reactions,omitempty"`
}

// PostList defines model for PostList.
type PostList struct {
	Data   []Post         `json:"data"`
	Errors *[]EntityError `json:"errors,omitempty"`
	Paging *Paging        `json:"paging,omitempty"`
}

// PreviewSearchRequest defines model for PreviewSearchRequest.
type PreviewSearchRequest struct {
	Explain             *bool                          `json:"explain,omitempty"`
	FetchSource         *bool                          `json:"fetchSource,omitempty"`
	From                *int32                         `json:"from,omitempty"`
	IncludeSourceFields *[]string                      `json:"includeSourceFields,omitempty"`
	Index               string                         `json:"index"`
	PostFilter          *string                        `json:"postFilter,omitempty"`
	Query               string                         `json:"query"`
	QueryFilter         *string                        `json:"queryFilter,omitempty"`
	SearchSettings      SearchSettings                 `json:"searchSettings"`
	Size                *int32                         `json:"size,omitempty"`
	SortField           *string                        `json:"sortField,omitempty"`
	SortOrder           *PreviewSearchRequestSortOrder `json:"sortOrder,omitempty"`
	TrackTotalHits      *bool                          `json:"trackTotalHits,omitempty"`
}

// PreviewSearchRequestSortOrder defines model for PreviewSearchRequest.SortOrder.
type PreviewSearchRequestSortOrder string

// Profile defines model for Profile.
type Profile struct {
	Images       *ImageList          `json:"images,omitempty"`
	Subscription *SubscriptionConfig `json:"subscription,omitempty"`
}

// ProfileResult defines model for ProfileResult.
type ProfileResult struct {
	DebugInfo         *map[string]map[string]interface{} `json:"debugInfo,omitempty"`
	Fragment          *bool                              `json:"fragment,omitempty"`
	LuceneDescription *string                            `json:"luceneDescription,omitempty"`
	ProfiledChildren  *[]ProfileResult                   `json:"profiledChildren,omitempty"`
	QueryName         *string                            `json:"queryName,omitempty"`
	Time              *int64                             `json:"time,omitempty"`
	TimeBreakdown     *map[string]int64                  `json:"timeBreakdown,omitempty"`
}

// PromptSection defines model for PromptSection.
type PromptSection struct {
	Content string `json:"content"`
	Order   *int32 `json:"order,omitempty"`
	Section string `json:"section"`
}

// Query defines model for Query.
type Query struct {
	Certification                *AssetCertification     `json:"certification,omitempty"`
	ChangeDescription            *ChangeDescription      `json:"changeDescription,omitempty"`
	Checksum                     *string                 `json:"checksum,omitempty"`
	Children                     *[]EntityReference      `json:"children,omitempty"`
	DataProducts                 *[]EntityReference      `json:"dataProducts,omitempty"`
	Deleted                      *bool                   `json:"deleted,omitempty"`
	Description                  *string                 `json:"description,omitempty"`
	DisplayName                  *string                 `json:"displayName,omitempty"`
	Domain                       *EntityReference        `json:"domain,omitempty"`
	Duration                     *float64                `json:"duration,omitempty"`
	ExcludeUsage                 *bool                   `json:"exclude_usage,omitempty"`
	Experts                      *[]EntityReference      `json:"experts,omitempty"`
	Extension                    *map[string]interface{} `json:"extension,omitempty"`
	Followers                    *[]EntityReference      `json:"followers,omitempty"`
	FullyQualifiedName           *string                 `json:"fullyQualifiedName,omitempty"`
	Href                         *string                 `json:"href,omitempty"`
	Id                           openapi_types.UUID      `json:"id"`
	IncrementalChangeDescription *ChangeDescription      `json:"incrementalChangeDescription,omitempty"`
	LifeCycle                    *LifeCycle              `json:"lifeCycle,omitempty"`
	Name                         string                  `json:"name"`
	Owners                       *[]EntityReference      `json:"owners,omitempty"`
	ProcessedLineage             *bool                   `json:"processedLineage,omitempty"`
	Provider                     *QueryProvider          `json:"provider,omitempty"`
	Query                        string                  `json:"query"`
	QueryDate                    *int64                  `json:"queryDate,omitempty"`
	QueryUsedIn                  *[]EntityReference      `json:"queryUsedIn,omitempty"`
	QueryType                    *string                 `json:"query_type,omitempty"`
	Reviewers                    *[]EntityReference      `json:"reviewers,omitempty"`
	Service                      EntityReference         `json:"service"`
	Style                        *Style                  `json:"style,omitempty"`
	Tags                         *[]TagLabel             `json:"tags,omitempty"`
	TriggeredBy                  *EntityReference        `json:"triggeredBy,omitempty"`
	UpdatedAt                    *int64                  `json:"updatedAt,omitempty"`
	UpdatedBy                    *string                 `json:"updatedBy,omitempty"`
	UsageSummary                 *UsageDetails           `json:"usageSummary,omitempty"`
	UsedBy                       *[]string               `json:"usedBy,omitempty"`
	Users                        *[]EntityReference      `json:"users,omitempty"`
	Version                      *float64                `json:"version,omitempty"`
	Votes                        *Votes                  `json:"votes,omitempty"`
}

// QueryProvider defines model for Query.Provider.
type QueryProvider string

// QueryCostRecord defines model for QueryCostRecord.
type QueryCostRecord struct {
	Cost           float64             `json:"cost"`
	Count          float64             `json:"count"`
	Id             *openapi_types.UUID `json:"id,omitempty"`
	JsonSchema     *string             `json:"jsonSchema,omitempty"`
	QueryReference EntityReference     `json:"queryReference"`
	Timestamp      int64               `json:"timestamp"`
	TotalDuration  *float64            `json:"totalDuration,omitempty"`
	UpdatedAt      *int64              `json:"updatedAt,omitempty"`
	UpdatedBy      *EntityReference    `json:"updatedBy,omitempty"`
}

// QueryExample defines model for QueryExample.
type QueryExample struct {
	Description *string   `json:"description,omitempty"`
	EntityTypes *[]string `json:"entityTypes,omitempty"`
	EsQuery     string    `json:"esQuery"`
	Query       string    `json:"query"`
}

// QueryList defines model for QueryList.
type QueryList struct {
	Data   []Query        `json:"data"`
	Errors *[]EntityError `json:"errors,omitempty"`
	Paging *Paging        `json:"paging,omitempty"`
}

// QueryProfileShardResult defines model for QueryProfileShardResult.
type QueryProfileShardResult struct {
	CollectorResult *CollectorResult `json:"collectorResult,omitempty"`
	Fragment        *bool            `json:"fragment,omitempty"`
	QueryResults    *[]ProfileResult `json:"queryResults,omitempty"`
	RewriteTime     *int64           `json:"rewriteTime,omitempty"`
}

// Range defines model for Range.
type Range struct {
	Gt  *float64 `json:"gt,omitempty"`
	Gte *float64 `json:"gte,omitempty"`
	Lt  *float64 `json:"lt,omitempty"`
	Lte *float64 `json:"lte,omitempty"`
}

// Reaction defines model for Reaction.
type Reaction struct {
	ReactionType ReactionReactionType `json:"reactionType"`
	User         EntityReference      `json:"user"`
}

// ReactionReactionType defines model for Reaction.ReactionType.
type ReactionReactionType string

// RegistrationRequest defines model for RegistrationRequest.
type RegistrationRequest struct {
	Email     string `json:"email"`
	FirstName string `json:"firstName"`
	LastName  string `json:"lastName"`
	Password  string `json:"password"`
}

// Report defines model for Report.
type Report struct {
	Certification                *AssetCertification     `json:"certification,omitempty"`
	ChangeDescription            *ChangeDescription      `json:"changeDescription,omitempty"`
	Children                     *[]EntityReference      `json:"children,omitempty"`
	DataProducts                 *[]EntityReference      `json:"dataProducts,omitempty"`
	Deleted                      *bool                   `json:"deleted,omitempty"`
	Description                  *string                 `json:"description,omitempty"`
	DisplayName                  *string                 `json:"displayName,omitempty"`
	Domain                       *EntityReference        `json:"domain,omitempty"`
	Experts                      *[]EntityReference      `json:"experts,omitempty"`
	Extension                    *map[string]interface{} `json:"extension,omitempty"`
	Followers                    *[]EntityReference      `json:"followers,omitempty"`
	FullyQualifiedName           *string                 `json:"fullyQualifiedName,omitempty"`
	Href                         *string                 `json:"href,omitempty"`
	Id                           openapi_types.UUID      `json:"id"`
	IncrementalChangeDescription *ChangeDescription      `json:"incrementalChangeDescription,omitempty"`
	LifeCycle                    *LifeCycle              `json:"lifeCycle,omitempty"`
	Name                         string                  `json:"name"`
	Owners                       *[]EntityReference      `json:"owners,omitempty"`
	Provider                     *ReportProvider         `json:"provider,omitempty"`
	Reviewers                    *[]EntityReference      `json:"reviewers,omitempty"`
	Service                      EntityReference         `json:"service"`
	Style                        *Style                  `json:"style,omitempty"`
	Tags                         *[]TagLabel             `json:"tags,omitempty"`
	UpdatedAt                    *int64                  `json:"updatedAt,omitempty"`
	UpdatedBy                    *string                 `json:"updatedBy,omitempty"`
	UsageSummary                 *UsageDetails           `json:"usageSummary,omitempty"`
	Version                      *float64                `json:"version,omitempty"`
	Votes                        *Votes                  `json:"votes,omitempty"`
}

// ReportProvider defines model for Report.Provider.
type ReportProvider string

// ReportList defines model for ReportList.
type ReportList struct {
	Data   []Report       `json:"data"`
	Errors *[]EntityError `json:"errors,omitempty"`
	Paging *Paging        `json:"paging,omitempty"`
}

// ResolveTask defines model for ResolveTask.
type ResolveTask struct {
	NewValue              string                            `json:"newValue"`
	TestCaseFQN           *string                           `json:"testCaseFQN,omitempty"`
	TestCaseFailureReason *ResolveTaskTestCaseFailureReason `json:"testCaseFailureReason,omitempty"`
}

// ResolveTaskTestCaseFailureReason defines model for ResolveTask.TestCaseFailureReason.
type ResolveTaskTestCaseFailureReason string

// ResourceDescriptor defines model for ResourceDescriptor.
type ResourceDescriptor struct {
	Name       *string                         `json:"name,omitempty"`
	Operations *[]ResourceDescriptorOperations `json:"operations,omitempty"`
}

// ResourceDescriptorOperations defines model for ResourceDescriptor.Operations.
type ResourceDescriptorOperations string

// ResourcePermission defines model for ResourcePermission.
type ResourcePermission struct {
	Permissions []Permission `json:"permissions"`
	Resource    string       `json:"resource"`
}

// ResourcePermissionList defines model for ResourcePermissionList.
type ResourcePermissionList struct {
	Data   []ResourcePermission `json:"data"`
	Errors *[]EntityError       `json:"errors,omitempty"`
	Paging *Paging              `json:"paging,omitempty"`
}

// RestoreEntity defines model for RestoreEntity.
type RestoreEntity struct {
	Id openapi_types.UUID `json:"id"`
}

// ResultListFilterResourceDescriptor defines model for ResultListFilterResourceDescriptor.
type ResultListFilterResourceDescriptor struct {
	Data   []FilterResourceDescriptor `json:"data"`
	Errors *[]EntityError             `json:"errors,omitempty"`
	Paging *Paging                    `json:"paging,omitempty"`
}

// ResultListFunction defines model for ResultListFunction.
type ResultListFunction struct {
	Data   []Function     `json:"data"`
	Errors *[]EntityError `json:"errors,omitempty"`
	Paging *Paging        `json:"paging,omitempty"`
}

// ResultListResourceDescriptor defines model for ResultListResourceDescriptor.
type ResultListResourceDescriptor struct {
	Data   []ResourceDescriptor `json:"data"`
	Errors *[]EntityError       `json:"errors,omitempty"`
	Paging *Paging              `json:"paging,omitempty"`
}

// ResultSummary defines model for ResultSummary.
type ResultSummary struct {
	Status       *ResultSummaryStatus `json:"status,omitempty"`
	TestCaseName *string              `json:"testCaseName,omitempty"`
	Timestamp    *int64               `json:"timestamp,omitempty"`
}

// ResultSummaryStatus defines model for ResultSummary.Status.
type ResultSummaryStatus string

// RevokePersonalTokenRequest defines model for RevokePersonalTokenRequest.
type RevokePersonalTokenRequest struct {
	TokenIds *[]openapi_types.UUID `json:"tokenIds,omitempty"`
}

// RevokeTokenRequest defines model for RevokeTokenRequest.
type RevokeTokenRequest struct {
	Id openapi_types.UUID `json:"id"`
}

// Role defines model for Role.
type Role struct {
	AllowDelete                  *bool                   `json:"allowDelete,omitempty"`
	AllowEdit                    *bool                   `json:"allowEdit,omitempty"`
	Certification                *AssetCertification     `json:"certification,omitempty"`
	ChangeDescription            *ChangeDescription      `json:"changeDescription,omitempty"`
	Children                     *[]EntityReference      `json:"children,omitempty"`
	DataProducts                 *[]EntityReference      `json:"dataProducts,omitempty"`
	Deleted                      *bool                   `json:"deleted,omitempty"`
	Description                  *string                 `json:"description,omitempty"`
	Disabled                     *bool                   `json:"disabled,omitempty"`
	DisplayName                  *string                 `json:"displayName,omitempty"`
	Domain                       *EntityReference        `json:"domain,omitempty"`
	Experts                      *[]EntityReference      `json:"experts,omitempty"`
	Extension                    *map[string]interface{} `json:"extension,omitempty"`
	Followers                    *[]EntityReference      `json:"followers,omitempty"`
	FullyQualifiedName           *string                 `json:"fullyQualifiedName,omitempty"`
	Href                         *string                 `json:"href,omitempty"`
	Id                           openapi_types.UUID      `json:"id"`
	IncrementalChangeDescription *ChangeDescription      `json:"incrementalChangeDescription,omitempty"`
	LifeCycle                    *LifeCycle              `json:"lifeCycle,omitempty"`
	Name                         string                  `json:"name"`
	Owners                       *[]EntityReference      `json:"owners,omitempty"`
	Policies                     *[]EntityReference      `json:"policies,omitempty"`
	Provider                     *RoleProvider           `json:"provider,omitempty"`
	Reviewers                    *[]EntityReference      `json:"reviewers,omitempty"`
	Service                      *EntityReference        `json:"service,omitempty"`
	Style                        *Style                  `json:"style,omitempty"`
	Tags                         *[]TagLabel             `json:"tags,omitempty"`
	Teams                        *[]EntityReference      `json:"teams,omitempty"`
	UpdatedAt                    *int64                  `json:"updatedAt,omitempty"`
	UpdatedBy                    *string                 `json:"updatedBy,omitempty"`
	UsageSummary                 *UsageDetails           `json:"usageSummary,omitempty"`
	Users                        *[]EntityReference      `json:"users,omitempty"`
	Version                      *float64                `json:"version,omitempty"`
	Votes                        *Votes                  `json:"votes,omitempty"`
}

// RoleProvider defines model for Role.Provider.
type RoleProvider string

// RoleList defines model for RoleList.
type RoleList struct {
	Data   []Role         `json:"data"`
	Errors *[]EntityError `json:"errors,omitempty"`
	Paging *Paging        `json:"paging,omitempty"`
}

// Rule defines model for Rule.
type Rule struct {
	Condition          *string          `json:"condition,omitempty"`
	Description        *string          `json:"description,omitempty"`
	Effect             RuleEffect       `json:"effect"`
	FullyQualifiedName *string          `json:"fullyQualifiedName,omitempty"`
	Name               string           `json:"name"`
	Operations         []RuleOperations `json:"operations"`
	Resources          []string         `json:"resources"`
}

// RuleEffect defines model for Rule.Effect.
type RuleEffect string

// RuleOperations defines model for Rule.Operations.
type RuleOperations string

// SampleDataStorageConfig defines model for SampleDataStorageConfig.
type SampleDataStorageConfig struct {
	Config *map[string]interface{} `json:"config,omitempty"`
}

// SearchConnection defines model for SearchConnection.
type SearchConnection struct {
	Config *map[string]interface{} `json:"config,omitempty"`
}

// SearchHit defines model for SearchHit.
type SearchHit struct {
	ClusterAlias    *string                            `json:"clusterAlias,omitempty"`
	DocumentFields  *map[string]DocumentField          `json:"documentFields,omitempty"`
	Explanation     *Explanation                       `json:"explanation,omitempty"`
	Fields          *map[string]DocumentField          `json:"fields,omitempty"`
	Fragment        *bool                              `json:"fragment,omitempty"`
	HighlightFields *map[string]HighlightField         `json:"highlightFields,omitempty"`
	Id              *string                            `json:"id,omitempty"`
	Index           *string                            `json:"index,omitempty"`
	InnerHits       *map[string]SearchHits             `json:"innerHits,omitempty"`
	MatchedQueries  *[]string                          `json:"matchedQueries,omitempty"`
	MetadataFields  *map[string]DocumentField          `json:"metadataFields,omitempty"`
	NestedIdentity  *NestedIdentity                    `json:"nestedIdentity,omitempty"`
	PrimaryTerm     *int64                             `json:"primaryTerm,omitempty"`
	RawSortValues   *[]map[string]interface{}          `json:"rawSortValues,omitempty"`
	Score           *float32                           `json:"score,omitempty"`
	SeqNo           *int64                             `json:"seqNo,omitempty"`
	Shard           *SearchShardTarget                 `json:"shard,omitempty"`
	SortValues      *[]map[string]interface{}          `json:"sortValues,omitempty"`
	SourceAsMap     *map[string]map[string]interface{} `json:"sourceAsMap,omitempty"`
	SourceAsString  *string                            `json:"sourceAsString,omitempty"`
	SourceRef       *BytesReference                    `json:"sourceRef,omitempty"`
	Type            *string                            `json:"type,omitempty"`
	Version         *int64                             `json:"version,omitempty"`
}

// SearchHits defines model for SearchHits.
type SearchHits struct {
	CollapseField  *string                   `json:"collapseField,omitempty"`
	CollapseValues *[]map[string]interface{} `json:"collapseValues,omitempty"`
	Fragment       *bool                     `json:"fragment,omitempty"`
	Hits           *[]SearchHit              `json:"hits,omitempty"`
	MaxScore       *float32                  `json:"maxScore,omitempty"`
	SortFields     *[]SortField              `json:"sortFields,omitempty"`
	TotalHits      *TotalHits                `json:"totalHits,omitempty"`
}

// SearchIndex defines model for SearchIndex.
type SearchIndex struct {
	Certification                *AssetCertification     `json:"certification,omitempty"`
	ChangeDescription            *ChangeDescription      `json:"changeDescription,omitempty"`
	Children                     *[]EntityReference      `json:"children,omitempty"`
	DataProducts                 *[]EntityReference      `json:"dataProducts,omitempty"`
	Deleted                      *bool                   `json:"deleted,omitempty"`
	Description                  *string                 `json:"description,omitempty"`
	DisplayName                  *string                 `json:"displayName,omitempty"`
	Domain                       *EntityReference        `json:"domain,omitempty"`
	Experts                      *[]EntityReference      `json:"experts,omitempty"`
	Extension                    *map[string]interface{} `json:"extension,omitempty"`
	Fields                       []SearchIndexField      `json:"fields"`
	Followers                    *[]EntityReference      `json:"followers,omitempty"`
	FullyQualifiedName           *string                 `json:"fullyQualifiedName,omitempty"`
	Href                         *string                 `json:"href,omitempty"`
	Id                           openapi_types.UUID      `json:"id"`
	IncrementalChangeDescription *ChangeDescription      `json:"incrementalChangeDescription,omitempty"`
	IndexType                    *SearchIndexIndexType   `json:"indexType,omitempty"`
	LifeCycle                    *LifeCycle              `json:"lifeCycle,omitempty"`
	Name                         string                  `json:"name"`
	Owners                       *[]EntityReference      `json:"owners,omitempty"`
	Provider                     *SearchIndexProvider    `json:"provider,omitempty"`
	Reviewers                    *[]EntityReference      `json:"reviewers,omitempty"`
	SampleData                   *SearchIndexSampleData  `json:"sampleData,omitempty"`
	SearchIndexSettings          *SearchIndexSettings    `json:"searchIndexSettings,omitempty"`
	Service                      EntityReference         `json:"service"`
	ServiceType                  *SearchIndexServiceType `json:"serviceType,omitempty"`
	SourceHash                   *string                 `json:"sourceHash,omitempty"`
	Style                        *Style                  `json:"style,omitempty"`
	Tags                         *[]TagLabel             `json:"tags,omitempty"`
	UpdatedAt                    *int64                  `json:"updatedAt,omitempty"`
	UpdatedBy                    *string                 `json:"updatedBy,omitempty"`
	UsageSummary                 *UsageDetails           `json:"usageSummary,omitempty"`
	Version                      *float64                `json:"version,omitempty"`
	Votes                        *Votes                  `json:"votes,omitempty"`
}

// SearchIndexIndexType defines model for SearchIndex.IndexType.
type SearchIndexIndexType string

// SearchIndexProvider defines model for SearchIndex.Provider.
type SearchIndexProvider string

// SearchIndexServiceType defines model for SearchIndex.ServiceType.
type SearchIndexServiceType string

// SearchIndexField defines model for SearchIndexField.
type SearchIndexField struct {
	Children           *[]SearchIndexField      `json:"children,omitempty"`
	DataType           SearchIndexFieldDataType `json:"dataType"`
	DataTypeDisplay    *string                  `json:"dataTypeDisplay,omitempty"`
	Description        *string                  `json:"description,omitempty"`
	DisplayName        *string                  `json:"displayName,omitempty"`
	FullyQualifiedName *string                  `json:"fullyQualifiedName,omitempty"`
	Name               string                   `json:"name"`
	Tags               *[]TagLabel              `json:"tags,omitempty"`
}

// SearchIndexFieldDataType defines model for SearchIndexField.DataType.
type SearchIndexFieldDataType string

// SearchIndexList defines model for SearchIndexList.
type SearchIndexList struct {
	Data   []SearchIndex  `json:"data"`
	Errors *[]EntityError `json:"errors,omitempty"`
	Paging *Paging        `json:"paging,omitempty"`
}

// SearchIndexSampleData defines model for SearchIndexSampleData.
type SearchIndexSampleData struct {
	Messages *[]string `json:"messages,omitempty"`
}

// SearchIndexSettings defines model for SearchIndexSettings.
type SearchIndexSettings = map[string]interface{}

// SearchProfileQueryPhaseResult defines model for SearchProfileQueryPhaseResult.
type SearchProfileQueryPhaseResult struct {
	AggregationProfileResults *AggregationProfileShardResult `json:"aggregationProfileResults,omitempty"`
	QueryProfileResults       *[]QueryProfileShardResult     `json:"queryProfileResults,omitempty"`
}

// SearchProfileShardResult defines model for SearchProfileShardResult.
type SearchProfileShardResult struct {
	AggregationProfileResults *AggregationProfileShardResult `json:"aggregationProfileResults,omitempty"`
	FetchPhase                *ProfileResult                 `json:"fetchPhase,omitempty"`
	Fragment                  *bool                          `json:"fragment,omitempty"`
	QueryPhase                *SearchProfileQueryPhaseResult `json:"queryPhase,omitempty"`
	QueryProfileResults       *[]QueryProfileShardResult     `json:"queryProfileResults,omitempty"`
}

// SearchResponse defines model for SearchResponse.
type SearchResponse struct {
	Aggregations     *Aggregations                        `json:"aggregations,omitempty"`
	Clusters         *Clusters                            `json:"clusters,omitempty"`
	FailedShards     *int32                               `json:"failedShards,omitempty"`
	Fragment         *bool                                `json:"fragment,omitempty"`
	Hits             *SearchHits                          `json:"hits,omitempty"`
	InternalResponse *SearchResponseSections              `json:"internalResponse,omitempty"`
	NumReducePhases  *int32                               `json:"numReducePhases,omitempty"`
	ProfileResults   *map[string]SearchProfileShardResult `json:"profileResults,omitempty"`
	ScrollId         *string                              `json:"scrollId,omitempty"`
	ShardFailures    *[]ShardSearchFailure                `json:"shardFailures,omitempty"`
	SkippedShards    *int32                               `json:"skippedShards,omitempty"`
	SuccessfulShards *int32                               `json:"successfulShards,omitempty"`
	Suggest          *Suggest                             `json:"suggest,omitempty"`
	TerminatedEarly  *bool                                `json:"terminatedEarly,omitempty"`
	TimedOut         *bool                                `json:"timedOut,omitempty"`
	Took             *TimeValue                           `json:"took,omitempty"`
	TotalShards      *int32                               `json:"totalShards,omitempty"`
}

// SearchResponseSections defines model for SearchResponseSections.
type SearchResponseSections struct {
	Fragment        *bool  `json:"fragment,omitempty"`
	NumReducePhases *int32 `json:"numReducePhases,omitempty"`
}

// SearchService defines model for SearchService.
type SearchService struct {
	Certification                *AssetCertification      `json:"certification,omitempty"`
	ChangeDescription            *ChangeDescription       `json:"changeDescription,omitempty"`
	Children                     *[]EntityReference       `json:"children,omitempty"`
	Connection                   *SearchConnection        `json:"connection,omitempty"`
	DataProducts                 *[]EntityReference       `json:"dataProducts,omitempty"`
	Deleted                      *bool                    `json:"deleted,omitempty"`
	Description                  *string                  `json:"description,omitempty"`
	DisplayName                  *string                  `json:"displayName,omitempty"`
	Domain                       *EntityReference         `json:"domain,omitempty"`
	Experts                      *[]EntityReference       `json:"experts,omitempty"`
	Extension                    *map[string]interface{}  `json:"extension,omitempty"`
	Followers                    *[]EntityReference       `json:"followers,omitempty"`
	FullyQualifiedName           *string                  `json:"fullyQualifiedName,omitempty"`
	Href                         *string                  `json:"href,omitempty"`
	Id                           openapi_types.UUID       `json:"id"`
	IncrementalChangeDescription *ChangeDescription       `json:"incrementalChangeDescription,omitempty"`
	IngestionRunner              *EntityReference         `json:"ingestionRunner,omitempty"`
	LifeCycle                    *LifeCycle               `json:"lifeCycle,omitempty"`
	Name                         string                   `json:"name"`
	Owners                       *[]EntityReference       `json:"owners,omitempty"`
	Pipelines                    *[]EntityReference       `json:"pipelines,omitempty"`
	Provider                     *SearchServiceProvider   `json:"provider,omitempty"`
	Reviewers                    *[]EntityReference       `json:"reviewers,omitempty"`
	Service                      *EntityReference         `json:"service,omitempty"`
	ServiceType                  SearchServiceServiceType `json:"serviceType"`
	Style                        *Style                   `json:"style,omitempty"`
	Tags                         *[]TagLabel              `json:"tags,omitempty"`
	TestConnectionResult         *TestConnectionResult    `json:"testConnectionResult,omitempty"`
	UpdatedAt                    *int64                   `json:"updatedAt,omitempty"`
	UpdatedBy                    *string                  `json:"updatedBy,omitempty"`
	UsageSummary                 *UsageDetails            `json:"usageSummary,omitempty"`
	Version                      *float64                 `json:"version,omitempty"`
	Votes                        *Votes                   `json:"votes,omitempty"`
}

// SearchServiceProvider defines model for SearchService.Provider.
type SearchServiceProvider string

// SearchServiceServiceType defines model for SearchService.ServiceType.
type SearchServiceServiceType string

// SearchServiceList defines model for SearchServiceList.
type SearchServiceList struct {
	Data   []SearchService `json:"data"`
	Errors *[]EntityError  `json:"errors,omitempty"`
	Paging *Paging         `json:"paging,omitempty"`
}

// SearchSettings defines model for SearchSettings.
type SearchSettings struct {
	AllowedFieldValueBoosts *[]AllowedFieldValueBoostFields `json:"allowedFieldValueBoosts,omitempty"`
	AllowedFields           *[]AllowedSearchFields          `json:"allowedFields,omitempty"`
	AssetTypeConfigurations *[]AssetTypeConfiguration       `json:"assetTypeConfigurations,omitempty"`
	DefaultConfiguration    *AssetTypeConfiguration         `json:"defaultConfiguration,omitempty"`
	GlobalSettings          *GlobalSettings                 `json:"globalSettings,omitempty"`
	NlqConfiguration        *NLQConfiguration               `json:"nlqConfiguration,omitempty"`
}

// SearchShardTarget defines model for SearchShardTarget.
type SearchShardTarget struct {
	ClusterAlias            *string  `json:"clusterAlias,omitempty"`
	FullyQualifiedIndexName *string  `json:"fullyQualifiedIndexName,omitempty"`
	Index                   *string  `json:"index,omitempty"`
	NodeId                  *string  `json:"nodeId,omitempty"`
	NodeIdText              *Text    `json:"nodeIdText,omitempty"`
	ShardId                 *ShardId `json:"shardId,omitempty"`
}

// ShardId defines model for ShardId.
type ShardId struct {
	Fragment  *bool   `json:"fragment,omitempty"`
	Id        *int32  `json:"id,omitempty"`
	Index     *Index  `json:"index,omitempty"`
	IndexName *string `json:"indexName,omitempty"`
}

// ShardSearchFailure defines model for ShardSearchFailure.
type ShardSearchFailure struct {
	Cause *struct {
		LocalizedMessage *string `json:"localizedMessage,omitempty"`
		Message          *string `json:"message,omitempty"`
		StackTrace       *[]struct {
			ClassLoaderName *string `json:"classLoaderName,omitempty"`
			ClassName       *string `json:"className,omitempty"`
			FileName        *string `json:"fileName,omitempty"`
			LineNumber      *int32  `json:"lineNumber,omitempty"`
			MethodName      *string `json:"methodName,omitempty"`
			ModuleName      *string `json:"moduleName,omitempty"`
			ModuleVersion   *string `json:"moduleVersion,omitempty"`
			NativeMethod    *bool   `json:"nativeMethod,omitempty"`
		} `json:"stackTrace,omitempty"`
		Suppressed *[]struct {
			LocalizedMessage *string `json:"localizedMessage,omitempty"`
			Message          *string `json:"message,omitempty"`
			StackTrace       *[]struct {
				ClassLoaderName *string `json:"classLoaderName,omitempty"`
				ClassName       *string `json:"className,omitempty"`
				FileName        *string `json:"fileName,omitempty"`
				LineNumber      *int32  `json:"lineNumber,omitempty"`
				MethodName      *string `json:"methodName,omitempty"`
				ModuleName      *string `json:"moduleName,omitempty"`
				ModuleVersion   *string `json:"moduleVersion,omitempty"`
				NativeMethod    *bool   `json:"nativeMethod,omitempty"`
			} `json:"stackTrace,omitempty"`
		} `json:"suppressed,omitempty"`
	} `json:"cause,omitempty"`
	Fragment         *bool   `json:"fragment,omitempty"`
	LocalizedMessage *string `json:"localizedMessage,omitempty"`
	Message          *string `json:"message,omitempty"`
	StackTrace       *[]struct {
		ClassLoaderName *string `json:"classLoaderName,omitempty"`
		ClassName       *string `json:"className,omitempty"`
		FileName        *string `json:"fileName,omitempty"`
		LineNumber      *int32  `json:"lineNumber,omitempty"`
		MethodName      *string `json:"methodName,omitempty"`
		ModuleName      *string `json:"moduleName,omitempty"`
		ModuleVersion   *string `json:"moduleVersion,omitempty"`
		NativeMethod    *bool   `json:"nativeMethod,omitempty"`
	} `json:"stackTrace,omitempty"`
	Suppressed *[]struct {
		LocalizedMessage *string `json:"localizedMessage,omitempty"`
		Message          *string `json:"message,omitempty"`
		StackTrace       *[]struct {
			ClassLoaderName *string `json:"classLoaderName,omitempty"`
			ClassName       *string `json:"className,omitempty"`
			FileName        *string `json:"fileName,omitempty"`
			LineNumber      *int32  `json:"lineNumber,omitempty"`
			MethodName      *string `json:"methodName,omitempty"`
			ModuleName      *string `json:"moduleName,omitempty"`
			ModuleVersion   *string `json:"moduleVersion,omitempty"`
			NativeMethod    *bool   `json:"nativeMethod,omitempty"`
		} `json:"stackTrace,omitempty"`
	} `json:"suppressed,omitempty"`
}

// SortField defines model for SortField.
type SortField struct {
	BytesComparator  *map[string]interface{} `json:"bytesComparator,omitempty"`
	CanUsePoints     *bool                   `json:"canUsePoints,omitempty"`
	ComparatorSource *FieldComparatorSource  `json:"comparatorSource,omitempty"`
	Field            *string                 `json:"field,omitempty"`
	IndexSorter      *IndexSorter            `json:"indexSorter,omitempty"`
	MissingValue     *map[string]interface{} `json:"missingValue,omitempty"`
	Reverse          *bool                   `json:"reverse,omitempty"`
	Type             *SortFieldType          `json:"type,omitempty"`
}

// SortFieldType defines model for SortField.Type.
type SortFieldType string

// SourceConfig defines model for SourceConfig.
type SourceConfig struct {
	Config *map[string]interface{} `json:"config,omitempty"`
}

// StackTraceError defines model for StackTraceError.
type StackTraceError struct {
	Error      string  `json:"error"`
	Name       string  `json:"name"`
	StackTrace *string `json:"stackTrace,omitempty"`
}

// Stage defines model for Stage.
type Stage struct {
	EndedAt   *int64                             `json:"endedAt,omitempty"`
	Name      *string                            `json:"name,omitempty"`
	StartedAt *int64                             `json:"startedAt,omitempty"`
	Tasks     *[]openapi_types.UUID              `json:"tasks,omitempty"`
	Variables *map[string]map[string]interface{} `json:"variables,omitempty"`
}

// Stats defines model for Stats.
type Stats struct {
	EntityStats *EntityStats `json:"entityStats,omitempty"`
	JobStats    *StepStats   `json:"jobStats,omitempty"`
}

// StepStats defines model for StepStats.
type StepStats struct {
	FailedRecords  *int32 `json:"failedRecords,omitempty"`
	SuccessRecords *int32 `json:"successRecords,omitempty"`
	TotalRecords   *int32 `json:"totalRecords,omitempty"`
}

// StepSummary defines model for StepSummary.
type StepSummary struct {
	Errors         *int32             `json:"errors,omitempty"`
	Failures       *[]StackTraceError `json:"failures,omitempty"`
	Filtered       *int32             `json:"filtered,omitempty"`
	Name           string             `json:"name"`
	Records        *int32             `json:"records,omitempty"`
	UpdatedRecords *int32             `json:"updated_records,omitempty"`
	Warnings       *int32             `json:"warnings,omitempty"`
}

// StorageConnection defines model for StorageConnection.
type StorageConnection struct {
	Config *map[string]interface{} `json:"config,omitempty"`
}

// StorageService defines model for StorageService.
type StorageService struct {
	Certification                *AssetCertification       `json:"certification,omitempty"`
	ChangeDescription            *ChangeDescription        `json:"changeDescription,omitempty"`
	Children                     *[]EntityReference        `json:"children,omitempty"`
	Connection                   *StorageConnection        `json:"connection,omitempty"`
	DataProducts                 *[]EntityReference        `json:"dataProducts,omitempty"`
	Deleted                      *bool                     `json:"deleted,omitempty"`
	Description                  *string                   `json:"description,omitempty"`
	DisplayName                  *string                   `json:"displayName,omitempty"`
	Domain                       *EntityReference          `json:"domain,omitempty"`
	Experts                      *[]EntityReference        `json:"experts,omitempty"`
	Extension                    *map[string]interface{}   `json:"extension,omitempty"`
	Followers                    *[]EntityReference        `json:"followers,omitempty"`
	FullyQualifiedName           *string                   `json:"fullyQualifiedName,omitempty"`
	Href                         *string                   `json:"href,omitempty"`
	Id                           openapi_types.UUID        `json:"id"`
	IncrementalChangeDescription *ChangeDescription        `json:"incrementalChangeDescription,omitempty"`
	IngestionRunner              *EntityReference          `json:"ingestionRunner,omitempty"`
	LifeCycle                    *LifeCycle                `json:"lifeCycle,omitempty"`
	Name                         string                    `json:"name"`
	Owners                       *[]EntityReference        `json:"owners,omitempty"`
	Pipelines                    *[]EntityReference        `json:"pipelines,omitempty"`
	Provider                     *StorageServiceProvider   `json:"provider,omitempty"`
	Reviewers                    *[]EntityReference        `json:"reviewers,omitempty"`
	Service                      *EntityReference          `json:"service,omitempty"`
	ServiceType                  StorageServiceServiceType `json:"serviceType"`
	Style                        *Style                    `json:"style,omitempty"`
	Tags                         *[]TagLabel               `json:"tags,omitempty"`
	TestConnectionResult         *TestConnectionResult     `json:"testConnectionResult,omitempty"`
	UpdatedAt                    *int64                    `json:"updatedAt,omitempty"`
	UpdatedBy                    *string                   `json:"updatedBy,omitempty"`
	UsageSummary                 *UsageDetails             `json:"usageSummary,omitempty"`
	Version                      *float64                  `json:"version,omitempty"`
	Votes                        *Votes                    `json:"votes,omitempty"`
}

// StorageServiceProvider defines model for StorageService.Provider.
type StorageServiceProvider string

// StorageServiceServiceType defines model for StorageService.ServiceType.
type StorageServiceServiceType string

// StorageServiceList defines model for StorageServiceList.
type StorageServiceList struct {
	Data   []StorageService `json:"data"`
	Errors *[]EntityError   `json:"errors,omitempty"`
	Paging *Paging          `json:"paging,omitempty"`
}

// StoredProcedure defines model for StoredProcedure.
type StoredProcedure struct {
	Certification                *AssetCertification                 `json:"certification,omitempty"`
	ChangeDescription            *ChangeDescription                  `json:"changeDescription,omitempty"`
	Children                     *[]EntityReference                  `json:"children,omitempty"`
	Code                         *string                             `json:"code,omitempty"`
	DataProducts                 *[]EntityReference                  `json:"dataProducts,omitempty"`
	Database                     *EntityReference                    `json:"database,omitempty"`
	DatabaseSchema               *EntityReference                    `json:"databaseSchema,omitempty"`
	Deleted                      *bool                               `json:"deleted,omitempty"`
	Description                  *string                             `json:"description,omitempty"`
	DisplayName                  *string                             `json:"displayName,omitempty"`
	Domain                       *EntityReference                    `json:"domain,omitempty"`
	Experts                      *[]EntityReference                  `json:"experts,omitempty"`
	Extension                    *map[string]interface{}             `json:"extension,omitempty"`
	Followers                    *[]EntityReference                  `json:"followers,omitempty"`
	FullyQualifiedName           *string                             `json:"fullyQualifiedName,omitempty"`
	Href                         *string                             `json:"href,omitempty"`
	Id                           openapi_types.UUID                  `json:"id"`
	IncrementalChangeDescription *ChangeDescription                  `json:"incrementalChangeDescription,omitempty"`
	LifeCycle                    *LifeCycle                          `json:"lifeCycle,omitempty"`
	Name                         string                              `json:"name"`
	Owners                       *[]EntityReference                  `json:"owners,omitempty"`
	ProcessedLineage             *bool                               `json:"processedLineage,omitempty"`
	Provider                     *StoredProcedureProvider            `json:"provider,omitempty"`
	Reviewers                    *[]EntityReference                  `json:"reviewers,omitempty"`
	Service                      *EntityReference                    `json:"service,omitempty"`
	ServiceType                  *StoredProcedureServiceType         `json:"serviceType,omitempty"`
	SourceHash                   *string                             `json:"sourceHash,omitempty"`
	SourceUrl                    *string                             `json:"sourceUrl,omitempty"`
	StoredProcedureCode          StoredProcedureCode                 `json:"storedProcedureCode"`
	StoredProcedureType          *StoredProcedureStoredProcedureType `json:"storedProcedureType,omitempty"`
	Style                        *Style                              `json:"style,omitempty"`
	Tags                         *[]TagLabel                         `json:"tags,omitempty"`
	UpdatedAt                    *int64                              `json:"updatedAt,omitempty"`
	UpdatedBy                    *string                             `json:"updatedBy,omitempty"`
	UsageSummary                 *UsageDetails                       `json:"usageSummary,omitempty"`
	Version                      *float64                            `json:"version,omitempty"`
	Votes                        *Votes                              `json:"votes,omitempty"`
}

// StoredProcedureProvider defines model for StoredProcedure.Provider.
type StoredProcedureProvider string

// StoredProcedureServiceType defines model for StoredProcedure.ServiceType.
type StoredProcedureServiceType string

// StoredProcedureStoredProcedureType defines model for StoredProcedure.StoredProcedureType.
type StoredProcedureStoredProcedureType string

// StoredProcedureCode defines model for StoredProcedureCode.
type StoredProcedureCode struct {
	Code     *string                      `json:"code,omitempty"`
	Language *StoredProcedureCodeLanguage `json:"language,omitempty"`
}

// StoredProcedureCodeLanguage defines model for StoredProcedureCode.Language.
type StoredProcedureCodeLanguage string

// StoredProcedureList defines model for StoredProcedureList.
type StoredProcedureList struct {
	Data   []StoredProcedure `json:"data"`
	Errors *[]EntityError    `json:"errors,omitempty"`
	Paging *Paging           `json:"paging,omitempty"`
}

// Style defines model for Style.
type Style struct {
	Color   *string `json:"color,omitempty"`
	IconURL *string `json:"iconURL,omitempty"`
}

// SubscriptionConfig defines model for SubscriptionConfig.
type SubscriptionConfig struct {
	GChat   *Webhook `json:"gChat,omitempty"`
	Generic *Webhook `json:"generic,omitempty"`
	MsTeams *Webhook `json:"msTeams,omitempty"`
	Slack   *Webhook `json:"slack,omitempty"`
}

// SubscriptionDestination defines model for SubscriptionDestination.
type SubscriptionDestination struct {
	Category      SubscriptionDestinationCategory `json:"category"`
	Config        *map[string]interface{}         `json:"config,omitempty"`
	Enabled       *bool                           `json:"enabled,omitempty"`
	Id            *openapi_types.UUID             `json:"id,omitempty"`
	ReadTimeout   *int32                          `json:"readTimeout,omitempty"`
	StatusDetails *map[string]interface{}         `json:"statusDetails,omitempty"`
	Timeout       *int32                          `json:"timeout,omitempty"`
	Type          SubscriptionDestinationType     `json:"type"`
}

// SubscriptionDestinationCategory defines model for SubscriptionDestination.Category.
type SubscriptionDestinationCategory string

// SubscriptionDestinationType defines model for SubscriptionDestination.Type.
type SubscriptionDestinationType string

// SubscriptionStatus defines model for SubscriptionStatus.
type SubscriptionStatus struct {
	LastFailedAt         *int64                    `json:"lastFailedAt,omitempty"`
	LastFailedReason     *string                   `json:"lastFailedReason,omitempty"`
	LastFailedStatusCode *int32                    `json:"lastFailedStatusCode,omitempty"`
	LastSuccessfulAt     *int64                    `json:"lastSuccessfulAt,omitempty"`
	NextAttempt          *int64                    `json:"nextAttempt,omitempty"`
	Status               *SubscriptionStatusStatus `json:"status,omitempty"`
	Timestamp            *int64                    `json:"timestamp,omitempty"`
}

// SubscriptionStatusStatus defines model for SubscriptionStatus.Status.
type SubscriptionStatusStatus string

// SuccessContext defines model for SuccessContext.
type SuccessContext struct {
	Stats *Stats `json:"stats,omitempty"`
}

// Suggest defines model for Suggest.
type Suggest struct {
	Fragment *bool `json:"fragment,omitempty"`
}

// Suggestion defines model for Suggestion.
type Suggestion struct {
	CreatedAt   *int64              `json:"createdAt,omitempty"`
	CreatedBy   *EntityReference    `json:"createdBy,omitempty"`
	Description *string             `json:"description,omitempty"`
	EntityLink  *string             `json:"entityLink,omitempty"`
	Href        *string             `json:"href,omitempty"`
	Id          *openapi_types.UUID `json:"id,omitempty"`
	Status      *SuggestionStatus   `json:"status,omitempty"`
	TagLabels   *[]TagLabel         `json:"tagLabels,omitempty"`
	Type        *SuggestionType     `json:"type,omitempty"`
	UpdatedAt   *int64              `json:"updatedAt,omitempty"`
	UpdatedBy   *string             `json:"updatedBy,omitempty"`
}

// SuggestionStatus defines model for Suggestion.Status.
type SuggestionStatus string

// SuggestionType defines model for Suggestion.Type.
type SuggestionType string

// SuggestionList defines model for SuggestionList.
type SuggestionList struct {
	Data   []Suggestion   `json:"data"`
	Errors *[]EntityError `json:"errors,omitempty"`
	Paging *Paging        `json:"paging,omitempty"`
}

// SystemProfile defines model for SystemProfile.
type SystemProfile struct {
	Operation    *SystemProfileOperation `json:"operation,omitempty"`
	RowsAffected *int32                  `json:"rowsAffected,omitempty"`
	Timestamp    *int64                  `json:"timestamp,omitempty"`
}

// SystemProfileOperation defines model for SystemProfile.Operation.
type SystemProfileOperation string

// SystemProfileList defines model for SystemProfileList.
type SystemProfileList struct {
	Data   []SystemProfile `json:"data"`
	Errors *[]EntityError  `json:"errors,omitempty"`
	Paging *Paging         `json:"paging,omitempty"`
}

// Table defines model for Table.
type Table struct {
	Certification                *AssetCertification     `json:"certification,omitempty"`
	ChangeDescription            *ChangeDescription      `json:"changeDescription,omitempty"`
	Children                     *[]EntityReference      `json:"children,omitempty"`
	Columns                      []Column                `json:"columns"`
	CustomMetrics                *[]CustomMetric         `json:"customMetrics,omitempty"`
	DataModel                    *DataModel              `json:"dataModel,omitempty"`
	DataProducts                 *[]EntityReference      `json:"dataProducts,omitempty"`
	Database                     *EntityReference        `json:"database,omitempty"`
	DatabaseSchema               *EntityReference        `json:"databaseSchema,omitempty"`
	Deleted                      *bool                   `json:"deleted,omitempty"`
	Description                  *string                 `json:"description,omitempty"`
	DisplayName                  *string                 `json:"displayName,omitempty"`
	Domain                       *EntityReference        `json:"domain,omitempty"`
	Experts                      *[]EntityReference      `json:"experts,omitempty"`
	Extension                    *map[string]interface{} `json:"extension,omitempty"`
	FileFormat                   *TableFileFormat        `json:"fileFormat,omitempty"`
	Followers                    *[]EntityReference      `json:"followers,omitempty"`
	FullyQualifiedName           *string                 `json:"fullyQualifiedName,omitempty"`
	Href                         *string                 `json:"href,omitempty"`
	Id                           openapi_types.UUID      `json:"id"`
	IncrementalChangeDescription *ChangeDescription      `json:"incrementalChangeDescription,omitempty"`
	Joins                        *TableJoins             `json:"joins,omitempty"`
	LifeCycle                    *LifeCycle              `json:"lifeCycle,omitempty"`
	Location                     *EntityReference        `json:"location,omitempty"`
	LocationPath                 *string                 `json:"locationPath,omitempty"`
	Name                         string                  `json:"name"`
	Owners                       *[]EntityReference      `json:"owners,omitempty"`
	ProcessedLineage             *bool                   `json:"processedLineage,omitempty"`
	Profile                      *TableProfile           `json:"profile,omitempty"`
	Provider                     *TableProvider          `json:"provider,omitempty"`
	RetentionPeriod              *string                 `json:"retentionPeriod,omitempty"`
	Reviewers                    *[]EntityReference      `json:"reviewers,omitempty"`
	SampleData                   *TableData              `json:"sampleData,omitempty"`
	SchemaDefinition             *string                 `json:"schemaDefinition,omitempty"`
	Service                      *EntityReference        `json:"service,omitempty"`
	ServiceType                  *TableServiceType       `json:"serviceType,omitempty"`
	SourceHash                   *string                 `json:"sourceHash,omitempty"`
	SourceUrl                    *string                 `json:"sourceUrl,omitempty"`
	Style                        *Style                  `json:"style,omitempty"`
	TableConstraints             *[]TableConstraint      `json:"tableConstraints,omitempty"`
	TablePartition               *TablePartition         `json:"tablePartition,omitempty"`
	TableProfilerConfig          *TableProfilerConfig    `json:"tableProfilerConfig,omitempty"`
	TableType                    *TableTableType         `json:"tableType,omitempty"`
	Tags                         *[]TagLabel             `json:"tags,omitempty"`
	TestSuite                    *EntityReference        `json:"testSuite,omitempty"`
	UpdatedAt                    *int64                  `json:"updatedAt,omitempty"`
	UpdatedBy                    *string                 `json:"updatedBy,omitempty"`
	UsageSummary                 *UsageDetails           `json:"usageSummary,omitempty"`
	Version                      *float64                `json:"version,omitempty"`
	Votes                        *Votes                  `json:"votes,omitempty"`
}

// TableFileFormat defines model for Table.FileFormat.
type TableFileFormat string

// TableProvider defines model for Table.Provider.
type TableProvider string

// TableServiceType defines model for Table.ServiceType.
type TableServiceType string

// TableTableType defines model for Table.TableType.
type TableTableType string

// TableConstraint defines model for TableConstraint.
type TableConstraint struct {
	Columns          *[]string                        `json:"columns,omitempty"`
	ConstraintType   *TableConstraintConstraintType   `json:"constraintType,omitempty"`
	ReferredColumns  *[]string                        `json:"referredColumns,omitempty"`
	RelationshipType *TableConstraintRelationshipType `json:"relationshipType,omitempty"`
}

// TableConstraintConstraintType defines model for TableConstraint.ConstraintType.
type TableConstraintConstraintType string

// TableConstraintRelationshipType defines model for TableConstraint.RelationshipType.
type TableConstraintRelationshipType string

// TableData defines model for TableData.
type TableData struct {
	Columns *[]string                   `json:"columns,omitempty"`
	Rows    *[][]map[string]interface{} `json:"rows,omitempty"`
}

// TableJoins defines model for TableJoins.
type TableJoins struct {
	ColumnJoins      *[]ColumnJoin `json:"columnJoins,omitempty"`
	DayCount         *int32        `json:"dayCount,omitempty"`
	DirectTableJoins *[]JoinedWith `json:"directTableJoins,omitempty"`
	StartDate        *string       `json:"startDate,omitempty"`
}

// TableList defines model for TableList.
type TableList struct {
	Data   []Table        `json:"data"`
	Errors *[]EntityError `json:"errors,omitempty"`
	Paging *Paging        `json:"paging,omitempty"`
}

// TablePartition defines model for TablePartition.
type TablePartition struct {
	Columns *[]PartitionColumnDetails `json:"columns,omitempty"`
}

// TableProfile defines model for TableProfile.
type TableProfile struct {
	ColumnCount        *float64                        `json:"columnCount,omitempty"`
	CreateDateTime     *time.Time                      `json:"createDateTime,omitempty"`
	CustomMetrics      *[]CustomMetricProfile          `json:"customMetrics,omitempty"`
	ProfileSample      *float64                        `json:"profileSample,omitempty"`
	ProfileSampleType  *TableProfileProfileSampleType  `json:"profileSampleType,omitempty"`
	RowCount           *float64                        `json:"rowCount,omitempty"`
	SamplingMethodType *TableProfileSamplingMethodType `json:"samplingMethodType,omitempty"`
	SizeInByte         *float64                        `json:"sizeInByte,omitempty"`
	Timestamp          int64                           `json:"timestamp"`
}

// TableProfileProfileSampleType defines model for TableProfile.ProfileSampleType.
type TableProfileProfileSampleType string

// TableProfileSamplingMethodType defines model for TableProfile.SamplingMethodType.
type TableProfileSamplingMethodType string

// TableProfileList defines model for TableProfileList.
type TableProfileList struct {
	Data   []TableProfile `json:"data"`
	Errors *[]EntityError `json:"errors,omitempty"`
	Paging *Paging        `json:"paging,omitempty"`
}

// TableProfilerConfig defines model for TableProfilerConfig.
type TableProfilerConfig struct {
	ComputeColumnMetrics *bool                                  `json:"computeColumnMetrics,omitempty"`
	ComputeTableMetrics  *bool                                  `json:"computeTableMetrics,omitempty"`
	ExcludeColumns       *[]string                              `json:"excludeColumns,omitempty"`
	IncludeColumns       *[]ColumnProfilerConfig                `json:"includeColumns,omitempty"`
	Partitioning         *PartitionProfilerConfig               `json:"partitioning,omitempty"`
	ProfileQuery         *string                                `json:"profileQuery,omitempty"`
	ProfileSample        *float64                               `json:"profileSample,omitempty"`
	ProfileSampleType    *TableProfilerConfigProfileSampleType  `json:"profileSampleType,omitempty"`
	RandomizedSample     *bool                                  `json:"randomizedSample,omitempty"`
	SampleDataCount      *int32                                 `json:"sampleDataCount,omitempty"`
	SamplingMethodType   *TableProfilerConfigSamplingMethodType `json:"samplingMethodType,omitempty"`
}

// TableProfilerConfigProfileSampleType defines model for TableProfilerConfig.ProfileSampleType.
type TableProfilerConfigProfileSampleType string

// TableProfilerConfigSamplingMethodType defines model for TableProfilerConfig.SamplingMethodType.
type TableProfilerConfigSamplingMethodType string

// Tag defines model for Tag.
type Tag struct {
	Certification                *AssetCertification     `json:"certification,omitempty"`
	ChangeDescription            *ChangeDescription      `json:"changeDescription,omitempty"`
	Children                     *[]EntityReference      `json:"children,omitempty"`
	Classification               *EntityReference        `json:"classification,omitempty"`
	DataProducts                 *[]EntityReference      `json:"dataProducts,omitempty"`
	Deleted                      *bool                   `json:"deleted,omitempty"`
	Deprecated                   *bool                   `json:"deprecated,omitempty"`
	Description                  string                  `json:"description"`
	Disabled                     *bool                   `json:"disabled,omitempty"`
	DisplayName                  *string                 `json:"displayName,omitempty"`
	Domain                       *EntityReference        `json:"domain,omitempty"`
	Experts                      *[]EntityReference      `json:"experts,omitempty"`
	Extension                    *map[string]interface{} `json:"extension,omitempty"`
	Followers                    *[]EntityReference      `json:"followers,omitempty"`
	FullyQualifiedName           *string                 `json:"fullyQualifiedName,omitempty"`
	Href                         *string                 `json:"href,omitempty"`
	Id                           *openapi_types.UUID     `json:"id,omitempty"`
	IncrementalChangeDescription *ChangeDescription      `json:"incrementalChangeDescription,omitempty"`
	LifeCycle                    *LifeCycle              `json:"lifeCycle,omitempty"`
	MutuallyExclusive            *bool                   `json:"mutuallyExclusive,omitempty"`
	Name                         string                  `json:"name"`
	Owners                       *[]EntityReference      `json:"owners,omitempty"`
	Parent                       *EntityReference        `json:"parent,omitempty"`
	Provider                     *TagProvider            `json:"provider,omitempty"`
	Reviewers                    *[]EntityReference      `json:"reviewers,omitempty"`
	Service                      *EntityReference        `json:"service,omitempty"`
	Style                        *Style                  `json:"style,omitempty"`
	Tags                         *[]TagLabel             `json:"tags,omitempty"`
	UpdatedAt                    *int64                  `json:"updatedAt,omitempty"`
	UpdatedBy                    *string                 `json:"updatedBy,omitempty"`
	UsageCount                   *int32                  `json:"usageCount,omitempty"`
	UsageSummary                 *UsageDetails           `json:"usageSummary,omitempty"`
	Version                      *float64                `json:"version,omitempty"`
	Votes                        *Votes                  `json:"votes,omitempty"`
}

// TagProvider defines model for Tag.Provider.
type TagProvider string

// TagLabel defines model for TagLabel.
type TagLabel struct {
	Description *string           `json:"description,omitempty"`
	DisplayName *string           `json:"displayName,omitempty"`
	Href        *string           `json:"href,omitempty"`
	LabelType   TagLabelLabelType `json:"labelType"`
	Name        *string           `json:"name,omitempty"`
	Source      TagLabelSource    `json:"source"`
	State       TagLabelState     `json:"state"`
	Style       *Style            `json:"style,omitempty"`
	TagFQN      string            `json:"tagFQN"`
}

// TagLabelLabelType defines model for TagLabel.LabelType.
type TagLabelLabelType string

// TagLabelSource defines model for TagLabel.Source.
type TagLabelSource string

// TagLabelState defines model for TagLabel.State.
type TagLabelState string

// TagList defines model for TagList.
type TagList struct {
	Data   []Tag          `json:"data"`
	Errors *[]EntityError `json:"errors,omitempty"`
	Paging *Paging        `json:"paging,omitempty"`
}

// Task defines model for Task.
type Task struct {
	Description        *string            `json:"description,omitempty"`
	DisplayName        *string            `json:"displayName,omitempty"`
	DownstreamTasks    *[]string          `json:"downstreamTasks,omitempty"`
	EndDate            *string            `json:"endDate,omitempty"`
	FullyQualifiedName *string            `json:"fullyQualifiedName,omitempty"`
	Name               string             `json:"name"`
	Owners             *[]EntityReference `json:"owners,omitempty"`
	SourceUrl          *string            `json:"sourceUrl,omitempty"`
	StartDate          *string            `json:"startDate,omitempty"`
	Tags               *[]TagLabel        `json:"tags,omitempty"`
	TaskSQL            *string            `json:"taskSQL,omitempty"`
	TaskType           *string            `json:"taskType,omitempty"`
}

// TaskDetails defines model for TaskDetails.
type TaskDetails struct {
	Assignees                  []EntityReference   `json:"assignees"`
	ClosedAt                   *int64              `json:"closedAt,omitempty"`
	ClosedBy                   *string             `json:"closedBy,omitempty"`
	Id                         int32               `json:"id"`
	NewValue                   *string             `json:"newValue,omitempty"`
	OldValue                   *string             `json:"oldValue,omitempty"`
	Status                     *TaskDetailsStatus  `json:"status,omitempty"`
	Suggestion                 *string             `json:"suggestion,omitempty"`
	TestCaseResolutionStatusId *openapi_types.UUID `json:"testCaseResolutionStatusId,omitempty"`
	Type                       TaskDetailsType     `json:"type"`
}

// TaskDetailsStatus defines model for TaskDetails.Status.
type TaskDetailsStatus string

// TaskDetailsType defines model for TaskDetails.Type.
type TaskDetailsType string

// Team defines model for Team.
type Team struct {
	Certification                *AssetCertification     `json:"certification,omitempty"`
	ChangeDescription            *ChangeDescription      `json:"changeDescription,omitempty"`
	Children                     *[]EntityReference      `json:"children,omitempty"`
	ChildrenCount                *int32                  `json:"childrenCount,omitempty"`
	DataProducts                 *[]EntityReference      `json:"dataProducts,omitempty"`
	DefaultRoles                 *[]EntityReference      `json:"defaultRoles,omitempty"`
	Deleted                      *bool                   `json:"deleted,omitempty"`
	Description                  *string                 `json:"description,omitempty"`
	DisplayName                  *string                 `json:"displayName,omitempty"`
	Domain                       *EntityReference        `json:"domain,omitempty"`
	Domains                      *[]EntityReference      `json:"domains,omitempty"`
	Email                        *string                 `json:"email,omitempty"`
	Experts                      *[]EntityReference      `json:"experts,omitempty"`
	Extension                    *map[string]interface{} `json:"extension,omitempty"`
	Followers                    *[]EntityReference      `json:"followers,omitempty"`
	FullyQualifiedName           *string                 `json:"fullyQualifiedName,omitempty"`
	Href                         *string                 `json:"href,omitempty"`
	Id                           openapi_types.UUID      `json:"id"`
	IncrementalChangeDescription *ChangeDescription      `json:"incrementalChangeDescription,omitempty"`
	InheritedRoles               *[]EntityReference      `json:"inheritedRoles,omitempty"`
	IsJoinable                   *bool                   `json:"isJoinable,omitempty"`
	LifeCycle                    *LifeCycle              `json:"lifeCycle,omitempty"`
	Name                         string                  `json:"name"`
	Owners                       *[]EntityReference      `json:"owners,omitempty"`
	Owns                         *[]EntityReference      `json:"owns,omitempty"`
	Parents                      *[]EntityReference      `json:"parents,omitempty"`
	Policies                     *[]EntityReference      `json:"policies,omitempty"`
	Profile                      *Profile                `json:"profile,omitempty"`
	Provider                     *TeamProvider           `json:"provider,omitempty"`
	Reviewers                    *[]EntityReference      `json:"reviewers,omitempty"`
	Service                      *EntityReference        `json:"service,omitempty"`
	Style                        *Style                  `json:"style,omitempty"`
	Tags                         *[]TagLabel             `json:"tags,omitempty"`
	TeamType                     *TeamTeamType           `json:"teamType,omitempty"`
	UpdatedAt                    *int64                  `json:"updatedAt,omitempty"`
	UpdatedBy                    *string                 `json:"updatedBy,omitempty"`
	UsageSummary                 *UsageDetails           `json:"usageSummary,omitempty"`
	UserCount                    *int32                  `json:"userCount,omitempty"`
	Users                        *[]EntityReference      `json:"users,omitempty"`
	Version                      *float64                `json:"version,omitempty"`
	Votes                        *Votes                  `json:"votes,omitempty"`
}

// TeamProvider defines model for Team.Provider.
type TeamProvider string

// TeamTeamType defines model for Team.TeamType.
type TeamTeamType string

// TeamHierarchy defines model for TeamHierarchy.
type TeamHierarchy struct {
	Children           *[]TeamHierarchy       `json:"children,omitempty"`
	Description        *string                `json:"description,omitempty"`
	DisplayName        *string                `json:"displayName,omitempty"`
	FullyQualifiedName *string                `json:"fullyQualifiedName,omitempty"`
	Href               *string                `json:"href,omitempty"`
	Id                 openapi_types.UUID     `json:"id"`
	IsJoinable         *bool                  `json:"isJoinable,omitempty"`
	Name               string                 `json:"name"`
	TeamType           *TeamHierarchyTeamType `json:"teamType,omitempty"`
}

// TeamHierarchyTeamType defines model for TeamHierarchy.TeamType.
type TeamHierarchyTeamType string

// TeamList defines model for TeamList.
type TeamList struct {
	Data   []Team         `json:"data"`
	Errors *[]EntityError `json:"errors,omitempty"`
	Paging *Paging        `json:"paging,omitempty"`
}

// TemplateValidationResponse defines model for TemplateValidationResponse.
type TemplateValidationResponse struct {
	AdditionalPlaceholder *[]string `json:"additionalPlaceholder,omitempty"`
	IsValid               *bool     `json:"isValid,omitempty"`
	Message               *string   `json:"message,omitempty"`
	MissingPlaceholder    *[]string `json:"missingPlaceholder,omitempty"`
}

// TermBoost defines model for TermBoost.
type TermBoost struct {
	Boost float64 `json:"boost"`
	Field string  `json:"field"`
	Value string  `json:"value"`
}

// TermReference defines model for TermReference.
type TermReference struct {
	Endpoint *string `json:"endpoint,omitempty"`
	Name     *string `json:"name,omitempty"`
}

// TestCase defines model for TestCase.
type TestCase struct {
	Certification                *AssetCertification       `json:"certification,omitempty"`
	ChangeDescription            *ChangeDescription        `json:"changeDescription,omitempty"`
	Children                     *[]EntityReference        `json:"children,omitempty"`
	ComputePassedFailedRowCount  *bool                     `json:"computePassedFailedRowCount,omitempty"`
	CreatedBy                    *string                   `json:"createdBy,omitempty"`
	DataProducts                 *[]EntityReference        `json:"dataProducts,omitempty"`
	Deleted                      *bool                     `json:"deleted,omitempty"`
	Description                  *string                   `json:"description,omitempty"`
	DisplayName                  *string                   `json:"displayName,omitempty"`
	Domain                       *EntityReference          `json:"domain,omitempty"`
	EntityFQN                    *string                   `json:"entityFQN,omitempty"`
	EntityLink                   string                    `json:"entityLink"`
	Experts                      *[]EntityReference        `json:"experts,omitempty"`
	Extension                    *map[string]interface{}   `json:"extension,omitempty"`
	FailedRowsSample             *TableData                `json:"failedRowsSample,omitempty"`
	Followers                    *[]EntityReference        `json:"followers,omitempty"`
	FullyQualifiedName           *string                   `json:"fullyQualifiedName,omitempty"`
	Href                         *string                   `json:"href,omitempty"`
	Id                           *openapi_types.UUID       `json:"id,omitempty"`
	IncidentId                   *openapi_types.UUID       `json:"incidentId,omitempty"`
	IncrementalChangeDescription *ChangeDescription        `json:"incrementalChangeDescription,omitempty"`
	InspectionQuery              *string                   `json:"inspectionQuery,omitempty"`
	LifeCycle                    *LifeCycle                `json:"lifeCycle,omitempty"`
	Name                         string                    `json:"name"`
	Owners                       *[]EntityReference        `json:"owners,omitempty"`
	ParameterValues              *[]TestCaseParameterValue `json:"parameterValues,omitempty"`
	Provider                     *TestCaseProvider         `json:"provider,omitempty"`
	Reviewers                    *[]EntityReference        `json:"reviewers,omitempty"`
	Service                      *EntityReference          `json:"service,omitempty"`
	Style                        *Style                    `json:"style,omitempty"`
	Tags                         *[]TagLabel               `json:"tags,omitempty"`
	TestCaseResult               *TestCaseResult           `json:"testCaseResult,omitempty"`
	TestCaseStatus               *TestCaseTestCaseStatus   `json:"testCaseStatus,omitempty"`
	TestDefinition               EntityReference           `json:"testDefinition"`
	TestSuite                    EntityReference           `json:"testSuite"`
	TestSuites                   *[]TestSuite              `json:"testSuites,omitempty"`
	UpdatedAt                    *int64                    `json:"updatedAt,omitempty"`
	UpdatedBy                    *string                   `json:"updatedBy,omitempty"`
	UsageSummary                 *UsageDetails             `json:"usageSummary,omitempty"`
	UseDynamicAssertion          *bool                     `json:"useDynamicAssertion,omitempty"`
	Version                      *float64                  `json:"version,omitempty"`
	Votes                        *Votes                    `json:"votes,omitempty"`
}

// TestCaseProvider defines model for TestCase.Provider.
type TestCaseProvider string

// TestCaseTestCaseStatus defines model for TestCase.TestCaseStatus.
type TestCaseTestCaseStatus string

// TestCaseList defines model for TestCaseList.
type TestCaseList struct {
	Data   []TestCase     `json:"data"`
	Errors *[]EntityError `json:"errors,omitempty"`
	Paging *Paging        `json:"paging,omitempty"`
}

// TestCaseParameter defines model for TestCaseParameter.
type TestCaseParameter struct {
	DataType       *TestCaseParameterDataType       `json:"dataType,omitempty"`
	Description    *string                          `json:"description,omitempty"`
	DisplayName    *string                          `json:"displayName,omitempty"`
	Name           *string                          `json:"name,omitempty"`
	OptionValues   *[]map[string]interface{}        `json:"optionValues,omitempty"`
	Required       *bool                            `json:"required,omitempty"`
	ValidationRule *TestCaseParameterValidationRule `json:"validationRule,omitempty"`
}

// TestCaseParameterDataType defines model for TestCaseParameter.DataType.
type TestCaseParameterDataType string

// TestCaseParameterValidationRule defines model for TestCaseParameterValidationRule.
type TestCaseParameterValidationRule struct {
	ParameterField *string                              `json:"parameterField,omitempty"`
	Rule           *TestCaseParameterValidationRuleRule `json:"rule,omitempty"`
}

// TestCaseParameterValidationRuleRule defines model for TestCaseParameterValidationRule.Rule.
type TestCaseParameterValidationRuleRule string

// TestCaseParameterValue defines model for TestCaseParameterValue.
type TestCaseParameterValue struct {
	Name  *string `json:"name,omitempty"`
	Value *string `json:"value,omitempty"`
}

// TestCaseResolutionStatus defines model for TestCaseResolutionStatus.
type TestCaseResolutionStatus struct {
	Id                              *openapi_types.UUID                                  `json:"id,omitempty"`
	Metrics                         *[]Metric                                            `json:"metrics,omitempty"`
	Severity                        *TestCaseResolutionStatusSeverity                    `json:"severity,omitempty"`
	StateId                         *openapi_types.UUID                                  `json:"stateId,omitempty"`
	TestCaseReference               *EntityReference                                     `json:"testCaseReference,omitempty"`
	TestCaseResolutionStatusDetails *map[string]interface{}                              `json:"testCaseResolutionStatusDetails,omitempty"`
	TestCaseResolutionStatusType    TestCaseResolutionStatusTestCaseResolutionStatusType `json:"testCaseResolutionStatusType"`
	Timestamp                       *int64                                               `json:"timestamp,omitempty"`
	UpdatedAt                       *int64                                               `json:"updatedAt,omitempty"`
	UpdatedBy                       *EntityReference                                     `json:"updatedBy,omitempty"`
}

// TestCaseResolutionStatusSeverity defines model for TestCaseResolutionStatus.Severity.
type TestCaseResolutionStatusSeverity string

// TestCaseResolutionStatusTestCaseResolutionStatusType defines model for TestCaseResolutionStatus.TestCaseResolutionStatusType.
type TestCaseResolutionStatusTestCaseResolutionStatusType string

// TestCaseResolutionStatusResultList defines model for TestCaseResolutionStatusResultList.
type TestCaseResolutionStatusResultList struct {
	Data   []TestCaseResolutionStatus `json:"data"`
	Errors *[]EntityError             `json:"errors,omitempty"`
	Paging *Paging                    `json:"paging,omitempty"`
}

// TestCaseResult defines model for TestCaseResult.
type TestCaseResult struct {
	FailedRows           *int32                        `json:"failedRows,omitempty"`
	FailedRowsPercentage *float64                      `json:"failedRowsPercentage,omitempty"`
	Id                   *openapi_types.UUID           `json:"id,omitempty"`
	IncidentId           *openapi_types.UUID           `json:"incidentId,omitempty"`
	MaxBound             *float64                      `json:"maxBound,omitempty"`
	MinBound             *float64                      `json:"minBound,omitempty"`
	PassedRows           *int32                        `json:"passedRows,omitempty"`
	PassedRowsPercentage *float64                      `json:"passedRowsPercentage,omitempty"`
	Result               *string                       `json:"result,omitempty"`
	SampleData           *string                       `json:"sampleData,omitempty"`
	TestCase             *EntityReference              `json:"testCase,omitempty"`
	TestCaseFQN          *string                       `json:"testCaseFQN,omitempty"`
	TestCaseStatus       *TestCaseResultTestCaseStatus `json:"testCaseStatus,omitempty"`
	TestDefinition       *EntityReference              `json:"testDefinition,omitempty"`
	TestResultValue      *[]TestResultValue            `json:"testResultValue,omitempty"`
	Timestamp            int64                         `json:"timestamp"`
}

// TestCaseResultTestCaseStatus defines model for TestCaseResult.TestCaseStatus.
type TestCaseResultTestCaseStatus string

// TestCaseResultList defines model for TestCaseResultList.
type TestCaseResultList struct {
	Data   []TestCaseResult `json:"data"`
	Errors *[]EntityError   `json:"errors,omitempty"`
	Paging *Paging          `json:"paging,omitempty"`
}

// TestConnectionResult defines model for TestConnectionResult.
type TestConnectionResult struct {
	LastUpdatedAt *int64                      `json:"lastUpdatedAt,omitempty"`
	Status        *TestConnectionResultStatus `json:"status,omitempty"`
	Steps         []TestConnectionStepResult  `json:"steps"`
}

// TestConnectionResultStatus defines model for TestConnectionResult.Status.
type TestConnectionResultStatus string

// TestConnectionStepResult defines model for TestConnectionStepResult.
type TestConnectionStepResult struct {
	ErrorLog  *string `json:"errorLog,omitempty"`
	Mandatory bool    `json:"mandatory"`
	Message   *string `json:"message,omitempty"`
	Name      string  `json:"name"`
	Passed    bool    `json:"passed"`
}

// TestDefinition defines model for TestDefinition.
type TestDefinition struct {
	Certification                *AssetCertification                 `json:"certification,omitempty"`
	ChangeDescription            *ChangeDescription                  `json:"changeDescription,omitempty"`
	Children                     *[]EntityReference                  `json:"children,omitempty"`
	DataProducts                 *[]EntityReference                  `json:"dataProducts,omitempty"`
	DataQualityDimension         *TestDefinitionDataQualityDimension `json:"dataQualityDimension,omitempty"`
	Deleted                      *bool                               `json:"deleted,omitempty"`
	Description                  string                              `json:"description"`
	DisplayName                  *string                             `json:"displayName,omitempty"`
	Domain                       *EntityReference                    `json:"domain,omitempty"`
	EntityType                   *TestDefinitionEntityType           `json:"entityType,omitempty"`
	Experts                      *[]EntityReference                  `json:"experts,omitempty"`
	Extension                    *map[string]interface{}             `json:"extension,omitempty"`
	Followers                    *[]EntityReference                  `json:"followers,omitempty"`
	FullyQualifiedName           *string                             `json:"fullyQualifiedName,omitempty"`
	Href                         *string                             `json:"href,omitempty"`
	Id                           *openapi_types.UUID                 `json:"id,omitempty"`
	IncrementalChangeDescription *ChangeDescription                  `json:"incrementalChangeDescription,omitempty"`
	LifeCycle                    *LifeCycle                          `json:"lifeCycle,omitempty"`
	Name                         string                              `json:"name"`
	Owners                       *[]EntityReference                  `json:"owners,omitempty"`
	ParameterDefinition          *[]TestCaseParameter                `json:"parameterDefinition,omitempty"`
	Provider                     *TestDefinitionProvider             `json:"provider,omitempty"`
	Reviewers                    *[]EntityReference                  `json:"reviewers,omitempty"`
	Service                      *EntityReference                    `json:"service,omitempty"`
	Style                        *Style                              `json:"style,omitempty"`
	SupportedDataTypes           *[]TestDefinitionSupportedDataTypes `json:"supportedDataTypes,omitempty"`
	SupportsDynamicAssertion     *bool                               `json:"supportsDynamicAssertion,omitempty"`
	SupportsRowLevelPassedFailed *bool                               `json:"supportsRowLevelPassedFailed,omitempty"`
	Tags                         *[]TagLabel                         `json:"tags,omitempty"`
	TestPlatforms                []TestDefinitionTestPlatforms       `json:"testPlatforms"`
	UpdatedAt                    *int64                              `json:"updatedAt,omitempty"`
	UpdatedBy                    *string                             `json:"updatedBy,omitempty"`
	UsageSummary                 *UsageDetails                       `json:"usageSummary,omitempty"`
	Version                      *float64                            `json:"version,omitempty"`
	Votes                        *Votes                              `json:"votes,omitempty"`
}

// TestDefinitionDataQualityDimension defines model for TestDefinition.DataQualityDimension.
type TestDefinitionDataQualityDimension string

// TestDefinitionEntityType defines model for TestDefinition.EntityType.
type TestDefinitionEntityType string

// TestDefinitionProvider defines model for TestDefinition.Provider.
type TestDefinitionProvider string

// TestDefinitionSupportedDataTypes defines model for TestDefinition.SupportedDataTypes.
type TestDefinitionSupportedDataTypes string

// TestDefinitionTestPlatforms defines model for TestDefinition.TestPlatforms.
type TestDefinitionTestPlatforms string

// TestDefinitionList defines model for TestDefinitionList.
type TestDefinitionList struct {
	Data   []TestDefinition `json:"data"`
	Errors *[]EntityError   `json:"errors,omitempty"`
	Paging *Paging          `json:"paging,omitempty"`
}

// TestResultValue defines model for TestResultValue.
type TestResultValue struct {
	Name           *string `json:"name,omitempty"`
	PredictedValue *string `json:"predictedValue,omitempty"`
	Value          *string `json:"value,omitempty"`
}

// TestSuite defines model for TestSuite.
type TestSuite struct {
	Basic                        *bool                   `json:"basic,omitempty"`
	BasicEntityReference         *EntityReference        `json:"basicEntityReference,omitempty"`
	Certification                *AssetCertification     `json:"certification,omitempty"`
	ChangeDescription            *ChangeDescription      `json:"changeDescription,omitempty"`
	Children                     *[]EntityReference      `json:"children,omitempty"`
	Connection                   *TestSuiteConnection    `json:"connection,omitempty"`
	DataProducts                 *[]EntityReference      `json:"dataProducts,omitempty"`
	Deleted                      *bool                   `json:"deleted,omitempty"`
	Description                  *string                 `json:"description,omitempty"`
	DisplayName                  *string                 `json:"displayName,omitempty"`
	Domain                       *EntityReference        `json:"domain,omitempty"`
	Executable                   *bool                   `json:"executable,omitempty"`
	ExecutableEntityReference    *EntityReference        `json:"executableEntityReference,omitempty"`
	Experts                      *[]EntityReference      `json:"experts,omitempty"`
	Extension                    *map[string]interface{} `json:"extension,omitempty"`
	Followers                    *[]EntityReference      `json:"followers,omitempty"`
	FullyQualifiedName           *string                 `json:"fullyQualifiedName,omitempty"`
	Href                         *string                 `json:"href,omitempty"`
	Id                           *openapi_types.UUID     `json:"id,omitempty"`
	IncrementalChangeDescription *ChangeDescription      `json:"incrementalChangeDescription,omitempty"`
	IngestionRunner              *EntityReference        `json:"ingestionRunner,omitempty"`
	Inherited                    *bool                   `json:"inherited,omitempty"`
	LifeCycle                    *LifeCycle              `json:"lifeCycle,omitempty"`
	Name                         string                  `json:"name"`
	Owners                       *[]EntityReference      `json:"owners,omitempty"`
	Pipelines                    *[]EntityReference      `json:"pipelines,omitempty"`
	Provider                     *TestSuiteProvider      `json:"provider,omitempty"`
	Reviewers                    *[]EntityReference      `json:"reviewers,omitempty"`
	Service                      *EntityReference        `json:"service,omitempty"`
	ServiceType                  *TestSuiteServiceType   `json:"serviceType,omitempty"`
	Style                        *Style                  `json:"style,omitempty"`
	Summary                      *TestSummary            `json:"summary,omitempty"`
	Tags                         *[]TagLabel             `json:"tags,omitempty"`
	TestCaseResultSummary        *[]ResultSummary        `json:"testCaseResultSummary,omitempty"`
	TestConnectionResult         *TestConnectionResult   `json:"testConnectionResult,omitempty"`
	Tests                        *[]EntityReference      `json:"tests,omitempty"`
	UpdatedAt                    *int64                  `json:"updatedAt,omitempty"`
	UpdatedBy                    *string                 `json:"updatedBy,omitempty"`
	UsageSummary                 *UsageDetails           `json:"usageSummary,omitempty"`
	Version                      *float64                `json:"version,omitempty"`
	Votes                        *Votes                  `json:"votes,omitempty"`
}

// TestSuiteProvider defines model for TestSuite.Provider.
type TestSuiteProvider string

// TestSuiteServiceType defines model for TestSuite.ServiceType.
type TestSuiteServiceType string

// TestSuiteConnection defines model for TestSuiteConnection.
type TestSuiteConnection struct {
	Config *map[string]interface{} `json:"config,omitempty"`
}

// TestSuiteList defines model for TestSuiteList.
type TestSuiteList struct {
	Data   []TestSuite    `json:"data"`
	Errors *[]EntityError `json:"errors,omitempty"`
	Paging *Paging        `json:"paging,omitempty"`
}

// TestSummary defines model for TestSummary.
type TestSummary struct {
	Aborted           *int32                         `json:"aborted,omitempty"`
	ColumnTestSummary *[]ColumnTestSummaryDefinition `json:"columnTestSummary,omitempty"`
	Failed            *int32                         `json:"failed,omitempty"`
	Queued            *int32                         `json:"queued,omitempty"`
	Success           *int32                         `json:"success,omitempty"`
	Total             *int32                         `json:"total,omitempty"`
}

// Text defines model for Text.
type Text struct {
	Fragment *bool `json:"fragment,omitempty"`
}

// Thread defines model for Thread.
type Thread struct {
	About          string                `json:"about"`
	AddressedTo    *string               `json:"addressedTo,omitempty"`
	Announcement   *AnnouncementDetails  `json:"announcement,omitempty"`
	CardStyle      *ThreadCardStyle      `json:"cardStyle,omitempty"`
	Chatbot        *ChatbotDetails       `json:"chatbot,omitempty"`
	CreatedBy      *string               `json:"createdBy,omitempty"`
	Domain         *openapi_types.UUID   `json:"domain,omitempty"`
	EntityRef      *EntityReference      `json:"entityRef,omitempty"`
	EntityUrlLink  *string               `json:"entityUrlLink,omitempty"`
	FeedInfo       *FeedInfo             `json:"feedInfo,omitempty"`
	FieldOperation *ThreadFieldOperation `json:"fieldOperation,omitempty"`
	GeneratedBy    *ThreadGeneratedBy    `json:"generatedBy,omitempty"`
	Href           *string               `json:"href,omitempty"`
	Id             openapi_types.UUID    `json:"id"`
	Message        string                `json:"message"`
	Posts          *[]Post               `json:"posts,omitempty"`
	PostsCount     *int32                `json:"postsCount,omitempty"`
	Reactions      *[]Reaction           `json:"reactions,omitempty"`
	Resolved       *bool                 `json:"resolved,omitempty"`
	Task           *TaskDetails          `json:"task,omitempty"`
	ThreadTs       *int64                `json:"threadTs,omitempty"`
	Type           *ThreadType           `json:"type,omitempty"`
	UpdatedAt      *int64                `json:"updatedAt,omitempty"`
	UpdatedBy      *string               `json:"updatedBy,omitempty"`
}

// ThreadCardStyle defines model for Thread.CardStyle.
type ThreadCardStyle string

// ThreadFieldOperation defines model for Thread.FieldOperation.
type ThreadFieldOperation string

// ThreadGeneratedBy defines model for Thread.GeneratedBy.
type ThreadGeneratedBy string

// ThreadType defines model for Thread.Type.
type ThreadType string

// ThreadCount defines model for ThreadCount.
type ThreadCount struct {
	ActiveAnnouncementCount   *int32  `json:"activeAnnouncementCount,omitempty"`
	ClosedTaskCount           *int32  `json:"closedTaskCount,omitempty"`
	ConversationCount         *int32  `json:"conversationCount,omitempty"`
	EntityLink                *string `json:"entityLink,omitempty"`
	InactiveAnnouncementCount *int32  `json:"inactiveAnnouncementCount,omitempty"`
	MentionCount              *int32  `json:"mentionCount,omitempty"`
	OpenTaskCount             *int32  `json:"openTaskCount,omitempty"`
	TotalAnnouncementCount    *int32  `json:"totalAnnouncementCount,omitempty"`
	TotalTaskCount            *int32  `json:"totalTaskCount,omitempty"`
}

// ThreadCountList defines model for ThreadCountList.
type ThreadCountList struct {
	Data   []ThreadCount  `json:"data"`
	Errors *[]EntityError `json:"errors,omitempty"`
	Paging *Paging        `json:"paging,omitempty"`
}

// ThreadList defines model for ThreadList.
type ThreadList struct {
	Data   []Thread       `json:"data"`
	Errors *[]EntityError `json:"errors,omitempty"`
	Paging *Paging        `json:"paging,omitempty"`
}

// TimeValue defines model for TimeValue.
type TimeValue struct {
	Days        *int64   `json:"days,omitempty"`
	DaysFrac    *float64 `json:"daysFrac,omitempty"`
	Hours       *int64   `json:"hours,omitempty"`
	HoursFrac   *float64 `json:"hoursFrac,omitempty"`
	Micros      *int64   `json:"micros,omitempty"`
	MicrosFrac  *float64 `json:"microsFrac,omitempty"`
	Millis      *int64   `json:"millis,omitempty"`
	MillisFrac  *float64 `json:"millisFrac,omitempty"`
	Minutes     *int64   `json:"minutes,omitempty"`
	MinutesFrac *float64 `json:"minutesFrac,omitempty"`
	Nanos       *int64   `json:"nanos,omitempty"`
	Seconds     *int64   `json:"seconds,omitempty"`
	SecondsFrac *float64 `json:"secondsFrac,omitempty"`
	StringRep   *string  `json:"stringRep,omitempty"`
}

// TitleSection defines model for TitleSection.
type TitleSection struct {
	Description *string `json:"description,omitempty"`
	Order       *int32  `json:"order,omitempty"`
	Title       *string `json:"title,omitempty"`
}

// ToXContentFragment defines model for ToXContentFragment.
type ToXContentFragment struct {
	Fragment *bool `json:"fragment,omitempty"`
}

// TokenRefreshRequest defines model for TokenRefreshRequest.
type TokenRefreshRequest struct {
	RefreshToken string `json:"refreshToken"`
}

// TopHits defines model for TopHits.
type TopHits struct {
	Size      *int32            `json:"size,omitempty"`
	SortField *string           `json:"sortField,omitempty"`
	SortOrder *TopHitsSortOrder `json:"sortOrder,omitempty"`
}

// TopHitsSortOrder defines model for TopHits.SortOrder.
type TopHitsSortOrder string

// Topic defines model for Topic.
type Topic struct {
	Certification                *AssetCertification     `json:"certification,omitempty"`
	ChangeDescription            *ChangeDescription      `json:"changeDescription,omitempty"`
	Children                     *[]EntityReference      `json:"children,omitempty"`
	CleanupPolicies              *[]TopicCleanupPolicies `json:"cleanupPolicies,omitempty"`
	DataProducts                 *[]EntityReference      `json:"dataProducts,omitempty"`
	Deleted                      *bool                   `json:"deleted,omitempty"`
	Description                  *string                 `json:"description,omitempty"`
	DisplayName                  *string                 `json:"displayName,omitempty"`
	Domain                       *EntityReference        `json:"domain,omitempty"`
	Experts                      *[]EntityReference      `json:"experts,omitempty"`
	Extension                    *map[string]interface{} `json:"extension,omitempty"`
	Followers                    *[]EntityReference      `json:"followers,omitempty"`
	FullyQualifiedName           *string                 `json:"fullyQualifiedName,omitempty"`
	Href                         *string                 `json:"href,omitempty"`
	Id                           openapi_types.UUID      `json:"id"`
	IncrementalChangeDescription *ChangeDescription      `json:"incrementalChangeDescription,omitempty"`
	LifeCycle                    *LifeCycle              `json:"lifeCycle,omitempty"`
	MaximumMessageSize           *int32                  `json:"maximumMessageSize,omitempty"`
	MessageSchema                *MessageSchema          `json:"messageSchema,omitempty"`
	MinimumInSyncReplicas        *int32                  `json:"minimumInSyncReplicas,omitempty"`
	Name                         string                  `json:"name"`
	Owners                       *[]EntityReference      `json:"owners,omitempty"`
	Partitions                   int32                   `json:"partitions"`
	Provider                     *TopicProvider          `json:"provider,omitempty"`
	ReplicationFactor            *int32                  `json:"replicationFactor,omitempty"`
	RetentionSize                *float64                `json:"retentionSize,omitempty"`
	RetentionTime                *float64                `json:"retentionTime,omitempty"`
	Reviewers                    *[]EntityReference      `json:"reviewers,omitempty"`
	SampleData                   *TopicSampleData        `json:"sampleData,omitempty"`
	Service                      EntityReference         `json:"service"`
	ServiceType                  *TopicServiceType       `json:"serviceType,omitempty"`
	SourceHash                   *string                 `json:"sourceHash,omitempty"`
	SourceUrl                    *string                 `json:"sourceUrl,omitempty"`
	Style                        *Style                  `json:"style,omitempty"`
	Tags                         *[]TagLabel             `json:"tags,omitempty"`
	TopicConfig                  *TopicConfig            `json:"topicConfig,omitempty"`
	UpdatedAt                    *int64                  `json:"updatedAt,omitempty"`
	UpdatedBy                    *string                 `json:"updatedBy,omitempty"`
	UsageSummary                 *UsageDetails           `json:"usageSummary,omitempty"`
	Version                      *float64                `json:"version,omitempty"`
	Votes                        *Votes                  `json:"votes,omitempty"`
}

// TopicCleanupPolicies defines model for Topic.CleanupPolicies.
type TopicCleanupPolicies string

// TopicProvider defines model for Topic.Provider.
type TopicProvider string

// TopicServiceType defines model for Topic.ServiceType.
type TopicServiceType string

// TopicConfig defines model for TopicConfig.
type TopicConfig = map[string]interface{}

// TopicList defines model for TopicList.
type TopicList struct {
	Data   []Topic        `json:"data"`
	Errors *[]EntityError `json:"errors,omitempty"`
	Paging *Paging        `json:"paging,omitempty"`
}

// TopicSampleData defines model for TopicSampleData.
type TopicSampleData struct {
	Messages *[]string `json:"messages,omitempty"`
}

// TotalHits defines model for TotalHits.
type TotalHits struct {
	Relation *TotalHitsRelation `json:"relation,omitempty"`
	Value    *int64             `json:"value,omitempty"`
}

// TotalHitsRelation defines model for TotalHits.Relation.
type TotalHitsRelation string

// TriggerConfig defines model for TriggerConfig.
type TriggerConfig struct {
	CronExpression *string                    `json:"cronExpression,omitempty"`
	ScheduleInfo   *TriggerConfigScheduleInfo `json:"scheduleInfo,omitempty"`
	TriggerType    TriggerConfigTriggerType   `json:"triggerType"`
}

// TriggerConfigScheduleInfo defines model for TriggerConfig.ScheduleInfo.
type TriggerConfigScheduleInfo string

// TriggerConfigTriggerType defines model for TriggerConfig.TriggerType.
type TriggerConfigTriggerType string

// Type defines model for Type.
type Type struct {
	Category                     *TypeCategory           `json:"category,omitempty"`
	Certification                *AssetCertification     `json:"certification,omitempty"`
	ChangeDescription            *ChangeDescription      `json:"changeDescription,omitempty"`
	Children                     *[]EntityReference      `json:"children,omitempty"`
	CustomProperties             *[]CustomProperty       `json:"customProperties,omitempty"`
	DataProducts                 *[]EntityReference      `json:"dataProducts,omitempty"`
	Deleted                      *bool                   `json:"deleted,omitempty"`
	Description                  string                  `json:"description"`
	DisplayName                  *string                 `json:"displayName,omitempty"`
	Domain                       *EntityReference        `json:"domain,omitempty"`
	Experts                      *[]EntityReference      `json:"experts,omitempty"`
	Extension                    *map[string]interface{} `json:"extension,omitempty"`
	Followers                    *[]EntityReference      `json:"followers,omitempty"`
	FullyQualifiedName           *string                 `json:"fullyQualifiedName,omitempty"`
	Href                         *string                 `json:"href,omitempty"`
	Id                           *openapi_types.UUID     `json:"id,omitempty"`
	IncrementalChangeDescription *ChangeDescription      `json:"incrementalChangeDescription,omitempty"`
	LifeCycle                    *LifeCycle              `json:"lifeCycle,omitempty"`
	Name                         string                  `json:"name"`
	NameSpace                    *string                 `json:"nameSpace,omitempty"`
	Owners                       *[]EntityReference      `json:"owners,omitempty"`
	Provider                     *TypeProvider           `json:"provider,omitempty"`
	Reviewers                    *[]EntityReference      `json:"reviewers,omitempty"`
	Schema                       *string                 `json:"schema,omitempty"`
	Service                      *EntityReference        `json:"service,omitempty"`
	Style                        *Style                  `json:"style,omitempty"`
	Tags                         *[]TagLabel             `json:"tags,omitempty"`
	UpdatedAt                    *int64                  `json:"updatedAt,omitempty"`
	UpdatedBy                    *string                 `json:"updatedBy,omitempty"`
	UsageSummary                 *UsageDetails           `json:"usageSummary,omitempty"`
	Version                      *float64                `json:"version,omitempty"`
	Votes                        *Votes                  `json:"votes,omitempty"`
}

// TypeCategory defines model for Type.Category.
type TypeCategory string

// TypeProvider defines model for Type.Provider.
type TypeProvider string

// TypeList defines model for TypeList.
type TypeList struct {
	Data   []Type         `json:"data"`
	Errors *[]EntityError `json:"errors,omitempty"`
	Paging *Paging        `json:"paging,omitempty"`
}

// UsageDetails defines model for UsageDetails.
type UsageDetails struct {
	DailyStats   UsageStats  `json:"dailyStats"`
	Date         string      `json:"date"`
	MonthlyStats *UsageStats `json:"monthlyStats,omitempty"`
	WeeklyStats  *UsageStats `json:"weeklyStats,omitempty"`
}

// UsageStats defines model for UsageStats.
type UsageStats struct {
	Count          int32    `json:"count"`
	PercentileRank *float64 `json:"percentileRank,omitempty"`
}

// User defines model for User.
type User struct {
	AuthenticationMechanism      *AuthenticationMechanism `json:"authenticationMechanism,omitempty"`
	Certification                *AssetCertification      `json:"certification,omitempty"`
	ChangeDescription            *ChangeDescription       `json:"changeDescription,omitempty"`
	Children                     *[]EntityReference       `json:"children,omitempty"`
	DataProducts                 *[]EntityReference       `json:"dataProducts,omitempty"`
	DefaultPersona               *EntityReference         `json:"defaultPersona,omitempty"`
	Deleted                      *bool                    `json:"deleted,omitempty"`
	Description                  *string                  `json:"description,omitempty"`
	DisplayName                  *string                  `json:"displayName,omitempty"`
	Domain                       *EntityReference         `json:"domain,omitempty"`
	Domains                      *[]EntityReference       `json:"domains,omitempty"`
	Email                        string                   `json:"email"`
	Experts                      *[]EntityReference       `json:"experts,omitempty"`
	Extension                    *map[string]interface{}  `json:"extension,omitempty"`
	Followers                    *[]EntityReference       `json:"followers,omitempty"`
	Follows                      *[]EntityReference       `json:"follows,omitempty"`
	FullyQualifiedName           *string                  `json:"fullyQualifiedName,omitempty"`
	Href                         *string                  `json:"href,omitempty"`
	Id                           openapi_types.UUID       `json:"id"`
	IncrementalChangeDescription *ChangeDescription       `json:"incrementalChangeDescription,omitempty"`
	InheritedRoles               *[]EntityReference       `json:"inheritedRoles,omitempty"`
	IsAdmin                      *bool                    `json:"isAdmin,omitempty"`
	IsBot                        *bool                    `json:"isBot,omitempty"`
	IsEmailVerified              *bool                    `json:"isEmailVerified,omitempty"`
	LastLoginTime                *int64                   `json:"lastLoginTime,omitempty"`
	LifeCycle                    *LifeCycle               `json:"lifeCycle,omitempty"`
	Name                         string                   `json:"name"`
	Owners                       *[]EntityReference       `json:"owners,omitempty"`
	Owns                         *[]EntityReference       `json:"owns,omitempty"`
	Personas                     *[]EntityReference       `json:"personas,omitempty"`
	Profile                      *Profile                 `json:"profile,omitempty"`
	Provider                     *UserProvider            `json:"provider,omitempty"`
	Reviewers                    *[]EntityReference       `json:"reviewers,omitempty"`
	Roles                        *[]EntityReference       `json:"roles,omitempty"`
	Service                      *EntityReference         `json:"service,omitempty"`
	Style                        *Style                   `json:"style,omitempty"`
	Tags                         *[]TagLabel              `json:"tags,omitempty"`
	Teams                        *[]EntityReference       `json:"teams,omitempty"`
	Timezone                     *string                  `json:"timezone,omitempty"`
	UpdatedAt                    *int64                   `json:"updatedAt,omitempty"`
	UpdatedBy                    *string                  `json:"updatedBy,omitempty"`
	UsageSummary                 *UsageDetails            `json:"usageSummary,omitempty"`
	Version                      *float64                 `json:"version,omitempty"`
	Votes                        *Votes                   `json:"votes,omitempty"`
}

// UserProvider defines model for User.Provider.
type UserProvider string

// UserList defines model for UserList.
type UserList struct {
	Data   []User         `json:"data"`
	Errors *[]EntityError `json:"errors,omitempty"`
	Paging *Paging        `json:"paging,omitempty"`
}

// VoteRequest defines model for VoteRequest.
type VoteRequest struct {
	UpdatedVoteType *VoteRequestUpdatedVoteType `json:"updatedVoteType,omitempty"`
}

// VoteRequestUpdatedVoteType defines model for VoteRequest.UpdatedVoteType.
type VoteRequestUpdatedVoteType string

// Votes defines model for Votes.
type Votes struct {
	DownVoters *[]EntityReference `json:"downVoters,omitempty"`
	DownVotes  *int32             `json:"downVotes,omitempty"`
	UpVoters   *[]EntityReference `json:"upVoters,omitempty"`
	UpVotes    *int32             `json:"upVotes,omitempty"`
}

// Webhook defines model for Webhook.
type Webhook struct {
	Endpoint        *string            `json:"endpoint,omitempty"`
	Headers         *map[string]string `json:"headers,omitempty"`
	HttpMethod      *WebhookHttpMethod `json:"httpMethod,omitempty"`
	Receivers       *[]string          `json:"receivers,omitempty"`
	SecretKey       *string            `json:"secretKey,omitempty"`
	SendToAdmins    *bool              `json:"sendToAdmins,omitempty"`
	SendToFollowers *bool              `json:"sendToFollowers,omitempty"`
	SendToOwners    *bool              `json:"sendToOwners,omitempty"`
}

// WebhookHttpMethod defines model for Webhook.HttpMethod.
type WebhookHttpMethod string

// WorkflowConfiguration defines model for WorkflowConfiguration.
type WorkflowConfiguration struct {
	StoreStageStatus bool `json:"storeStageStatus"`
}

// WorkflowDefinition defines model for WorkflowDefinition.
type WorkflowDefinition struct {
	Certification                *AssetCertification                `json:"certification,omitempty"`
	ChangeDescription            *ChangeDescription                 `json:"changeDescription,omitempty"`
	Children                     *[]EntityReference                 `json:"children,omitempty"`
	Config                       *WorkflowConfiguration             `json:"config,omitempty"`
	DataProducts                 *[]EntityReference                 `json:"dataProducts,omitempty"`
	Deleted                      *bool                              `json:"deleted,omitempty"`
	Deployed                     *bool                              `json:"deployed,omitempty"`
	Description                  string                             `json:"description"`
	DisplayName                  *string                            `json:"displayName,omitempty"`
	Domain                       *EntityReference                   `json:"domain,omitempty"`
	Edges                        *[]EdgeDefinition                  `json:"edges,omitempty"`
	Experts                      *[]EntityReference                 `json:"experts,omitempty"`
	Extension                    *map[string]interface{}            `json:"extension,omitempty"`
	Followers                    *[]EntityReference                 `json:"followers,omitempty"`
	FullyQualifiedName           *string                            `json:"fullyQualifiedName,omitempty"`
	Href                         *string                            `json:"href,omitempty"`
	Id                           *openapi_types.UUID                `json:"id,omitempty"`
	IncrementalChangeDescription *ChangeDescription                 `json:"incrementalChangeDescription,omitempty"`
	LifeCycle                    *LifeCycle                         `json:"lifeCycle,omitempty"`
	Name                         string                             `json:"name"`
	Nodes                        *[]WorkflowNodeDefinitionInterface `json:"nodes,omitempty"`
	Owners                       *[]EntityReference                 `json:"owners,omitempty"`
	Provider                     *WorkflowDefinitionProvider        `json:"provider,omitempty"`
	Reviewers                    *[]EntityReference                 `json:"reviewers,omitempty"`
	Service                      *EntityReference                   `json:"service,omitempty"`
	Style                        *Style                             `json:"style,omitempty"`
	Tags                         *[]TagLabel                        `json:"tags,omitempty"`
	Trigger                      *WorkflowTriggerInterface          `json:"trigger,omitempty"`
	UpdatedAt                    *int64                             `json:"updatedAt,omitempty"`
	UpdatedBy                    *string                            `json:"updatedBy,omitempty"`
	UsageSummary                 *UsageDetails                      `json:"usageSummary,omitempty"`
	Version                      *float64                           `json:"version,omitempty"`
	Votes                        *Votes                             `json:"votes,omitempty"`
}

// WorkflowDefinitionProvider defines model for WorkflowDefinition.Provider.
type WorkflowDefinitionProvider string

// WorkflowDefinitionList defines model for WorkflowDefinitionList.
type WorkflowDefinitionList struct {
	Data   []WorkflowDefinition `json:"data"`
	Errors *[]EntityError       `json:"errors,omitempty"`
	Paging *Paging              `json:"paging,omitempty"`
}

// WorkflowInstanceResultList defines model for WorkflowInstanceResultList.
type WorkflowInstanceResultList struct {
	Data   []WorkflowInstanceState `json:"data"`
	Errors *[]EntityError          `json:"errors,omitempty"`
	Paging *Paging                 `json:"paging,omitempty"`
}

// WorkflowInstanceState defines model for WorkflowInstanceState.
type WorkflowInstanceState struct {
	Exception                   *string                      `json:"exception,omitempty"`
	Id                          *openapi_types.UUID          `json:"id,omitempty"`
	Stage                       *Stage                       `json:"stage,omitempty"`
	Status                      *WorkflowInstanceStateStatus `json:"status,omitempty"`
	Timestamp                   *int64                       `json:"timestamp,omitempty"`
	WorkflowDefinitionId        *openapi_types.UUID          `json:"workflowDefinitionId,omitempty"`
	WorkflowInstanceExecutionId *openapi_types.UUID          `json:"workflowInstanceExecutionId,omitempty"`
	WorkflowInstanceId          *openapi_types.UUID          `json:"workflowInstanceId,omitempty"`
}

// WorkflowInstanceStateStatus defines model for WorkflowInstanceState.Status.
type WorkflowInstanceStateStatus string

// WorkflowInstanceStateResultList defines model for WorkflowInstanceStateResultList.
type WorkflowInstanceStateResultList struct {
	Data   []WorkflowInstanceState `json:"data"`
	Errors *[]EntityError          `json:"errors,omitempty"`
	Paging *Paging                 `json:"paging,omitempty"`
}

// WorkflowNodeDefinitionInterface defines model for WorkflowNodeDefinitionInterface.
type WorkflowNodeDefinitionInterface struct {
	Config            *map[string]interface{} `json:"config,omitempty"`
	Description       *string                 `json:"description,omitempty"`
	DisplayName       *string                 `json:"displayName,omitempty"`
	Input             *[]string               `json:"input,omitempty"`
	InputNamespaceMap *map[string]interface{} `json:"inputNamespaceMap,omitempty"`
	Name              *string                 `json:"name,omitempty"`
	Output            *[]string               `json:"output,omitempty"`
	SubType           *string                 `json:"subType,omitempty"`
	Type              *string                 `json:"type,omitempty"`
}

// WorkflowTriggerInterface defines model for WorkflowTriggerInterface.
type WorkflowTriggerInterface struct {
	Config *map[string]interface{} `json:"config,omitempty"`
	Output *[]string               `json:"output,omitempty"`
	Type   *string                 `json:"type,omitempty"`
}

// ListAPICollectionsParams defines parameters for ListAPICollections.
type ListAPICollectionsParams struct {
	// Fields Fields requested in the returned resource
	Fields *string `form:"fields,omitempty" json:"fields,omitempty"`

	// Service Filter APICollection by service name
	Service *string `form:"service,omitempty" json:"service,omitempty"`

	// Limit Limit the number APICollections returned. (1 to 1000000, default = 10)
	Limit *int32 `form:"limit,omitempty" json:"limit,omitempty"`

	// Before Returns list of API Collections before this cursor
	Before *string `form:"before,omitempty" json:"before,omitempty"`

	// After Returns list of API Collections after this cursor
	After *string `form:"after,omitempty" json:"after,omitempty"`

	// Include Include all, deleted, or non-deleted entities.
	Include *ListAPICollectionsParamsInclude `form:"include,omitempty" json:"include,omitempty"`
}

// ListAPICollectionsParamsInclude defines parameters for ListAPICollections.
type ListAPICollectionsParamsInclude string

// DeleteAPICollectionAsyncParams defines parameters for DeleteAPICollectionAsync.
type DeleteAPICollectionAsyncParams struct {
	// Recursive Recursively delete this entity and it's children. (default `false`)
	Recursive *bool `form:"recursive,omitempty" json:"recursive,omitempty"`

	// HardDelete Hard delete the entity. (default = `false`)
	HardDelete *bool `form:"hardDelete,omitempty" json:"hardDelete,omitempty"`
}

// DeleteAPICollectionByFQNParams defines parameters for DeleteAPICollectionByFQN.
type DeleteAPICollectionByFQNParams struct {
	// HardDelete Hard delete the entity. (default = `false`)
	HardDelete *bool `form:"hardDelete,omitempty" json:"hardDelete,omitempty"`

	// Recursive Recursively delete this entity and it's children. (default `false`)
	Recursive *bool `form:"recursive,omitempty" json:"recursive,omitempty"`
}

// GetAPICollectionByFQNParams defines parameters for GetAPICollectionByFQN.
type GetAPICollectionByFQNParams struct {
	// Fields Fields requested in the returned resource
	Fields *string `form:"fields,omitempty" json:"fields,omitempty"`

	// Include Include all, deleted, or non-deleted entities.
	Include *GetAPICollectionByFQNParamsInclude `form:"include,omitempty" json:"include,omitempty"`
}

// GetAPICollectionByFQNParamsInclude defines parameters for GetAPICollectionByFQN.
type GetAPICollectionByFQNParamsInclude string

// PatchAPICollectionApplicationJSONPatchPlusJSONBody defines parameters for PatchAPICollection.
type PatchAPICollectionApplicationJSONPatchPlusJSONBody = map[string]interface{}

// DeleteAPICollectionParams defines parameters for DeleteAPICollection.
type DeleteAPICollectionParams struct {
	// Recursive Recursively delete this entity and it's children. (default `false`)
	Recursive *bool `form:"recursive,omitempty" json:"recursive,omitempty"`

	// HardDelete Hard delete the entity. (default = `false`)
	HardDelete *bool `form:"hardDelete,omitempty" json:"hardDelete,omitempty"`
}

// GetAPICollectionByIDParams defines parameters for GetAPICollectionByID.
type GetAPICollectionByIDParams struct {
	// Fields Fields requested in the returned resource
	Fields *string `form:"fields,omitempty" json:"fields,omitempty"`

	// Include Include all, deleted, or non-deleted entities.
	Include *GetAPICollectionByIDParamsInclude `form:"include,omitempty" json:"include,omitempty"`
}

// GetAPICollectionByIDParamsInclude defines parameters for GetAPICollectionByID.
type GetAPICollectionByIDParamsInclude string

// PatchAPICollection1ApplicationJSONPatchPlusJSONBody defines parameters for PatchAPICollection1.
type PatchAPICollection1ApplicationJSONPatchPlusJSONBody = map[string]interface{}

// ListAPIEndpointsParams defines parameters for ListAPIEndpoints.
type ListAPIEndpointsParams struct {
	// Fields Fields requested in the returned resource
	Fields *string `form:"fields,omitempty" json:"fields,omitempty"`

	// Service Filter APIEndpoints by service name
	Service *string `form:"service,omitempty" json:"service,omitempty"`

	// ApiCollection Filter APIEndpoints by apiCollection name
	ApiCollection *string `form:"apiCollection,omitempty" json:"apiCollection,omitempty"`

	// Limit Limit the number APIEndpoints returned. (1 to 1000000, default = 10)
	Limit *int32 `form:"limit,omitempty" json:"limit,omitempty"`

	// Before Returns list of APIEndpoints before this cursor
	Before *string `form:"before,omitempty" json:"before,omitempty"`

	// After Returns list of APIEndpoints after this cursor
	After *string `form:"after,omitempty" json:"after,omitempty"`

	// Include Include all, deleted, or non-deleted entities.
	Include *ListAPIEndpointsParamsInclude `form:"include,omitempty" json:"include,omitempty"`
}

// ListAPIEndpointsParamsInclude defines parameters for ListAPIEndpoints.
type ListAPIEndpointsParamsInclude string

// DeleteAPIEndpointAsyncParams defines parameters for DeleteAPIEndpointAsync.
type DeleteAPIEndpointAsyncParams struct {
	// HardDelete Hard delete the entity. (Default = `false`)
	HardDelete *bool `form:"hardDelete,omitempty" json:"hardDelete,omitempty"`
}

// DeleteAPIEndpointByFQNParams defines parameters for DeleteAPIEndpointByFQN.
type DeleteAPIEndpointByFQNParams struct {
	// HardDelete Hard delete the entity. (Default = `false`)
	HardDelete *bool `form:"hardDelete,omitempty" json:"hardDelete,omitempty"`
}

// GetEndpointByFQNParams defines parameters for GetEndpointByFQN.
type GetEndpointByFQNParams struct {
	// Fields Fields requested in the returned resource
	Fields *string `form:"fields,omitempty" json:"fields,omitempty"`

	// Include Include all, deleted, or non-deleted entities.
	Include *GetEndpointByFQNParamsInclude `form:"include,omitempty" json:"include,omitempty"`
}

// GetEndpointByFQNParamsInclude defines parameters for GetEndpointByFQN.
type GetEndpointByFQNParamsInclude string

// PatchAPIEndpointApplicationJSONPatchPlusJSONBody defines parameters for PatchAPIEndpoint.
type PatchAPIEndpointApplicationJSONPatchPlusJSONBody = map[string]interface{}

// DeleteAPIEndpointParams defines parameters for DeleteAPIEndpoint.
type DeleteAPIEndpointParams struct {
	// HardDelete Hard delete the entity. (Default = `false`)
	HardDelete *bool `form:"hardDelete,omitempty" json:"hardDelete,omitempty"`
}

// GetEndpointByIdParams defines parameters for GetEndpointById.
type GetEndpointByIdParams struct {
	// Fields Fields requested in the returned resource
	Fields *string `form:"fields,omitempty" json:"fields,omitempty"`

	// Include Include all, deleted, or non-deleted entities.
	Include *GetEndpointByIdParamsInclude `form:"include,omitempty" json:"include,omitempty"`
}

// GetEndpointByIdParamsInclude defines parameters for GetEndpointById.
type GetEndpointByIdParamsInclude string

// PatchAPIEndpoint1ApplicationJSONPatchPlusJSONBody defines parameters for PatchAPIEndpoint1.
type PatchAPIEndpoint1ApplicationJSONPatchPlusJSONBody = map[string]interface{}

// AddFollowerJSONBody defines parameters for AddFollower.
type AddFollowerJSONBody = openapi_types.UUID

// ListInstalledApplicationsParams defines parameters for ListInstalledApplications.
type ListInstalledApplicationsParams struct {
	// Fields Fields requested in the returned resource
	Fields *string `form:"fields,omitempty" json:"fields,omitempty"`

	// Limit Limit the number of installed applications returned. (1 to 1000000, default = 10)
	Limit *int32 `form:"limit,omitempty" json:"limit,omitempty"`

	// Before Returns list of tests before this cursor
	Before *string `form:"before,omitempty" json:"before,omitempty"`

	// After Returns list of tests after this cursor
	After *string `form:"after,omitempty" json:"after,omitempty"`

	// AgentType Filter by agent type
	AgentType *string `form:"agentType,omitempty" json:"agentType,omitempty"`

	// Include Include all, deleted, or non-deleted entities.
	Include *ListInstalledApplicationsParamsInclude `form:"include,omitempty" json:"include,omitempty"`
}

// ListInstalledApplicationsParamsInclude defines parameters for ListInstalledApplications.
type ListInstalledApplicationsParamsInclude string

// UninstallAppByNameAsyncParams defines parameters for UninstallAppByNameAsync.
type UninstallAppByNameAsyncParams struct {
	// HardDelete Hard delete the entity. (Default = `false`)
	HardDelete *bool `form:"hardDelete,omitempty" json:"hardDelete,omitempty"`
}

// ListApplicationsParams defines parameters for ListApplications.
type ListApplicationsParams struct {
	// Fields Fields requested in the returned resource
	Fields *string `form:"fields,omitempty" json:"fields,omitempty"`

	// Limit Limit the number of installed applications returned. (1 to 1000000, default = 10)
	Limit *int32 `form:"limit,omitempty" json:"limit,omitempty"`

	// Before Returns list of tests before this cursor
	Before *string `form:"before,omitempty" json:"before,omitempty"`

	// After Returns list of tests after this cursor
	After *string `form:"after,omitempty" json:"after,omitempty"`

	// Include Include all, deleted, or non-deleted entities.
	Include *ListApplicationsParamsInclude `form:"include,omitempty" json:"include,omitempty"`
}

// ListApplicationsParamsInclude defines parameters for ListApplications.
type ListApplicationsParamsInclude string

// DeleteAppAsyncParams defines parameters for DeleteAppAsync.
type DeleteAppAsyncParams struct {
	// HardDelete Hard delete the entity. (Default = `false`)
	HardDelete *bool `form:"hardDelete,omitempty" json:"hardDelete,omitempty"`
}

// PatchApplicationApplicationJSONPatchPlusJSONBody defines parameters for PatchApplication.
type PatchApplicationApplicationJSONPatchPlusJSONBody = map[string]interface{}

// DeleteAppByNameParams defines parameters for DeleteAppByName.
type DeleteAppByNameParams struct {
	// HardDelete Hard delete the entity. (Default = `false`)
	HardDelete *bool `form:"hardDelete,omitempty" json:"hardDelete,omitempty"`
}

// GetAppByNameParams defines parameters for GetAppByName.
type GetAppByNameParams struct {
	// Fields Fields requested in the returned resource
	Fields *string `form:"fields,omitempty" json:"fields,omitempty"`

	// Include Include all, deleted, or non-deleted entities.
	Include *GetAppByNameParamsInclude `form:"include,omitempty" json:"include,omitempty"`
}

// GetAppByNameParamsInclude defines parameters for GetAppByName.
type GetAppByNameParamsInclude string

// DeleteAppParams defines parameters for DeleteApp.
type DeleteAppParams struct {
	// HardDelete Hard delete the entity. (Default = `false`)
	HardDelete *bool `form:"hardDelete,omitempty" json:"hardDelete,omitempty"`
}

// GetParams defines parameters for Get.
type GetParams struct {
	// Fields Fields requested in the returned resource
	Fields *string `form:"fields,omitempty" json:"fields,omitempty"`

	// Include Include all, deleted, or non-deleted entities.
	Include *GetParamsInclude `form:"include,omitempty" json:"include,omitempty"`
}

// GetParamsInclude defines parameters for Get.
type GetParamsInclude string

// PatchApplication1ApplicationJSONPatchPlusJSONBody defines parameters for PatchApplication1.
type PatchApplication1ApplicationJSONPatchPlusJSONBody = map[string]interface{}

// PatchApplication2ApplicationJSONPatchPlusJSONBody defines parameters for PatchApplication2.
type PatchApplication2ApplicationJSONPatchPlusJSONBody = map[string]interface{}

// UninstallAppByNameParams defines parameters for UninstallAppByName.
type UninstallAppByNameParams struct {
	// HardDelete Hard delete the entity. (Default = `false`)
	HardDelete *bool `form:"hardDelete,omitempty" json:"hardDelete,omitempty"`
}

// GetAppByName1Params defines parameters for GetAppByName1.
type GetAppByName1Params struct {
	// Fields Fields requested in the returned resource
	Fields *string `form:"fields,omitempty" json:"fields,omitempty"`

	// Include Include all, deleted, or non-deleted entities.
	Include *GetAppByName1ParamsInclude `form:"include,omitempty" json:"include,omitempty"`
}

// GetAppByName1ParamsInclude defines parameters for GetAppByName1.
type GetAppByName1ParamsInclude string

// ListAppExtensionParams defines parameters for ListAppExtension.
type ListAppExtensionParams struct {
	// Limit Limit records. (1 to 1000000, default = 10)
	Limit *int32 `form:"limit,omitempty" json:"limit,omitempty"`

	// Offset Offset records. (0 to 1000000, default = 0)
	Offset *int32 `form:"offset,omitempty" json:"offset,omitempty"`

	// StartTs Filter pipeline status after the given start timestamp
	StartTs *float32 `form:"startTs,omitempty" json:"startTs,omitempty"`

	// ExtensionType Get the extension type
	ExtensionType *string `form:"extensionType,omitempty" json:"extensionType,omitempty"`

	// ByName List extensions by name instead of id
	ByName *bool `form:"byName,omitempty" json:"byName,omitempty"`
}

// GetLastLogsParams defines parameters for GetLastLogs.
type GetLastLogsParams struct {
	// After Returns log chunk after this cursor
	After *string `form:"after,omitempty" json:"after,omitempty"`
}

// LatestAppRunRecordParams defines parameters for LatestAppRunRecord.
type LatestAppRunRecordParams struct {
	// After Returns log chunk after this cursor
	After *string `form:"after,omitempty" json:"after,omitempty"`
}

// ListAppRunRecordsParams defines parameters for ListAppRunRecords.
type ListAppRunRecordsParams struct {
	// Limit Limit records. (1 to 1000000, default = 10)
	Limit *int32 `form:"limit,omitempty" json:"limit,omitempty"`

	// Offset Offset records. (0 to 1000000, default = 0)
	Offset *int32 `form:"offset,omitempty" json:"offset,omitempty"`

	// StartTs Filter pipeline status after the given start timestamp
	StartTs *float32 `form:"startTs,omitempty" json:"startTs,omitempty"`

	// EndTs Filter pipeline status before the given end timestamp
	EndTs *float32 `form:"endTs,omitempty" json:"endTs,omitempty"`
}

// TriggerApplicationRunJSONBody defines parameters for TriggerApplicationRun.
type TriggerApplicationRunJSONBody map[string]map[string]interface{}

// UninstallAppByName1Params defines parameters for UninstallAppByName1.
type UninstallAppByName1Params struct {
	// HardDelete Hard delete the entity. (Default = `false`)
	HardDelete *bool `form:"hardDelete,omitempty" json:"hardDelete,omitempty"`
}

// Get1Params defines parameters for Get1.
type Get1Params struct {
	// Fields Fields requested in the returned resource
	Fields *string `form:"fields,omitempty" json:"fields,omitempty"`

	// Include Include all, deleted, or non-deleted entities.
	Include *Get1ParamsInclude `form:"include,omitempty" json:"include,omitempty"`
}

// Get1ParamsInclude defines parameters for Get1.
type Get1ParamsInclude string

// PatchApplication3ApplicationJSONPatchPlusJSONBody defines parameters for PatchApplication3.
type PatchApplication3ApplicationJSONPatchPlusJSONBody = map[string]interface{}

// ListBotsParams defines parameters for ListBots.
type ListBotsParams struct {
	Limit *int32 `form:"limit,omitempty" json:"limit,omitempty"`

	// Before Returns list of Bot before this cursor
	Before *string `form:"before,omitempty" json:"before,omitempty"`

	// After Returns list of Bot after this cursor
	After *string `form:"after,omitempty" json:"after,omitempty"`

	// Include Include all, deleted, or non-deleted entities.
	Include *ListBotsParamsInclude `form:"include,omitempty" json:"include,omitempty"`
}

// ListBotsParamsInclude defines parameters for ListBots.
type ListBotsParamsInclude string

// DeleteBotAsyncParams defines parameters for DeleteBotAsync.
type DeleteBotAsyncParams struct {
	// HardDelete Hard delete the entity. (Default = `false`)
	HardDelete *bool `form:"hardDelete,omitempty" json:"hardDelete,omitempty"`
}

// PatchBotApplicationJSONPatchPlusJSONBody defines parameters for PatchBot.
type PatchBotApplicationJSONPatchPlusJSONBody = map[string]interface{}

// DeleteBotByFQNParams defines parameters for DeleteBotByFQN.
type DeleteBotByFQNParams struct {
	// HardDelete Hard delete the entity. (Default = `false`)
	HardDelete *bool `form:"hardDelete,omitempty" json:"hardDelete,omitempty"`
}

// GetBotByFQNParams defines parameters for GetBotByFQN.
type GetBotByFQNParams struct {
	// Include Include all, deleted, or non-deleted entities.
	Include *GetBotByFQNParamsInclude `form:"include,omitempty" json:"include,omitempty"`
}

// GetBotByFQNParamsInclude defines parameters for GetBotByFQN.
type GetBotByFQNParamsInclude string

// DeleteBotParams defines parameters for DeleteBot.
type DeleteBotParams struct {
	// HardDelete Hard delete the entity. (Default = `false`)
	HardDelete *bool `form:"hardDelete,omitempty" json:"hardDelete,omitempty"`
}

// GetBotByIDParams defines parameters for GetBotByID.
type GetBotByIDParams struct {
	Include *GetBotByIDParamsInclude `form:"include,omitempty" json:"include,omitempty"`
}

// GetBotByIDParamsInclude defines parameters for GetBotByID.
type GetBotByIDParamsInclude string

// PatchBot1ApplicationJSONPatchPlusJSONBody defines parameters for PatchBot1.
type PatchBot1ApplicationJSONPatchPlusJSONBody = map[string]interface{}

// ListChartsParams defines parameters for ListCharts.
type ListChartsParams struct {
	// Fields Fields requested in the returned resource
	Fields *string `form:"fields,omitempty" json:"fields,omitempty"`

	// Service Filter charts by service name
	Service *string `form:"service,omitempty" json:"service,omitempty"`

	// Limit Limit the number charts returned. (1 to 1000000, default = 10)
	Limit *int32 `form:"limit,omitempty" json:"limit,omitempty"`

	// Before Returns list of charts before this cursor
	Before *string `form:"before,omitempty" json:"before,omitempty"`

	// After Returns list of charts after this cursor
	After *string `form:"after,omitempty" json:"after,omitempty"`

	// Include Include all, deleted, or non-deleted entities.
	Include *ListChartsParamsInclude `form:"include,omitempty" json:"include,omitempty"`
}

// ListChartsParamsInclude defines parameters for ListCharts.
type ListChartsParamsInclude string

// DeleteChartAsyncParams defines parameters for DeleteChartAsync.
type DeleteChartAsyncParams struct {
	// HardDelete Hard delete the entity. (Default = `false`)
	HardDelete *bool `form:"hardDelete,omitempty" json:"hardDelete,omitempty"`
}

// DeleteChartByFQNParams defines parameters for DeleteChartByFQN.
type DeleteChartByFQNParams struct {
	// HardDelete Hard delete the entity. (Default = `false`)
	HardDelete *bool `form:"hardDelete,omitempty" json:"hardDelete,omitempty"`
}

// GetChartByFQNParams defines parameters for GetChartByFQN.
type GetChartByFQNParams struct {
	// Fields Fields requested in the returned resource
	Fields *string `form:"fields,omitempty" json:"fields,omitempty"`

	// Include Include all, deleted, or non-deleted entities.
	Include *GetChartByFQNParamsInclude `form:"include,omitempty" json:"include,omitempty"`
}

// GetChartByFQNParamsInclude defines parameters for GetChartByFQN.
type GetChartByFQNParamsInclude string

// PatchChartApplicationJSONPatchPlusJSONBody defines parameters for PatchChart.
type PatchChartApplicationJSONPatchPlusJSONBody = map[string]interface{}

// DeleteChartParams defines parameters for DeleteChart.
type DeleteChartParams struct {
	// HardDelete Hard delete the entity. (Default = `false`)
	HardDelete *bool `form:"hardDelete,omitempty" json:"hardDelete,omitempty"`
}

// GetChartByIDParams defines parameters for GetChartByID.
type GetChartByIDParams struct {
	// Fields Fields requested in the returned resource
	Fields *string `form:"fields,omitempty" json:"fields,omitempty"`

	// Include Include all, deleted, or non-deleted entities.
	Include *GetChartByIDParamsInclude `form:"include,omitempty" json:"include,omitempty"`
}

// GetChartByIDParamsInclude defines parameters for GetChartByID.
type GetChartByIDParamsInclude string

// PatchChart1ApplicationJSONPatchPlusJSONBody defines parameters for PatchChart1.
type PatchChart1ApplicationJSONPatchPlusJSONBody = map[string]interface{}

// AddFollowerToChartJSONBody defines parameters for AddFollowerToChart.
type AddFollowerToChartJSONBody = openapi_types.UUID

// ListClassificationsParams defines parameters for ListClassifications.
type ListClassificationsParams struct {
	// Fields Fields requested in the returned resource
	Fields *string `form:"fields,omitempty" json:"fields,omitempty"`

	// Disabled Filter Disabled Classifications
	Disabled *string `form:"disabled,omitempty" json:"disabled,omitempty"`

	// Limit Limit the number classifications returned. (1 to 1000000, default = 10)
	Limit *int32 `form:"limit,omitempty" json:"limit,omitempty"`

	// Before Returns list of classifications before this cursor
	Before *string `form:"before,omitempty" json:"before,omitempty"`

	// After Returns list of classifications after this cursor
	After *string `form:"after,omitempty" json:"after,omitempty"`

	// Include Include all, deleted, or non-deleted entities.
	Include *ListClassificationsParamsInclude `form:"include,omitempty" json:"include,omitempty"`
}

// ListClassificationsParamsInclude defines parameters for ListClassifications.
type ListClassificationsParamsInclude string

// DeleteClassificationAsyncParams defines parameters for DeleteClassificationAsync.
type DeleteClassificationAsyncParams struct {
	// Recursive Recursively delete this entity and it's children. (Default `false`)
	Recursive *bool `form:"recursive,omitempty" json:"recursive,omitempty"`

	// HardDelete Hard delete the entity. (Default = `false`)
	HardDelete *bool `form:"hardDelete,omitempty" json:"hardDelete,omitempty"`
}

// PatchClassificationApplicationJSONPatchPlusJSONBody defines parameters for PatchClassification.
type PatchClassificationApplicationJSONPatchPlusJSONBody = map[string]interface{}

// DeleteClassificationByNameParams defines parameters for DeleteClassificationByName.
type DeleteClassificationByNameParams struct {
	// HardDelete Hard delete the entity. (Default = `false`)
	HardDelete *bool `form:"hardDelete,omitempty" json:"hardDelete,omitempty"`
}

// GetClassificationByNameParams defines parameters for GetClassificationByName.
type GetClassificationByNameParams struct {
	// Fields Fields requested in the returned resource
	Fields *string `form:"fields,omitempty" json:"fields,omitempty"`

	// Include Include all, deleted, or non-deleted entities.
	Include *GetClassificationByNameParamsInclude `form:"include,omitempty" json:"include,omitempty"`
}

// GetClassificationByNameParamsInclude defines parameters for GetClassificationByName.
type GetClassificationByNameParamsInclude string

// DeleteClassificationParams defines parameters for DeleteClassification.
type DeleteClassificationParams struct {
	// Recursive Recursively delete this entity and it's children. (Default `false`)
	Recursive *bool `form:"recursive,omitempty" json:"recursive,omitempty"`

	// HardDelete Hard delete the entity. (Default = `false`)
	HardDelete *bool `form:"hardDelete,omitempty" json:"hardDelete,omitempty"`
}

// GetClassificationByIDParams defines parameters for GetClassificationByID.
type GetClassificationByIDParams struct {
	// Fields Fields requested in the returned resource
	Fields *string `form:"fields,omitempty" json:"fields,omitempty"`

	// Include Include all, deleted, or non-deleted entities.
	Include *GetClassificationByIDParamsInclude `form:"include,omitempty" json:"include,omitempty"`
}

// GetClassificationByIDParamsInclude defines parameters for GetClassificationByID.
type GetClassificationByIDParamsInclude string

// PatchClassification1ApplicationJSONPatchPlusJSONBody defines parameters for PatchClassification1.
type PatchClassification1ApplicationJSONPatchPlusJSONBody = map[string]interface{}

// ListContainersParams defines parameters for ListContainers.
type ListContainersParams struct {
	// Fields Fields requested in the returned resource
	Fields *string `form:"fields,omitempty" json:"fields,omitempty"`

	// Service Filter Containers by Object Store Service name
	Service *string `form:"service,omitempty" json:"service,omitempty"`

	// Root Filter by Containers at the root level. E.g., without parent
	Root *bool `form:"root,omitempty" json:"root,omitempty"`

	// Limit Limit the number containers returned. (1 to 1000000, default = 10)
	Limit *int32 `form:"limit,omitempty" json:"limit,omitempty"`

	// Before Returns list of containers before this cursor
	Before *string `form:"before,omitempty" json:"before,omitempty"`

	// After Returns list of containers after this cursor
	After *string `form:"after,omitempty" json:"after,omitempty"`

	// Include Include all, deleted, or non-deleted entities.
	Include *ListContainersParamsInclude `form:"include,omitempty" json:"include,omitempty"`
}

// ListContainersParamsInclude defines parameters for ListContainers.
type ListContainersParamsInclude string

// DeleteContainerAsyncParams defines parameters for DeleteContainerAsync.
type DeleteContainerAsyncParams struct {
	// HardDelete Hard delete the entity. (Default = `false`)
	HardDelete *bool `form:"hardDelete,omitempty" json:"hardDelete,omitempty"`

	// Recursive Recursively delete this entity and it's children. (Default `false`)
	Recursive *bool `form:"recursive,omitempty" json:"recursive,omitempty"`
}

// DeleteContainerByFQNParams defines parameters for DeleteContainerByFQN.
type DeleteContainerByFQNParams struct {
	// HardDelete Hard delete the entity. (Default = `false`)
	HardDelete *bool `form:"hardDelete,omitempty" json:"hardDelete,omitempty"`
}

// GetContainerByFQNParams defines parameters for GetContainerByFQN.
type GetContainerByFQNParams struct {
	// Fields Fields requested in the returned resource
	Fields *string `form:"fields,omitempty" json:"fields,omitempty"`

	// Include Include all, deleted, or non-deleted entities.
	Include *GetContainerByFQNParamsInclude `form:"include,omitempty" json:"include,omitempty"`
}

// GetContainerByFQNParamsInclude defines parameters for GetContainerByFQN.
type GetContainerByFQNParamsInclude string

// PatchContainerApplicationJSONPatchPlusJSONBody defines parameters for PatchContainer.
type PatchContainerApplicationJSONPatchPlusJSONBody = map[string]interface{}

// ListContainerChildrenParams defines parameters for ListContainerChildren.
type ListContainerChildrenParams struct {
	// Limit Limit the number of children returned. (1 to 1000000, default = 10)
	Limit *int32 `form:"limit,omitempty" json:"limit,omitempty"`

	// Offset Returns list of children after the given offset
	Offset *int32 `form:"offset,omitempty" json:"offset,omitempty"`
}

// DeleteContainerParams defines parameters for DeleteContainer.
type DeleteContainerParams struct {
	// HardDelete Hard delete the entity. (Default = `false`)
	HardDelete *bool `form:"hardDelete,omitempty" json:"hardDelete,omitempty"`

	// Recursive Recursively delete this entity and it's children. (Default `false`)
	Recursive *bool `form:"recursive,omitempty" json:"recursive,omitempty"`
}

// GetContainerByIDParams defines parameters for GetContainerByID.
type GetContainerByIDParams struct {
	// Fields Fields requested in the returned resource
	Fields *string `form:"fields,omitempty" json:"fields,omitempty"`

	// Include Include all, deleted, or non-deleted entities.
	Include *GetContainerByIDParamsInclude `form:"include,omitempty" json:"include,omitempty"`
}

// GetContainerByIDParamsInclude defines parameters for GetContainerByID.
type GetContainerByIDParamsInclude string

// PatchContainer1ApplicationJSONPatchPlusJSONBody defines parameters for PatchContainer1.
type PatchContainer1ApplicationJSONPatchPlusJSONBody = map[string]interface{}

// AddFollower7JSONBody defines parameters for AddFollower7.
type AddFollower7JSONBody = openapi_types.UUID

// ListDashboardDataModelsParams defines parameters for ListDashboardDataModels.
type ListDashboardDataModelsParams struct {
	// Fields Fields requested in the returned resource
	Fields *string `form:"fields,omitempty" json:"fields,omitempty"`

	// Service Filter dashboardDataModel by service name
	Service *string `form:"service,omitempty" json:"service,omitempty"`

	// Limit Limit the number dashboardDataModel returned. (1 to 1000000, default = 10)
	Limit *int32 `form:"limit,omitempty" json:"limit,omitempty"`

	// Before Returns list of dashboardDataModel before this cursor
	Before *string `form:"before,omitempty" json:"before,omitempty"`

	// After Returns list of dashboardDataModel after this cursor
	After *string `form:"after,omitempty" json:"after,omitempty"`

	// Include Include all, deleted, or non-deleted entities.
	Include *ListDashboardDataModelsParamsInclude `form:"include,omitempty" json:"include,omitempty"`
}

// ListDashboardDataModelsParamsInclude defines parameters for ListDashboardDataModels.
type ListDashboardDataModelsParamsInclude string

// DeleteDataModelAsyncParams defines parameters for DeleteDataModelAsync.
type DeleteDataModelAsyncParams struct {
	// HardDelete Hard delete the entity. (Default = `false`)
	HardDelete *bool `form:"hardDelete,omitempty" json:"hardDelete,omitempty"`

	// Recursive Recursively delete this entity and it's children. (Default `false`)
	Recursive *bool `form:"recursive,omitempty" json:"recursive,omitempty"`
}

// DeleteDataModelByFQNParams defines parameters for DeleteDataModelByFQN.
type DeleteDataModelByFQNParams struct {
	// HardDelete Hard delete the entity. (Default = `false`)
	HardDelete *bool `form:"hardDelete,omitempty" json:"hardDelete,omitempty"`

	// Recursive Recursively delete this entity and it's children. (Default `false`)
	Recursive *bool `form:"recursive,omitempty" json:"recursive,omitempty"`
}

// GetDataModelByFQNParams defines parameters for GetDataModelByFQN.
type GetDataModelByFQNParams struct {
	// Fields Fields requested in the returned resource
	Fields *string `form:"fields,omitempty" json:"fields,omitempty"`

	// Include Include all, deleted, or non-deleted entities.
	Include *GetDataModelByFQNParamsInclude `form:"include,omitempty" json:"include,omitempty"`
}

// GetDataModelByFQNParamsInclude defines parameters for GetDataModelByFQN.
type GetDataModelByFQNParamsInclude string

// PatchDataModelApplicationJSONPatchPlusJSONBody defines parameters for PatchDataModel.
type PatchDataModelApplicationJSONPatchPlusJSONBody = map[string]interface{}

// DeleteDataModelParams defines parameters for DeleteDataModel.
type DeleteDataModelParams struct {
	// HardDelete Hard delete the entity. (Default = `false`)
	HardDelete *bool `form:"hardDelete,omitempty" json:"hardDelete,omitempty"`

	// Recursive Recursively delete this entity and it's children. (Default `false`)
	Recursive *bool `form:"recursive,omitempty" json:"recursive,omitempty"`
}

// GetDataModelByIDParams defines parameters for GetDataModelByID.
type GetDataModelByIDParams struct {
	// Fields Fields requested in the returned resource
	Fields *string `form:"fields,omitempty" json:"fields,omitempty"`

	// Include Include all, deleted, or non-deleted entities.
	Include *GetDataModelByIDParamsInclude `form:"include,omitempty" json:"include,omitempty"`
}

// GetDataModelByIDParamsInclude defines parameters for GetDataModelByID.
type GetDataModelByIDParamsInclude string

// PatchDataModel1ApplicationJSONPatchPlusJSONBody defines parameters for PatchDataModel1.
type PatchDataModel1ApplicationJSONPatchPlusJSONBody = map[string]interface{}

// AddFollowerToDataModelJSONBody defines parameters for AddFollowerToDataModel.
type AddFollowerToDataModelJSONBody = openapi_types.UUID

// ListDashboardsParams defines parameters for ListDashboards.
type ListDashboardsParams struct {
	// Fields Fields requested in the returned resource
	Fields *string `form:"fields,omitempty" json:"fields,omitempty"`

	// Service Filter dashboards by service name
	Service *string `form:"service,omitempty" json:"service,omitempty"`

	// Limit Limit the number dashboards returned. (1 to 1000000, default = 10)
	Limit *int32 `form:"limit,omitempty" json:"limit,omitempty"`

	// Before Returns list of dashboards before this cursor
	Before *string `form:"before,omitempty" json:"before,omitempty"`

	// After Returns list of dashboards after this cursor
	After *string `form:"after,omitempty" json:"after,omitempty"`

	// Include Include all, deleted, or non-deleted entities.
	Include *ListDashboardsParamsInclude `form:"include,omitempty" json:"include,omitempty"`
}

// ListDashboardsParamsInclude defines parameters for ListDashboards.
type ListDashboardsParamsInclude string

// DeleteDashboardAsyncParams defines parameters for DeleteDashboardAsync.
type DeleteDashboardAsyncParams struct {
	// HardDelete Hard delete the entity. (Default = `false`)
	HardDelete *bool `form:"hardDelete,omitempty" json:"hardDelete,omitempty"`
}

// DeleteDashboardByFQNParams defines parameters for DeleteDashboardByFQN.
type DeleteDashboardByFQNParams struct {
	// HardDelete Hard delete the entity. (Default = `false`)
	HardDelete *bool `form:"hardDelete,omitempty" json:"hardDelete,omitempty"`

	// Recursive Recursively delete this entity and it's children. (Default `false`)
	Recursive *bool `form:"recursive,omitempty" json:"recursive,omitempty"`
}

// GetDashboardByFQNParams defines parameters for GetDashboardByFQN.
type GetDashboardByFQNParams struct {
	// Fields Fields requested in the returned resource
	Fields *string `form:"fields,omitempty" json:"fields,omitempty"`

	// Include Include all, deleted, or non-deleted entities.
	Include *GetDashboardByFQNParamsInclude `form:"include,omitempty" json:"include,omitempty"`
}

// GetDashboardByFQNParamsInclude defines parameters for GetDashboardByFQN.
type GetDashboardByFQNParamsInclude string

// PatchDashboardApplicationJSONPatchPlusJSONBody defines parameters for PatchDashboard.
type PatchDashboardApplicationJSONPatchPlusJSONBody = map[string]interface{}

// DeleteDashboardParams defines parameters for DeleteDashboard.
type DeleteDashboardParams struct {
	// HardDelete Hard delete the entity. (Default = `false`)
	HardDelete *bool `form:"hardDelete,omitempty" json:"hardDelete,omitempty"`
}

// GetDashboardByIDParams defines parameters for GetDashboardByID.
type GetDashboardByIDParams struct {
	// Fields Fields requested in the returned resource
	Fields *string `form:"fields,omitempty" json:"fields,omitempty"`

	// Include Include all, deleted, or non-deleted entities.
	Include *GetDashboardByIDParamsInclude `form:"include,omitempty" json:"include,omitempty"`
}

// GetDashboardByIDParamsInclude defines parameters for GetDashboardByID.
type GetDashboardByIDParamsInclude string

// PatchDashboard1ApplicationJSONPatchPlusJSONBody defines parameters for PatchDashboard1.
type PatchDashboard1ApplicationJSONPatchPlusJSONBody = map[string]interface{}

// AddFollowerToDashboardJSONBody defines parameters for AddFollowerToDashboard.
type AddFollowerToDashboardJSONBody = openapi_types.UUID

// ListDataProductsParams defines parameters for ListDataProducts.
type ListDataProductsParams struct {
	// Fields Fields requested in the returned resource
	Fields *string `form:"fields,omitempty" json:"fields,omitempty"`

	// Domain Filter data products by domain name
	Domain *string `form:"domain,omitempty" json:"domain,omitempty"`
	Limit  *int32  `form:"limit,omitempty" json:"limit,omitempty"`

	// Before Returns list of DataProduct before this cursor
	Before *string `form:"before,omitempty" json:"before,omitempty"`

	// After Returns list of DataProduct after this cursor
	After *string `form:"after,omitempty" json:"after,omitempty"`
}

// PatchDataProductApplicationJSONPatchPlusJSONBody defines parameters for PatchDataProduct.
type PatchDataProductApplicationJSONPatchPlusJSONBody = map[string]interface{}

// GetDataProductByFQNParams defines parameters for GetDataProductByFQN.
type GetDataProductByFQNParams struct {
	// Fields Fields requested in the returned resource
	Fields *string `form:"fields,omitempty" json:"fields,omitempty"`
}

// GetDataProductByIDParams defines parameters for GetDataProductByID.
type GetDataProductByIDParams struct {
	// Fields Fields requested in the returned resource
	Fields *string `form:"fields,omitempty" json:"fields,omitempty"`
}

// PatchDataProduct1ApplicationJSONPatchPlusJSONBody defines parameters for PatchDataProduct1.
type PatchDataProduct1ApplicationJSONPatchPlusJSONBody = map[string]interface{}

// ListTestCasesParams defines parameters for ListTestCases.
type ListTestCasesParams struct {
	// Fields Fields requested in the returned resource
	Fields *string `form:"fields,omitempty" json:"fields,omitempty"`

	// Limit Limit the number tests returned. (1 to 1000000, default = 10)
	Limit *int32 `form:"limit,omitempty" json:"limit,omitempty"`

	// Before Returns list of tests before this cursor
	Before *string `form:"before,omitempty" json:"before,omitempty"`

	// After Returns list of tests after this cursor
	After *string `form:"after,omitempty" json:"after,omitempty"`

	// EntityLink Return list of tests by entity link
	EntityLink *string `form:"entityLink,omitempty" json:"entityLink,omitempty"`

	// EntityFQN Return list of tests by entity FQN
	EntityFQN *string `form:"entityFQN,omitempty" json:"entityFQN,omitempty"`

	// TestSuiteId Returns list of tests filtered by the testSuite id
	TestSuiteId *string `form:"testSuiteId,omitempty" json:"testSuiteId,omitempty"`

	// IncludeAllTests Include all the tests at the entity level
	IncludeAllTests *bool `form:"includeAllTests,omitempty" json:"includeAllTests,omitempty"`

	// Include Include all, deleted, or non-deleted entities.
	Include *ListTestCasesParamsInclude `form:"include,omitempty" json:"include,omitempty"`

	// TestCaseStatus Filter test case by status
	TestCaseStatus *ListTestCasesParamsTestCaseStatus `form:"testCaseStatus,omitempty" json:"testCaseStatus,omitempty"`

	// TestCaseType Filter for test case type (e.g. column, table, all
	TestCaseType *ListTestCasesParamsTestCaseType `form:"testCaseType,omitempty" json:"testCaseType,omitempty"`
}

// ListTestCasesParamsInclude defines parameters for ListTestCases.
type ListTestCasesParamsInclude string

// ListTestCasesParamsTestCaseStatus defines parameters for ListTestCases.
type ListTestCasesParamsTestCaseStatus string

// ListTestCasesParamsTestCaseType defines parameters for ListTestCases.
type ListTestCasesParamsTestCaseType string

// DeleteTestCaseAsyncParams defines parameters for DeleteTestCaseAsync.
type DeleteTestCaseAsyncParams struct {
	// HardDelete Hard delete the entity. (Default = `false`)
	HardDelete *bool `form:"hardDelete,omitempty" json:"hardDelete,omitempty"`

	// Recursive Recursively delete this entity and it's children. (Default `false`)
	Recursive *bool `form:"recursive,omitempty" json:"recursive,omitempty"`
}

// CreateManyTestCaseJSONBody defines parameters for CreateManyTestCase.
type CreateManyTestCaseJSONBody = []CreateTestCase

// DeleteTestCaseByNameParams defines parameters for DeleteTestCaseByName.
type DeleteTestCaseByNameParams struct {
	// HardDelete Hard delete the entity. (Default = `false`)
	HardDelete *bool `form:"hardDelete,omitempty" json:"hardDelete,omitempty"`

	// Recursive Recursively delete this entity and it's children. (Default `false`)
	Recursive *bool `form:"recursive,omitempty" json:"recursive,omitempty"`
}

// GetTestCaseByNameParams defines parameters for GetTestCaseByName.
type GetTestCaseByNameParams struct {
	// Fields Fields requested in the returned resource
	Fields *string `form:"fields,omitempty" json:"fields,omitempty"`

	// Include Include all, deleted, or non-deleted entities.
	Include *GetTestCaseByNameParamsInclude `form:"include,omitempty" json:"include,omitempty"`
}

// GetTestCaseByNameParamsInclude defines parameters for GetTestCaseByName.
type GetTestCaseByNameParamsInclude string

// ListTestCasesFromSearchServiceParams defines parameters for ListTestCasesFromSearchService.
type ListTestCasesFromSearchServiceParams struct {
	// Fields Fields requested in the returned resource
	Fields *string `form:"fields,omitempty" json:"fields,omitempty"`

	// Limit Limit the number tests returned. (1 to 1000000, default = 10)
	Limit *int32 `form:"limit,omitempty" json:"limit,omitempty"`

	// Offset Returns list of tests after this offset
	Offset *string `form:"offset,omitempty" json:"offset,omitempty"`

	// EntityLink Return list of tests by entity link
	EntityLink *string `form:"entityLink,omitempty" json:"entityLink,omitempty"`

	// TestSuiteId Returns list of tests filtered by a testSuite id
	TestSuiteId *string `form:"testSuiteId,omitempty" json:"testSuiteId,omitempty"`

	// IncludeAllTests Include all the tests at the entity level
	IncludeAllTests *bool `form:"includeAllTests,omitempty" json:"includeAllTests,omitempty"`

	// Include Include all, deleted, or non-deleted entities.
	Include *ListTestCasesFromSearchServiceParamsInclude `form:"include,omitempty" json:"include,omitempty"`

	// TestCaseStatus Filter test case by status
	TestCaseStatus *ListTestCasesFromSearchServiceParamsTestCaseStatus `form:"testCaseStatus,omitempty" json:"testCaseStatus,omitempty"`

	// TestCaseType Filter for test case type (e.g. column, table, all)
	TestCaseType *ListTestCasesFromSearchServiceParamsTestCaseType `form:"testCaseType,omitempty" json:"testCaseType,omitempty"`

	// TestPlatforms Filter for test case by source (e.g. OpenMetadata, dbt, etc.)
	TestPlatforms *string `form:"testPlatforms,omitempty" json:"testPlatforms,omitempty"`

	// DataQualityDimension Filter for test case by data quality dimension (e.g. OpenMetadata, dbt, etc.)
	DataQualityDimension *string `form:"dataQualityDimension,omitempty" json:"dataQualityDimension,omitempty"`

	// StartTimestamp Parameter used to filter (inclusive) the test cases by the last execution timestamp (in milliseconds). Must be used in conjunction with `endTimestamp`
	StartTimestamp *int64 `form:"startTimestamp,omitempty" json:"startTimestamp,omitempty"`

	// EndTimestamp Parameter used to filter (inclusive) the test cases by the last execution timestamp (in milliseconds). Must be used in conjunction with `startTimestamp`
	EndTimestamp *int64 `form:"endTimestamp,omitempty" json:"endTimestamp,omitempty"`

	// SortField Field used to sort the test cases listing
	SortField *string `form:"sortField,omitempty" json:"sortField,omitempty"`

	// SortNestedPath Set this field if your mapping is nested and you want to sort on a nested field
	SortNestedPath *string `form:"sortNestedPath,omitempty" json:"sortNestedPath,omitempty"`

	// SortNestedMode Set this field if your mapping is nested and you want to sort on a nested field
	SortNestedMode *string `form:"sortNestedMode,omitempty" json:"sortNestedMode,omitempty"`

	// SortType Sort type
	SortType *ListTestCasesFromSearchServiceParamsSortType `form:"sortType,omitempty" json:"sortType,omitempty"`

	// IncludeFields Return only required fields in the response
	IncludeFields *string `form:"includeFields,omitempty" json:"includeFields,omitempty"`

	// Domain domain filter to use in list
	Domain *string `form:"domain,omitempty" json:"domain,omitempty"`

	// Owner owner filter to use in list
	Owner *string `form:"owner,omitempty" json:"owner,omitempty"`

	// Tags tags filter to use in list
	Tags *string `form:"tags,omitempty" json:"tags,omitempty"`

	// Tier tier filter to use in list
	Tier *string `form:"tier,omitempty" json:"tier,omitempty"`

	// ServiceName service filter to use in list
	ServiceName *string `form:"serviceName,omitempty" json:"serviceName,omitempty"`

	// Q search query term to use in list
	Q *string `form:"q,omitempty" json:"q,omitempty"`

	// QueryString raw elasticsearch query to use in list
	QueryString *string `form:"queryString,omitempty" json:"queryString,omitempty"`
}

// ListTestCasesFromSearchServiceParamsInclude defines parameters for ListTestCasesFromSearchService.
type ListTestCasesFromSearchServiceParamsInclude string

// ListTestCasesFromSearchServiceParamsTestCaseStatus defines parameters for ListTestCasesFromSearchService.
type ListTestCasesFromSearchServiceParamsTestCaseStatus string

// ListTestCasesFromSearchServiceParamsTestCaseType defines parameters for ListTestCasesFromSearchService.
type ListTestCasesFromSearchServiceParamsTestCaseType string

// ListTestCasesFromSearchServiceParamsSortType defines parameters for ListTestCasesFromSearchService.
type ListTestCasesFromSearchServiceParamsSortType string

// GetTestCaseResolutionStatusParams defines parameters for GetTestCaseResolutionStatus.
type GetTestCaseResolutionStatusParams struct {
	// TestCaseId Test Case ID
	TestCaseId *openapi_types.UUID `form:"testCaseId,omitempty" json:"testCaseId,omitempty"`

	// Limit Limit the number tests returned. (1 to 1000000, default = 10)
	Limit *int32 `form:"limit,omitempty" json:"limit,omitempty"`

	// Offset Returns list of tests at the offset
	Offset *string `form:"offset,omitempty" json:"offset,omitempty"`

	// StartTs Filter test case statuses after the given start timestamp
	StartTs *float32 `form:"startTs,omitempty" json:"startTs,omitempty"`

	// EndTs Filter test case statuses before the given end timestamp
	EndTs *float32 `form:"endTs,omitempty" json:"endTs,omitempty"`

	// TestCaseResolutionStatusType Filter test case statuses by status
	TestCaseResolutionStatusType *GetTestCaseResolutionStatusParamsTestCaseResolutionStatusType `form:"testCaseResolutionStatusType,omitempty" json:"testCaseResolutionStatusType,omitempty"`

	// Latest Only list the latest statuses
	Latest *bool `form:"latest,omitempty" json:"latest,omitempty"`

	// Assignee Filter test case statuses by assignee
	Assignee *string `form:"assignee,omitempty" json:"assignee,omitempty"`

	// TestCaseFQN Test case fully qualified name
	TestCaseFQN *string `form:"testCaseFQN,omitempty" json:"testCaseFQN,omitempty"`

	// OriginEntityFQN Origin entity for which the incident was opened for
	OriginEntityFQN *string `form:"originEntityFQN,omitempty" json:"originEntityFQN,omitempty"`
}

// GetTestCaseResolutionStatusParamsTestCaseResolutionStatusType defines parameters for GetTestCaseResolutionStatus.
type GetTestCaseResolutionStatusParamsTestCaseResolutionStatusType string

// UpdateTestCaseResolutionStatusApplicationJSONPatchPlusJSONBody defines parameters for UpdateTestCaseResolutionStatus.
type UpdateTestCaseResolutionStatusApplicationJSONPatchPlusJSONBody = map[string]interface{}

// LatestTestCaseResultsFromSearchServiceParams defines parameters for LatestTestCaseResultsFromSearchService.
type LatestTestCaseResultsFromSearchServiceParams struct {
	// Fields Fields requested in the returned resource
	Fields *string `form:"fields,omitempty" json:"fields,omitempty"`

	// TestCaseStatus Status of the test case -- one of Success, Failed, Aborted, Queued
	TestCaseStatus *LatestTestCaseResultsFromSearchServiceParamsTestCaseStatus `form:"testCaseStatus,omitempty" json:"testCaseStatus,omitempty"`

	// TestCaseFQN FullyQualifiedName of the test case
	TestCaseFQN *string `form:"testCaseFQN,omitempty" json:"testCaseFQN,omitempty"`

	// TestSuiteId FullyQualifiedName of the test case
	TestSuiteId *string `form:"testSuiteId,omitempty" json:"testSuiteId,omitempty"`

	// Q search query term to use in list
	Q *string `form:"q,omitempty" json:"q,omitempty"`
}

// LatestTestCaseResultsFromSearchServiceParamsTestCaseStatus defines parameters for LatestTestCaseResultsFromSearchService.
type LatestTestCaseResultsFromSearchServiceParamsTestCaseStatus string

// ListTestCaseResultsFromSearchServiceParams defines parameters for ListTestCaseResultsFromSearchService.
type ListTestCaseResultsFromSearchServiceParams struct {
	// Fields Fields requested in the returned resource
	Fields *string `form:"fields,omitempty" json:"fields,omitempty"`

	// Limit Limit the number tests case results returned. (1 to 1000000, default = 10)
	Limit *int32 `form:"limit,omitempty" json:"limit,omitempty"`

	// Offset Returns list of tests after this offset
	Offset *string `form:"offset,omitempty" json:"offset,omitempty"`

	// StartTimestamp Start timestamp to list test case from
	StartTimestamp *float32 `form:"startTimestamp,omitempty" json:"startTimestamp,omitempty"`

	// EndTimestamp End timestamp to list test case from
	EndTimestamp *float32 `form:"endTimestamp,omitempty" json:"endTimestamp,omitempty"`

	// TestCaseStatus Status of the test case -- one of Success, Failed, Aborted, Queued
	TestCaseStatus *ListTestCaseResultsFromSearchServiceParamsTestCaseStatus `form:"testCaseStatus,omitempty" json:"testCaseStatus,omitempty"`

	// TestCaseFQN FullyQualifiedName of the test case
	TestCaseFQN *string `form:"testCaseFQN,omitempty" json:"testCaseFQN,omitempty"`

	// TestSuiteId Test Suite Id the test case belongs to
	TestSuiteId *string `form:"testSuiteId,omitempty" json:"testSuiteId,omitempty"`

	// EntityFQN Entity FQN the test case belongs to
	EntityFQN *string `form:"entityFQN,omitempty" json:"entityFQN,omitempty"`

	// Latest Get the latest test case result for each test case -- requires `testSuiteId`. Offset and limit are ignored
	Latest *ListTestCaseResultsFromSearchServiceParamsLatest `form:"latest,omitempty" json:"latest,omitempty"`

	// TestCaseType Filter for test case result by type (e.g. column, table, all)
	TestCaseType *ListTestCaseResultsFromSearchServiceParamsTestCaseType `form:"testCaseType,omitempty" json:"testCaseType,omitempty"`

	// DataQualityDimension Filter for test case by data quality dimension (e.g. OpenMetadata, dbt, etc.)
	DataQualityDimension *ListTestCaseResultsFromSearchServiceParamsDataQualityDimension `form:"dataQualityDimension,omitempty" json:"dataQualityDimension,omitempty"`

	// Q search query term to use in list
	Q *string `form:"q,omitempty" json:"q,omitempty"`

	// QueryString raw elasticsearch query to use in list
	QueryString *string `form:"queryString,omitempty" json:"queryString,omitempty"`
}

// ListTestCaseResultsFromSearchServiceParamsTestCaseStatus defines parameters for ListTestCaseResultsFromSearchService.
type ListTestCaseResultsFromSearchServiceParamsTestCaseStatus string

// ListTestCaseResultsFromSearchServiceParamsLatest defines parameters for ListTestCaseResultsFromSearchService.
type ListTestCaseResultsFromSearchServiceParamsLatest bool

// ListTestCaseResultsFromSearchServiceParamsTestCaseType defines parameters for ListTestCaseResultsFromSearchService.
type ListTestCaseResultsFromSearchServiceParamsTestCaseType string

// ListTestCaseResultsFromSearchServiceParamsDataQualityDimension defines parameters for ListTestCaseResultsFromSearchService.
type ListTestCaseResultsFromSearchServiceParamsDataQualityDimension string

// ListTestCaseResults1Params defines parameters for ListTestCaseResults1.
type ListTestCaseResults1Params struct {
	// StartTs Filter testCase results after the given start timestamp
	StartTs *float32 `form:"startTs,omitempty" json:"startTs,omitempty"`

	// EndTs Filter testCase results before the given end timestamp
	EndTs *float32 `form:"endTs,omitempty" json:"endTs,omitempty"`
}

// PatchTestCaseResult1ApplicationJSONPatchPlusJSONBody defines parameters for PatchTestCaseResult1.
type PatchTestCaseResult1ApplicationJSONPatchPlusJSONBody = map[string]interface{}

// ListTestCaseResultsParams defines parameters for ListTestCaseResults.
type ListTestCaseResultsParams struct {
	// StartTs Filter testCase results after the given start timestamp
	StartTs *float32 `form:"startTs,omitempty" json:"startTs,omitempty"`

	// EndTs Filter testCase results before the given end timestamp
	EndTs *float32 `form:"endTs,omitempty" json:"endTs,omitempty"`
}

// PatchTestCaseResultApplicationJSONPatchPlusJSONBody defines parameters for PatchTestCaseResult.
type PatchTestCaseResultApplicationJSONPatchPlusJSONBody = map[string]interface{}

// DeleteTestCaseParams defines parameters for DeleteTestCase.
type DeleteTestCaseParams struct {
	// HardDelete Hard delete the entity. (Default = `false`)
	HardDelete *bool `form:"hardDelete,omitempty" json:"hardDelete,omitempty"`

	// Recursive Recursively delete this entity and it's children. (Default `false`)
	Recursive *bool `form:"recursive,omitempty" json:"recursive,omitempty"`
}

// Get3Params defines parameters for Get3.
type Get3Params struct {
	// Fields Fields requested in the returned resource
	Fields *string `form:"fields,omitempty" json:"fields,omitempty"`

	// Include Include all, deleted, or non-deleted entities.
	Include *Get3ParamsInclude `form:"include,omitempty" json:"include,omitempty"`
}

// Get3ParamsInclude defines parameters for Get3.
type Get3ParamsInclude string

// PatchTestApplicationJSONPatchPlusJSONBody defines parameters for PatchTest.
type PatchTestApplicationJSONPatchPlusJSONBody = map[string]interface{}

// AddFailedRowsSampleParams defines parameters for AddFailedRowsSample.
type AddFailedRowsSampleParams struct {
	Validate *bool `form:"validate,omitempty" json:"validate,omitempty"`
}

// AddInspectionQueryJSONBody defines parameters for AddInspectionQuery.
type AddInspectionQueryJSONBody = string

// ListTestDefinitionsParams defines parameters for ListTestDefinitions.
type ListTestDefinitionsParams struct {
	// Fields Fields requested in the returned resource
	Fields *string `form:"fields,omitempty" json:"fields,omitempty"`

	// Limit Limit the number test definitions returned. (1 to 1000000, default = 10)
	Limit *int32 `form:"limit,omitempty" json:"limit,omitempty"`

	// Before Returns list of test definitions before this cursor
	Before *string `form:"before,omitempty" json:"before,omitempty"`

	// After Returns list of test definitions after this cursor
	After *string `form:"after,omitempty" json:"after,omitempty"`

	// Include Include all, deleted, or non-deleted entities.
	Include *ListTestDefinitionsParamsInclude `form:"include,omitempty" json:"include,omitempty"`

	// EntityType Filter by entityType.
	EntityType *ListTestDefinitionsParamsEntityType `form:"entityType,omitempty" json:"entityType,omitempty"`

	// TestPlatform Filter by a test platform
	TestPlatform *ListTestDefinitionsParamsTestPlatform `form:"testPlatform,omitempty" json:"testPlatform,omitempty"`

	// SupportedDataType Filter tests definition by supported data type
	SupportedDataType *ListTestDefinitionsParamsSupportedDataType `form:"supportedDataType,omitempty" json:"supportedDataType,omitempty"`
}

// ListTestDefinitionsParamsInclude defines parameters for ListTestDefinitions.
type ListTestDefinitionsParamsInclude string

// ListTestDefinitionsParamsEntityType defines parameters for ListTestDefinitions.
type ListTestDefinitionsParamsEntityType string

// ListTestDefinitionsParamsTestPlatform defines parameters for ListTestDefinitions.
type ListTestDefinitionsParamsTestPlatform string

// ListTestDefinitionsParamsSupportedDataType defines parameters for ListTestDefinitions.
type ListTestDefinitionsParamsSupportedDataType string

// DeleteTestDefinitionAsyncParams defines parameters for DeleteTestDefinitionAsync.
type DeleteTestDefinitionAsyncParams struct {
	// HardDelete Hard delete the entity. (Default = `false`)
	HardDelete *bool `form:"hardDelete,omitempty" json:"hardDelete,omitempty"`

	// Recursive Recursively delete this entity and it's children. (Default `false`)
	Recursive *bool `form:"recursive,omitempty" json:"recursive,omitempty"`
}

// DeleteTestDefinitionByNameParams defines parameters for DeleteTestDefinitionByName.
type DeleteTestDefinitionByNameParams struct {
	// HardDelete Hard delete the entity. (Default = `false`)
	HardDelete *bool `form:"hardDelete,omitempty" json:"hardDelete,omitempty"`

	// Recursive Recursively delete this entity and it's children. (Default `false`)
	Recursive *bool `form:"recursive,omitempty" json:"recursive,omitempty"`
}

// GetTestDefinitionByNameParams defines parameters for GetTestDefinitionByName.
type GetTestDefinitionByNameParams struct {
	// Fields Fields requested in the returned resource
	Fields *string `form:"fields,omitempty" json:"fields,omitempty"`

	// Include Include all, deleted, or non-deleted entities.
	Include *GetTestDefinitionByNameParamsInclude `form:"include,omitempty" json:"include,omitempty"`
}

// GetTestDefinitionByNameParamsInclude defines parameters for GetTestDefinitionByName.
type GetTestDefinitionByNameParamsInclude string

// DeleteTestDefinitionParams defines parameters for DeleteTestDefinition.
type DeleteTestDefinitionParams struct {
	// HardDelete Hard delete the entity. (Default = `false`)
	HardDelete *bool `form:"hardDelete,omitempty" json:"hardDelete,omitempty"`

	// Recursive Recursively delete this entity and it's children. (Default `false`)
	Recursive *bool `form:"recursive,omitempty" json:"recursive,omitempty"`
}

// Get4Params defines parameters for Get4.
type Get4Params struct {
	// Fields Fields requested in the returned resource
	Fields *string `form:"fields,omitempty" json:"fields,omitempty"`

	// Include Include all, deleted, or non-deleted entities.
	Include *Get4ParamsInclude `form:"include,omitempty" json:"include,omitempty"`
}

// Get4ParamsInclude defines parameters for Get4.
type Get4ParamsInclude string

// PatchTestDefinitionApplicationJSONPatchPlusJSONBody defines parameters for PatchTestDefinition.
type PatchTestDefinitionApplicationJSONPatchPlusJSONBody = map[string]interface{}

// ListTestSuitesParams defines parameters for ListTestSuites.
type ListTestSuitesParams struct {
	// Fields Fields requested in the returned resource
	Fields *string `form:"fields,omitempty" json:"fields,omitempty"`

	// Limit Limit the number test definitions returned. (1 to 1000000, default = 10)
	Limit *int32 `form:"limit,omitempty" json:"limit,omitempty"`

	// TestSuiteType Returns executable or logical test suites. If omitted, returns all test suites.
	TestSuiteType *string `form:"testSuiteType,omitempty" json:"testSuiteType,omitempty"`

	// IncludeEmptyTestSuites Include empty test suite in the response.
	IncludeEmptyTestSuites *bool `form:"includeEmptyTestSuites,omitempty" json:"includeEmptyTestSuites,omitempty"`

	// Before Returns list of test definitions before this cursor
	Before *string `form:"before,omitempty" json:"before,omitempty"`

	// After Returns list of test definitions after this cursor
	After *string `form:"after,omitempty" json:"after,omitempty"`

	// Include Include all, deleted, or non-deleted entities.
	Include *ListTestSuitesParamsInclude `form:"include,omitempty" json:"include,omitempty"`
}

// ListTestSuitesParamsInclude defines parameters for ListTestSuites.
type ListTestSuitesParamsInclude string

// DeleteLogicalTestSuiteAsyncParams defines parameters for DeleteLogicalTestSuiteAsync.
type DeleteLogicalTestSuiteAsyncParams struct {
	// HardDelete Hard delete the logical entity. (Default = `false`)
	HardDelete *bool `form:"hardDelete,omitempty" json:"hardDelete,omitempty"`
}

// DeleteTestSuiteByNameParams defines parameters for DeleteTestSuiteByName.
type DeleteTestSuiteByNameParams struct {
	// Recursive Recursively delete this entity and it's children. (Default `false`)
	Recursive *bool `form:"recursive,omitempty" json:"recursive,omitempty"`

	// HardDelete Hard delete the entity. (Default = `false`)
	HardDelete *bool `form:"hardDelete,omitempty" json:"hardDelete,omitempty"`
}

// DeleteTestSuiteParams defines parameters for DeleteTestSuite.
type DeleteTestSuiteParams struct {
	// Recursive Recursively delete this entity and it's children. (Default `false`)
	Recursive *bool `form:"recursive,omitempty" json:"recursive,omitempty"`

	// HardDelete Hard delete the entity. (Default = `false`)
	HardDelete *bool `form:"hardDelete,omitempty" json:"hardDelete,omitempty"`
}

// GetDataQualityReportParams defines parameters for GetDataQualityReport.
type GetDataQualityReportParams struct {
	// Q Search query to filter the aggregation results
	Q *string `form:"q,omitempty" json:"q,omitempty"`

	// AggregationQuery Aggregation query to perform aggregation on the search results
	AggregationQuery *string `form:"aggregationQuery,omitempty" json:"aggregationQuery,omitempty"`

	// Index Index to perform the aggregation against
	Index *string `form:"index,omitempty" json:"index,omitempty"`
}

// DeleteTestSuiteByName1Params defines parameters for DeleteTestSuiteByName1.
type DeleteTestSuiteByName1Params struct {
	// Recursive Recursively delete this entity and it's children. (Default `false`)
	Recursive *bool `form:"recursive,omitempty" json:"recursive,omitempty"`

	// HardDelete Hard delete the entity. (Default = `false`)
	HardDelete *bool `form:"hardDelete,omitempty" json:"hardDelete,omitempty"`
}

// DeleteTestSuite1Params defines parameters for DeleteTestSuite1.
type DeleteTestSuite1Params struct {
	// Recursive Recursively delete this entity and it's children. (Default `false`)
	Recursive *bool `form:"recursive,omitempty" json:"recursive,omitempty"`

	// HardDelete Hard delete the entity. (Default = `false`)
	HardDelete *bool `form:"hardDelete,omitempty" json:"hardDelete,omitempty"`
}

// GetExecutionSummaryOfTestSuitesParams defines parameters for GetExecutionSummaryOfTestSuites.
type GetExecutionSummaryOfTestSuitesParams struct {
	// TestSuiteId get summary for a specific test suite
	TestSuiteId *openapi_types.UUID `form:"testSuiteId,omitempty" json:"testSuiteId,omitempty"`
}

// DeleteLogicalTestSuiteParams defines parameters for DeleteLogicalTestSuite.
type DeleteLogicalTestSuiteParams struct {
	// HardDelete Hard delete the logical entity. (Default = `false`)
	HardDelete *bool `form:"hardDelete,omitempty" json:"hardDelete,omitempty"`
}

// GetTestSuiteByNameParams defines parameters for GetTestSuiteByName.
type GetTestSuiteByNameParams struct {
	// Fields Fields requested in the returned resource
	Fields *string `form:"fields,omitempty" json:"fields,omitempty"`

	// Include Include all, deleted, or non-deleted entities.
	Include *GetTestSuiteByNameParamsInclude `form:"include,omitempty" json:"include,omitempty"`
}

// GetTestSuiteByNameParamsInclude defines parameters for GetTestSuiteByName.
type GetTestSuiteByNameParamsInclude string

// ListTestSuiteFromSearchServiceParams defines parameters for ListTestSuiteFromSearchService.
type ListTestSuiteFromSearchServiceParams struct {
	// Fields Fields requested in the returned resource
	Fields *string `form:"fields,omitempty" json:"fields,omitempty"`

	// Limit Limit the number test suite returned. (1 to 1000000, default = 10)
	Limit *int32 `form:"limit,omitempty" json:"limit,omitempty"`

	// Offset Returns list of test suite after this offset (default = 0)
	Offset *string `form:"offset,omitempty" json:"offset,omitempty"`

	// TestSuiteType Returns executable or logical test suites. If omitted, returns all test suites.
	TestSuiteType *string `form:"testSuiteType,omitempty" json:"testSuiteType,omitempty"`

	// IncludeEmptyTestSuites Include empty test suite in the response.
	IncludeEmptyTestSuites *bool `form:"includeEmptyTestSuites,omitempty" json:"includeEmptyTestSuites,omitempty"`

	// Domain Filter a test suite by domain.
	Domain *string `form:"domain,omitempty" json:"domain,omitempty"`

	// FullyQualifiedName Filter a test suite by fully qualified name.
	FullyQualifiedName *string `form:"fullyQualifiedName,omitempty" json:"fullyQualifiedName,omitempty"`

	// Owner Filter test suites by owner.
	Owner *string `form:"owner,omitempty" json:"owner,omitempty"`

	// Include Include all, deleted, or non-deleted entities.
	Include *ListTestSuiteFromSearchServiceParamsInclude `form:"include,omitempty" json:"include,omitempty"`

	// SortField Field used to sort the test cases listing
	SortField *string `form:"sortField,omitempty" json:"sortField,omitempty"`

	// SortNestedPath Set this field if your mapping is nested and you want to sort on a nested field
	SortNestedPath *string `form:"sortNestedPath,omitempty" json:"sortNestedPath,omitempty"`

	// SortNestedMode Set this field if your mapping is nested and you want to sort on a nested field
	SortNestedMode *string `form:"sortNestedMode,omitempty" json:"sortNestedMode,omitempty"`

	// SortType Sort type
	SortType *ListTestSuiteFromSearchServiceParamsSortType `form:"sortType,omitempty" json:"sortType,omitempty"`

	// Q search query term to use in list
	Q *string `form:"q,omitempty" json:"q,omitempty"`

	// QueryString raw elasticsearch query to use in list
	QueryString *string `form:"queryString,omitempty" json:"queryString,omitempty"`
}

// ListTestSuiteFromSearchServiceParamsInclude defines parameters for ListTestSuiteFromSearchService.
type ListTestSuiteFromSearchServiceParamsInclude string

// ListTestSuiteFromSearchServiceParamsSortType defines parameters for ListTestSuiteFromSearchService.
type ListTestSuiteFromSearchServiceParamsSortType string

// DeleteLogicalTestSuite1Params defines parameters for DeleteLogicalTestSuite1.
type DeleteLogicalTestSuite1Params struct {
	// HardDelete Hard delete the logical entity. (Default = `false`)
	HardDelete *bool `form:"hardDelete,omitempty" json:"hardDelete,omitempty"`
}

// Get5Params defines parameters for Get5.
type Get5Params struct {
	// Fields Fields requested in the returned resource
	Fields *string `form:"fields,omitempty" json:"fields,omitempty"`

	// Include Include all, deleted, or non-deleted entities.
	Include *Get5ParamsInclude `form:"include,omitempty" json:"include,omitempty"`
}

// Get5ParamsInclude defines parameters for Get5.
type Get5ParamsInclude string

// PatchTestSuiteApplicationJSONPatchPlusJSONBody defines parameters for PatchTestSuite.
type PatchTestSuiteApplicationJSONPatchPlusJSONBody = map[string]interface{}

// ListDBSchemasParams defines parameters for ListDBSchemas.
type ListDBSchemasParams struct {
	// Fields Fields requested in the returned resource
	Fields *string `form:"fields,omitempty" json:"fields,omitempty"`

	// Database Filter schemas by database name
	Database *string `form:"database,omitempty" json:"database,omitempty"`

	// Limit Limit the number schemas returned. (1 to 1000000, default = 10)
	Limit *int32 `form:"limit,omitempty" json:"limit,omitempty"`

	// Before Returns list of schemas before this cursor
	Before *string `form:"before,omitempty" json:"before,omitempty"`

	// After Returns list of schemas after this cursor
	After *string `form:"after,omitempty" json:"after,omitempty"`

	// Include Include all, deleted, or non-deleted entities.
	Include *ListDBSchemasParamsInclude `form:"include,omitempty" json:"include,omitempty"`
}

// ListDBSchemasParamsInclude defines parameters for ListDBSchemas.
type ListDBSchemasParamsInclude string

// DeleteDBSchemaAsyncParams defines parameters for DeleteDBSchemaAsync.
type DeleteDBSchemaAsyncParams struct {
	// Recursive Recursively delete this entity and it's children. (Default `false`)
	Recursive *bool `form:"recursive,omitempty" json:"recursive,omitempty"`

	// HardDelete Hard delete the entity. (Default = `false`)
	HardDelete *bool `form:"hardDelete,omitempty" json:"hardDelete,omitempty"`
}

// SearchSchemaEntityRelationshipParams defines parameters for SearchSchemaEntityRelationship.
type SearchSchemaEntityRelationshipParams struct {
	// Fqn fqn
	Fqn *string `form:"fqn,omitempty" json:"fqn,omitempty"`

	// UpstreamDepth upstreamDepth
	UpstreamDepth *int32 `form:"upstreamDepth,omitempty" json:"upstreamDepth,omitempty"`

	// DownstreamDepth downstreamDepth
	DownstreamDepth *int32 `form:"downstreamDepth,omitempty" json:"downstreamDepth,omitempty"`

	// QueryFilter Elasticsearch query that will be combined with the query_string query generator from the `query` argument
	QueryFilter *string `form:"query_filter,omitempty" json:"query_filter,omitempty"`

	// IncludeDeleted Filter documents by deleted param. By default deleted is false
	IncludeDeleted *bool `form:"includeDeleted,omitempty" json:"includeDeleted,omitempty"`
}

// DeleteDBSchemaByFQNParams defines parameters for DeleteDBSchemaByFQN.
type DeleteDBSchemaByFQNParams struct {
	// HardDelete Hard delete the entity. (Default = `false`)
	HardDelete *bool `form:"hardDelete,omitempty" json:"hardDelete,omitempty"`

	// Recursive Recursively delete this entity and it's children. (Default `false`)
	Recursive *bool `form:"recursive,omitempty" json:"recursive,omitempty"`
}

// GetDBSchemaByFQNParams defines parameters for GetDBSchemaByFQN.
type GetDBSchemaByFQNParams struct {
	// Fields Fields requested in the returned resource
	Fields *string `form:"fields,omitempty" json:"fields,omitempty"`

	// Include Include all, deleted, or non-deleted entities.
	Include *GetDBSchemaByFQNParamsInclude `form:"include,omitempty" json:"include,omitempty"`
}

// GetDBSchemaByFQNParamsInclude defines parameters for GetDBSchemaByFQN.
type GetDBSchemaByFQNParamsInclude string

// PatchDBSchemaApplicationJSONPatchPlusJSONBody defines parameters for PatchDBSchema.
type PatchDBSchemaApplicationJSONPatchPlusJSONBody = map[string]interface{}

// ExportDatabaseSchemaParams defines parameters for ExportDatabaseSchema.
type ExportDatabaseSchemaParams struct {
	// Recursive If true, export will include child entities (schemas, tables, columns)
	Recursive *bool `form:"recursive,omitempty" json:"recursive,omitempty"`
}

// ExportDatabaseSchema1Params defines parameters for ExportDatabaseSchema1.
type ExportDatabaseSchema1Params struct {
	// Recursive If true, export will include child entities (schemas, tables, columns)
	Recursive *bool `form:"recursive,omitempty" json:"recursive,omitempty"`
}

// ImportDatabaseSchemaParams defines parameters for ImportDatabaseSchema.
type ImportDatabaseSchemaParams struct {
	// DryRun Dry-run when true is used for validating the CSV without really importing it. (default=true)
	DryRun *bool `form:"dryRun,omitempty" json:"dryRun,omitempty"`

	// Recursive If true, recursive import
	Recursive *bool `form:"recursive,omitempty" json:"recursive,omitempty"`
}

// ImportDatabaseSchemaAsyncParams defines parameters for ImportDatabaseSchemaAsync.
type ImportDatabaseSchemaAsyncParams struct {
	// DryRun Dry-run when true is used for validating the CSV without really importing it. (default=true)
	DryRun *bool `form:"dryRun,omitempty" json:"dryRun,omitempty"`

	// Recursive If true, recursive import
	Recursive *bool `form:"recursive,omitempty" json:"recursive,omitempty"`
}

// DeleteDBSchemaParams defines parameters for DeleteDBSchema.
type DeleteDBSchemaParams struct {
	// Recursive Recursively delete this entity and it's children. (Default `false`)
	Recursive *bool `form:"recursive,omitempty" json:"recursive,omitempty"`

	// HardDelete Hard delete the entity. (Default = `false`)
	HardDelete *bool `form:"hardDelete,omitempty" json:"hardDelete,omitempty"`
}

// GetDBSchemaByIDParams defines parameters for GetDBSchemaByID.
type GetDBSchemaByIDParams struct {
	// Fields Fields requested in the returned resource
	Fields *string `form:"fields,omitempty" json:"fields,omitempty"`

	// Include Include all, deleted, or non-deleted entities.
	Include *GetDBSchemaByIDParamsInclude `form:"include,omitempty" json:"include,omitempty"`
}

// GetDBSchemaByIDParamsInclude defines parameters for GetDBSchemaByID.
type GetDBSchemaByIDParamsInclude string

// PatchDBSchema1ApplicationJSONPatchPlusJSONBody defines parameters for PatchDBSchema1.
type PatchDBSchema1ApplicationJSONPatchPlusJSONBody = map[string]interface{}

// ListDatabasesParams defines parameters for ListDatabases.
type ListDatabasesParams struct {
	// Fields Fields requested in the returned resource
	Fields *string `form:"fields,omitempty" json:"fields,omitempty"`

	// Service Filter databases by service name
	Service *string `form:"service,omitempty" json:"service,omitempty"`

	// Limit Limit the number tables returned. (1 to 1000000, default = 10)
	Limit *int32 `form:"limit,omitempty" json:"limit,omitempty"`

	// Before Returns list of tables before this cursor
	Before *string `form:"before,omitempty" json:"before,omitempty"`

	// After Returns list of tables after this cursor
	After *string `form:"after,omitempty" json:"after,omitempty"`

	// Include Include all, deleted, or non-deleted entities.
	Include *ListDatabasesParamsInclude `form:"include,omitempty" json:"include,omitempty"`
}

// ListDatabasesParamsInclude defines parameters for ListDatabases.
type ListDatabasesParamsInclude string

// DeleteDatabaseAsyncParams defines parameters for DeleteDatabaseAsync.
type DeleteDatabaseAsyncParams struct {
	// Recursive Recursively delete this entity and it's children. (Default `false`)
	Recursive *bool `form:"recursive,omitempty" json:"recursive,omitempty"`

	// HardDelete Hard delete the entity. (Default = `false`)
	HardDelete *bool `form:"hardDelete,omitempty" json:"hardDelete,omitempty"`
}

// DeleteDatabaseByFQNParams defines parameters for DeleteDatabaseByFQN.
type DeleteDatabaseByFQNParams struct {
	// HardDelete Hard delete the entity. (Default = `false`)
	HardDelete *bool `form:"hardDelete,omitempty" json:"hardDelete,omitempty"`

	// Recursive Recursively delete this entity and it's children. (Default `false`)
	Recursive *bool `form:"recursive,omitempty" json:"recursive,omitempty"`
}

// GetDatabaseByFQNParams defines parameters for GetDatabaseByFQN.
type GetDatabaseByFQNParams struct {
	// Fields Fields requested in the returned resource
	Fields *string `form:"fields,omitempty" json:"fields,omitempty"`

	// Include Include all, deleted, or non-deleted entities.
	Include *GetDatabaseByFQNParamsInclude `form:"include,omitempty" json:"include,omitempty"`
}

// GetDatabaseByFQNParamsInclude defines parameters for GetDatabaseByFQN.
type GetDatabaseByFQNParamsInclude string

// PatchDatabaseApplicationJSONPatchPlusJSONBody defines parameters for PatchDatabase.
type PatchDatabaseApplicationJSONPatchPlusJSONBody = map[string]interface{}

// ExportDatabaseParams defines parameters for ExportDatabase.
type ExportDatabaseParams struct {
	// Recursive If true, export will include child entities (schemas, tables, columns)
	Recursive *bool `form:"recursive,omitempty" json:"recursive,omitempty"`
}

// ExportDatabase1Params defines parameters for ExportDatabase1.
type ExportDatabase1Params struct {
	// Recursive If true, export will include child entities (schemas, tables, columns)
	Recursive *bool `form:"recursive,omitempty" json:"recursive,omitempty"`
}

// ImportDatabaseParams defines parameters for ImportDatabase.
type ImportDatabaseParams struct {
	// DryRun Dry-run when true is used for validating the CSV without really importing it. (default=true)
	DryRun *bool `form:"dryRun,omitempty" json:"dryRun,omitempty"`

	// Recursive If true, resursive import
	Recursive *bool `form:"recursive,omitempty" json:"recursive,omitempty"`
}

// ImportDatabaseAsyncParams defines parameters for ImportDatabaseAsync.
type ImportDatabaseAsyncParams struct {
	// DryRun Dry-run when true is used for validating the CSV without really importing it. (default=true)
	DryRun *bool `form:"dryRun,omitempty" json:"dryRun,omitempty"`

	// Recursive If true, recursive import
	Recursive *bool `form:"recursive,omitempty" json:"recursive,omitempty"`
}

// DeleteDatabaseParams defines parameters for DeleteDatabase.
type DeleteDatabaseParams struct {
	// Recursive Recursively delete this entity and it's children. (Default `false`)
	Recursive *bool `form:"recursive,omitempty" json:"recursive,omitempty"`

	// HardDelete Hard delete the entity. (Default = `false`)
	HardDelete *bool `form:"hardDelete,omitempty" json:"hardDelete,omitempty"`
}

// GetDatabaseByIDParams defines parameters for GetDatabaseByID.
type GetDatabaseByIDParams struct {
	// Fields Fields requested in the returned resource
	Fields *string `form:"fields,omitempty" json:"fields,omitempty"`

	// Include Include all, deleted, or non-deleted entities.
	Include *GetDatabaseByIDParamsInclude `form:"include,omitempty" json:"include,omitempty"`
}

// GetDatabaseByIDParamsInclude defines parameters for GetDatabaseByID.
type GetDatabaseByIDParamsInclude string

// PatchDatabase1ApplicationJSONPatchPlusJSONBody defines parameters for PatchDatabase1.
type PatchDatabase1ApplicationJSONPatchPlusJSONBody = map[string]interface{}

// ListDocumentsParams defines parameters for ListDocuments.
type ListDocumentsParams struct {
	// Limit Limit the number of personas returned. (1 to 1000000, default = 10)
	Limit *int32 `form:"limit,omitempty" json:"limit,omitempty"`

	// EntityType Filter docs by entityType
	EntityType *string `form:"entityType,omitempty" json:"entityType,omitempty"`

	// FqnPrefix Filter docs by fqnPrefix
	FqnPrefix *string `form:"fqnPrefix,omitempty" json:"fqnPrefix,omitempty"`

	// Before Returns list of personas before this cursor
	Before *string `form:"before,omitempty" json:"before,omitempty"`

	// After Returns list of personas after this cursor
	After *string `form:"after,omitempty" json:"after,omitempty"`
}

// PatchDocumentApplicationJSONPatchPlusJSONBody defines parameters for PatchDocument.
type PatchDocumentApplicationJSONPatchPlusJSONBody = map[string]interface{}

// GetDocumentByFQNParams defines parameters for GetDocumentByFQN.
type GetDocumentByFQNParams struct {
	// Include Include all, deleted, or non-deleted entities.
	Include *GetDocumentByFQNParamsInclude `form:"include,omitempty" json:"include,omitempty"`
}

// GetDocumentByFQNParamsInclude defines parameters for GetDocumentByFQN.
type GetDocumentByFQNParamsInclude string

// Get2Params defines parameters for Get2.
type Get2Params struct {
	// Include Include all, deleted, or non-deleted entities.
	Include *Get2ParamsInclude `form:"include,omitempty" json:"include,omitempty"`
}

// Get2ParamsInclude defines parameters for Get2.
type Get2ParamsInclude string

// PatchDocument1ApplicationJSONPatchPlusJSONBody defines parameters for PatchDocument1.
type PatchDocument1ApplicationJSONPatchPlusJSONBody = map[string]interface{}

// ListDomainsParams defines parameters for ListDomains.
type ListDomainsParams struct {
	// Fields Fields requested in the returned resource
	Fields *string `form:"fields,omitempty" json:"fields,omitempty"`
	Limit  *int32  `form:"limit,omitempty" json:"limit,omitempty"`

	// Before Returns list of Domain before this cursor
	Before *string `form:"before,omitempty" json:"before,omitempty"`

	// After Returns list of Domain after this cursor
	After *string `form:"after,omitempty" json:"after,omitempty"`
}

// ListDomainsHierarchyParams defines parameters for ListDomainsHierarchy.
type ListDomainsHierarchyParams struct {
	// Fields Fields requested in the returned resource
	Fields *string `form:"fields,omitempty" json:"fields,omitempty"`
	Limit  *int32  `form:"limit,omitempty" json:"limit,omitempty"`
}

// PatchDomainApplicationJSONPatchPlusJSONBody defines parameters for PatchDomain.
type PatchDomainApplicationJSONPatchPlusJSONBody = map[string]interface{}

// GetDomainByFQNParams defines parameters for GetDomainByFQN.
type GetDomainByFQNParams struct {
	// Fields Fields requested in the returned resource
	Fields *string `form:"fields,omitempty" json:"fields,omitempty"`
}

// GetDomainByIDParams defines parameters for GetDomainByID.
type GetDomainByIDParams struct {
	// Fields Fields requested in the returned resource
	Fields *string `form:"fields,omitempty" json:"fields,omitempty"`
}

// PatchDomain1ApplicationJSONPatchPlusJSONBody defines parameters for PatchDomain1.
type PatchDomain1ApplicationJSONPatchPlusJSONBody = map[string]interface{}

// ListChangeEventsParams defines parameters for ListChangeEvents.
type ListChangeEventsParams struct {
	// EntityCreated List of comma separated entities requested for `entityCreated` event. When set to `*` all entities will be returned
	EntityCreated *string `form:"entityCreated,omitempty" json:"entityCreated,omitempty"`

	// EntityUpdated List of comma separated entities requested for `entityUpdated` event. When set to `*` all entities will be returned
	EntityUpdated *string `form:"entityUpdated,omitempty" json:"entityUpdated,omitempty"`

	// EntityRestored List of comma separated entities requested for `entityRestored` event. When set to `*` all entities will be returned
	EntityRestored *string `form:"entityRestored,omitempty" json:"entityRestored,omitempty"`

	// EntityDeleted List of comma separated entities requested for `entityCreated` event. When set to `*` all entities will be returned
	EntityDeleted *string `form:"entityDeleted,omitempty" json:"entityDeleted,omitempty"`

	// Timestamp Events starting from this unix timestamp in milliseconds
	Timestamp int64 `form:"timestamp" json:"timestamp"`
}

// ListEventSubscriptionsParams defines parameters for ListEventSubscriptions.
type ListEventSubscriptionsParams struct {
	// Fields Fields requested in the returned resource
	Fields *string `form:"fields,omitempty" json:"fields,omitempty"`

	// Limit Limit the number event subscriptions returned. (1 to 1000000, default = 10)
	Limit *int32 `form:"limit,omitempty" json:"limit,omitempty"`

	// AlertType alertType filter. Notification / Observability
	AlertType *string `form:"alertType,omitempty" json:"alertType,omitempty"`

	// Before Returns list of event subscriptions before this cursor
	Before *string `form:"before,omitempty" json:"before,omitempty"`

	// After Returns list of event subscriptions after this cursor
	After *string `form:"after,omitempty" json:"after,omitempty"`
}

// GetFailedEventsBySubscriptionIdParams defines parameters for GetFailedEventsBySubscriptionId.
type GetFailedEventsBySubscriptionIdParams struct {
	// Limit Maximum number of failed events to retrieve
	Limit *int64 `form:"limit,omitempty" json:"limit,omitempty"`

	// PaginationOffset Offset for pagination (starting point for records)
	PaginationOffset *int64 `form:"paginationOffset,omitempty" json:"paginationOffset,omitempty"`

	// Source Source of the failed events
	Source *string `form:"source,omitempty" json:"source,omitempty"`
}

// GetEventsParams defines parameters for GetEvents.
type GetEventsParams struct {
	// Status Status of events to retrieve (failed, successful)
	Status *GetEventsParamsStatus `form:"status,omitempty" json:"status,omitempty"`

	// Limit Maximum number of events to retrieve
	Limit *int64 `form:"limit,omitempty" json:"limit,omitempty"`

	// PaginationOffset Offset for pagination (starting point for records)
	PaginationOffset *int64 `form:"paginationOffset,omitempty" json:"paginationOffset,omitempty"`
}

// GetEventsParamsStatus defines parameters for GetEvents.
type GetEventsParamsStatus string

// GetSuccessfullySentChangeEventsForAlertParams defines parameters for GetSuccessfullySentChangeEventsForAlert.
type GetSuccessfullySentChangeEventsForAlertParams struct {
	// Limit Maximum number of change events to retrieve
	Limit *int64 `form:"limit,omitempty" json:"limit,omitempty"`

	// PaginationOffset Offset for pagination (starting point for records)
	PaginationOffset *int64 `form:"paginationOffset,omitempty" json:"paginationOffset,omitempty"`
}

// GetEventSubscriptionDiagnosticInfoByIdParams defines parameters for GetEventSubscriptionDiagnosticInfoById.
type GetEventSubscriptionDiagnosticInfoByIdParams struct {
	// Limit Maximum number of unprocessed events returned
	Limit *int32 `form:"limit,omitempty" json:"limit,omitempty"`

	// PaginationOffset Offset for pagination (starting point for records)
	PaginationOffset *int64 `form:"paginationOffset,omitempty" json:"paginationOffset,omitempty"`

	// ListCountOnly Return only count if true
	ListCountOnly *bool `form:"listCountOnly,omitempty" json:"listCountOnly,omitempty"`
}

// GetAllFailedEventsParams defines parameters for GetAllFailedEvents.
type GetAllFailedEventsParams struct {
	// Limit Maximum number of failed events to retrieve
	Limit *int64 `form:"limit,omitempty" json:"limit,omitempty"`

	// PaginationOffset Offset for pagination (starting point for records)
	PaginationOffset *int64 `form:"paginationOffset,omitempty" json:"paginationOffset,omitempty"`

	// Source Source of the failed events
	Source *string `form:"source,omitempty" json:"source,omitempty"`
}

// GetEventSubscriptionByNameParams defines parameters for GetEventSubscriptionByName.
type GetEventSubscriptionByNameParams struct {
	// Fields Fields requested in the returned resource
	Fields *string `form:"fields,omitempty" json:"fields,omitempty"`
}

// GetFailedEventsBySubscriptionNameParams defines parameters for GetFailedEventsBySubscriptionName.
type GetFailedEventsBySubscriptionNameParams struct {
	// Limit Maximum number of failed events to retrieve
	Limit *int64 `form:"limit,omitempty" json:"limit,omitempty"`

	// PaginationOffset Offset for pagination (starting point for records)
	PaginationOffset *int64 `form:"paginationOffset,omitempty" json:"paginationOffset,omitempty"`

	// Source Source of the failed events
	Source *string `form:"source,omitempty" json:"source,omitempty"`
}

// GetSuccessfullySentChangeEventsForAlertByNameParams defines parameters for GetSuccessfullySentChangeEventsForAlertByName.
type GetSuccessfullySentChangeEventsForAlertByNameParams struct {
	// Limit Maximum number of change events to retrieve
	Limit *int64 `form:"limit,omitempty" json:"limit,omitempty"`

	// PaginationOffset Offset for pagination (starting point for records)
	PaginationOffset *int64 `form:"paginationOffset,omitempty" json:"paginationOffset,omitempty"`
}

// PatchEventSubscriptionApplicationJSONPatchPlusJSONBody defines parameters for PatchEventSubscription.
type PatchEventSubscriptionApplicationJSONPatchPlusJSONBody = map[string]interface{}

// GetEventSubscriptionDiagnosticInfoByNameParams defines parameters for GetEventSubscriptionDiagnosticInfoByName.
type GetEventSubscriptionDiagnosticInfoByNameParams struct {
	// Limit Maximum number of unprocessed events returned
	Limit *int32 `form:"limit,omitempty" json:"limit,omitempty"`

	// PaginationOffset Offset for pagination (starting point for records)
	PaginationOffset *int64 `form:"paginationOffset,omitempty" json:"paginationOffset,omitempty"`

	// ListCountOnly Return only count if true
	ListCountOnly *bool `form:"listCountOnly,omitempty" json:"listCountOnly,omitempty"`
}

// GetEventSubscriptionByIDParams defines parameters for GetEventSubscriptionByID.
type GetEventSubscriptionByIDParams struct {
	// Fields Fields requested in the returned resource
	Fields *string `form:"fields,omitempty" json:"fields,omitempty"`
}

// PatchEventSubscription1ApplicationJSONPatchPlusJSONBody defines parameters for PatchEventSubscription1.
type PatchEventSubscription1ApplicationJSONPatchPlusJSONBody = map[string]interface{}

// ListThreadsParams defines parameters for ListThreads.
type ListThreadsParams struct {
	// LimitPosts Limit the number of posts sorted by chronological order (1 to 1000000, default = 3)
	LimitPosts *int64 `form:"limitPosts,omitempty" json:"limitPosts,omitempty"`

	// Limit Limit the number of threads returned. (1 to 1000000, default = 10)
	Limit *int32 `form:"limit,omitempty" json:"limit,omitempty"`

	// Before Returns list of threads before this cursor
	Before *string `form:"before,omitempty" json:"before,omitempty"`

	// After Returns list of threads after this cursor
	After *string `form:"after,omitempty" json:"after,omitempty"`

	// EntityLink Filter threads by entity link of entity about which this thread is created
	EntityLink *string `form:"entityLink,omitempty" json:"entityLink,omitempty"`

	// UserId Filter threads by user id. This filter requires a 'filterType' query param. The default filter type is 'OWNER'. This filter cannot be combined with the entityLink filter.
	UserId *string `form:"userId,omitempty" json:"userId,omitempty"`

	// FilterType Filter type definition for the user filter. It can take one of 'OWNER', 'FOLLOWS', 'MENTIONS'. This must be used with the 'user' query param
	FilterType *ListThreadsParamsFilterType `form:"filterType,omitempty" json:"filterType,omitempty"`

	// Resolved Filter threads by whether they are resolved or not. By default resolved is false
	Resolved *bool `form:"resolved,omitempty" json:"resolved,omitempty"`

	// Type The type of thread to filter the results. It can take one of 'Conversation', 'Task', 'Announcement'
	Type *ListThreadsParamsType `form:"type,omitempty" json:"type,omitempty"`

	// TaskStatus The status of tasks to filter the results. It can take one of 'Open', 'Closed'. This filter will take effect only when type is set to Task
	TaskStatus *ListThreadsParamsTaskStatus `form:"taskStatus,omitempty" json:"taskStatus,omitempty"`

	// ActiveAnnouncement Whether to filter results by announcements that are currently active. This filter will take effect only when type is set to Announcement
	ActiveAnnouncement *bool `form:"activeAnnouncement,omitempty" json:"activeAnnouncement,omitempty"`
}

// ListThreadsParamsFilterType defines parameters for ListThreads.
type ListThreadsParamsFilterType string

// ListThreadsParamsType defines parameters for ListThreads.
type ListThreadsParamsType string

// ListThreadsParamsTaskStatus defines parameters for ListThreads.
type ListThreadsParamsTaskStatus string

// CountThreadsParams defines parameters for CountThreads.
type CountThreadsParams struct {
	// EntityLink Filter threads by entity link
	EntityLink *string `form:"entityLink,omitempty" json:"entityLink,omitempty"`
}

// PatchThreadApplicationJSONPatchPlusJSONBody defines parameters for PatchThread.
type PatchThreadApplicationJSONPatchPlusJSONBody = map[string]interface{}

// PatchPostOfThreadApplicationJSONPatchPlusJSONBody defines parameters for PatchPostOfThread.
type PatchPostOfThreadApplicationJSONPatchPlusJSONBody = map[string]interface{}

// ListGlossariesParams defines parameters for ListGlossaries.
type ListGlossariesParams struct {
	// Fields Fields requested in the returned resource
	Fields *string `form:"fields,omitempty" json:"fields,omitempty"`

	// Limit Limit the number glossaries returned. (1 to 1000000, default = 10)
	Limit *int32 `form:"limit,omitempty" json:"limit,omitempty"`

	// Before Returns list of glossaries before this cursor
	Before *string `form:"before,omitempty" json:"before,omitempty"`

	// After Returns list of glossaries after this cursor
	After *string `form:"after,omitempty" json:"after,omitempty"`

	// Include Include all, deleted, or non-deleted entities.
	Include *ListGlossariesParamsInclude `form:"include,omitempty" json:"include,omitempty"`
}

// ListGlossariesParamsInclude defines parameters for ListGlossaries.
type ListGlossariesParamsInclude string

// DeleteGlossaryAsyncParams defines parameters for DeleteGlossaryAsync.
type DeleteGlossaryAsyncParams struct {
	// Recursive Recursively delete this entity and it's children. (Default `false`)
	Recursive *bool `form:"recursive,omitempty" json:"recursive,omitempty"`

	// HardDelete Hard delete the entity. (Default = `false`)
	HardDelete *bool `form:"hardDelete,omitempty" json:"hardDelete,omitempty"`
}

// PatchGlossaryApplicationJSONPatchPlusJSONBody defines parameters for PatchGlossary.
type PatchGlossaryApplicationJSONPatchPlusJSONBody = map[string]interface{}

// DeleteGlossaryByNameParams defines parameters for DeleteGlossaryByName.
type DeleteGlossaryByNameParams struct {
	// HardDelete Hard delete the entity. (Default = `false`)
	HardDelete *bool `form:"hardDelete,omitempty" json:"hardDelete,omitempty"`

	// Recursive Recursively delete this entity and it's children. (Default `false`)
	Recursive *bool `form:"recursive,omitempty" json:"recursive,omitempty"`
}

// GetGlossaryByFQNParams defines parameters for GetGlossaryByFQN.
type GetGlossaryByFQNParams struct {
	// Fields Fields requested in the returned resource
	Fields *string `form:"fields,omitempty" json:"fields,omitempty"`

	// Include Include all, deleted, or non-deleted entities.
	Include *GetGlossaryByFQNParamsInclude `form:"include,omitempty" json:"include,omitempty"`
}

// GetGlossaryByFQNParamsInclude defines parameters for GetGlossaryByFQN.
type GetGlossaryByFQNParamsInclude string

// ImportGlossaryTextBody defines parameters for ImportGlossary.
type ImportGlossaryTextBody = string

// ImportGlossaryParams defines parameters for ImportGlossary.
type ImportGlossaryParams struct {
	// DryRun Dry-run when true is used for validating the CSV without really importing it. (default=true)
	DryRun *bool `form:"dryRun,omitempty" json:"dryRun,omitempty"`
}

// ImportGlossaryAsyncTextBody defines parameters for ImportGlossaryAsync.
type ImportGlossaryAsyncTextBody = string

// ImportGlossaryAsyncParams defines parameters for ImportGlossaryAsync.
type ImportGlossaryAsyncParams struct {
	// DryRun Dry run the import
	DryRun *bool `form:"dryRun,omitempty" json:"dryRun,omitempty"`
}

// DeleteGlossaryParams defines parameters for DeleteGlossary.
type DeleteGlossaryParams struct {
	// Recursive Recursively delete this entity and it's children. (Default `false`)
	Recursive *bool `form:"recursive,omitempty" json:"recursive,omitempty"`

	// HardDelete Hard delete the entity. (Default = `false`)
	HardDelete *bool `form:"hardDelete,omitempty" json:"hardDelete,omitempty"`
}

// GetGlossaryByIDParams defines parameters for GetGlossaryByID.
type GetGlossaryByIDParams struct {
	// Fields Fields requested in the returned resource
	Fields *string `form:"fields,omitempty" json:"fields,omitempty"`

	// Include Include all, deleted, or non-deleted entities.
	Include *GetGlossaryByIDParamsInclude `form:"include,omitempty" json:"include,omitempty"`
}

// GetGlossaryByIDParamsInclude defines parameters for GetGlossaryByID.
type GetGlossaryByIDParamsInclude string

// PatchGlossary1ApplicationJSONPatchPlusJSONBody defines parameters for PatchGlossary1.
type PatchGlossary1ApplicationJSONPatchPlusJSONBody = map[string]interface{}

// ListGlossaryTermParams defines parameters for ListGlossaryTerm.
type ListGlossaryTermParams struct {
	// Glossary List glossary terms filtered by glossary identified by Id given in `glossary` parameter.
	Glossary *string `form:"glossary,omitempty" json:"glossary,omitempty"`

	// Parent List glossary terms filtered by children of glossary term identified by Id given in `parent` parameter.
	Parent *string `form:"parent,omitempty" json:"parent,omitempty"`

	// Fields Fields requested in the returned resource
	Fields *string `form:"fields,omitempty" json:"fields,omitempty"`

	// Limit Limit the number glossary terms returned. (1 to 1000000, default = 10)
	Limit *int32 `form:"limit,omitempty" json:"limit,omitempty"`

	// Before Returns list of glossary terms before this cursor
	Before *string `form:"before,omitempty" json:"before,omitempty"`

	// After Returns list of glossary terms after this cursor
	After *string `form:"after,omitempty" json:"after,omitempty"`

	// Include Include all, deleted, or non-deleted entities.
	Include *ListGlossaryTermParamsInclude `form:"include,omitempty" json:"include,omitempty"`

	// DirectChildrenOf List glossary terms filtered to retrieve the first level/immediate children of the glossary term `directChildrenOf` parameter.
	DirectChildrenOf *string `form:"directChildrenOf,omitempty" json:"directChildrenOf,omitempty"`
}

// ListGlossaryTermParamsInclude defines parameters for ListGlossaryTerm.
type ListGlossaryTermParamsInclude string

// DeleteByIdAsyncParams defines parameters for DeleteByIdAsync.
type DeleteByIdAsyncParams struct {
	// Recursive Recursively delete this entity and it's children. (Default `false`)
	Recursive *bool `form:"recursive,omitempty" json:"recursive,omitempty"`

	// HardDelete Hard delete the entity. (Default = `false`)
	HardDelete *bool `form:"hardDelete,omitempty" json:"hardDelete,omitempty"`
}

// CreateManyGlossaryTermJSONBody defines parameters for CreateManyGlossaryTerm.
type CreateManyGlossaryTermJSONBody = []CreateGlossaryTerm

// DeleteGlossaryTermByNameParams defines parameters for DeleteGlossaryTermByName.
type DeleteGlossaryTermByNameParams struct {
	// HardDelete Hard delete the entity. (Default = `false`)
	HardDelete *bool `form:"hardDelete,omitempty" json:"hardDelete,omitempty"`

	// Recursive Recursively delete this entity and it's children. (Default `false`)
	Recursive *bool `form:"recursive,omitempty" json:"recursive,omitempty"`
}

// GetGlossaryTermByFQNParams defines parameters for GetGlossaryTermByFQN.
type GetGlossaryTermByFQNParams struct {
	// Fields Fields requested in the returned resource
	Fields *string `form:"fields,omitempty" json:"fields,omitempty"`

	// Include Include all, deleted, or non-deleted entities.
	Include *GetGlossaryTermByFQNParamsInclude `form:"include,omitempty" json:"include,omitempty"`
}

// GetGlossaryTermByFQNParamsInclude defines parameters for GetGlossaryTermByFQN.
type GetGlossaryTermByFQNParamsInclude string

// PatchGlossaryTermApplicationJSONPatchPlusJSONBody defines parameters for PatchGlossaryTerm.
type PatchGlossaryTermApplicationJSONPatchPlusJSONBody = map[string]interface{}

// DeleteParams defines parameters for Delete.
type DeleteParams struct {
	// Recursive Recursively delete this entity and it's children. (Default `false`)
	Recursive *bool `form:"recursive,omitempty" json:"recursive,omitempty"`

	// HardDelete Hard delete the entity. (Default = `false`)
	HardDelete *bool `form:"hardDelete,omitempty" json:"hardDelete,omitempty"`
}

// GetGlossaryTermByIDParams defines parameters for GetGlossaryTermByID.
type GetGlossaryTermByIDParams struct {
	// Fields Fields requested in the returned resource
	Fields *string `form:"fields,omitempty" json:"fields,omitempty"`

	// Include Include all, deleted, or non-deleted entities.
	Include *GetGlossaryTermByIDParamsInclude `form:"include,omitempty" json:"include,omitempty"`
}

// GetGlossaryTermByIDParamsInclude defines parameters for GetGlossaryTermByID.
type GetGlossaryTermByIDParamsInclude string

// PatchGlossaryTerm1ApplicationJSONPatchPlusJSONBody defines parameters for PatchGlossaryTerm1.
type PatchGlossaryTerm1ApplicationJSONPatchPlusJSONBody = map[string]interface{}

// ListWorkflowDefinitionsParams defines parameters for ListWorkflowDefinitions.
type ListWorkflowDefinitionsParams struct {
	// Fields Fields requested in the returned resource
	Fields *string `form:"fields,omitempty" json:"fields,omitempty"`

	// Limit Limit the number of Workflow Definitions returned. Default = 10)
	Limit *int32 `form:"limit,omitempty" json:"limit,omitempty"`

	// Before Returns the list of Workflow Definitions before this cursor
	Before *string `form:"before,omitempty" json:"before,omitempty"`

	// After Returns the list of Workflow Definitions after this cursor
	After *string `form:"after,omitempty" json:"after,omitempty"`

	// Include Include all, deleted or non-deleted entities.
	Include *ListWorkflowDefinitionsParamsInclude `form:"include,omitempty" json:"include,omitempty"`
}

// ListWorkflowDefinitionsParamsInclude defines parameters for ListWorkflowDefinitions.
type ListWorkflowDefinitionsParamsInclude string

// DeleteWorkflowDefinitionAsyncParams defines parameters for DeleteWorkflowDefinitionAsync.
type DeleteWorkflowDefinitionAsyncParams struct {
	// Recursive Recursively delete this entity and it's children. (default `false`)
	Recursive *bool `form:"recursive,omitempty" json:"recursive,omitempty"`

	// HardDelete Hard delete the entity. (default = `false`)
	HardDelete *bool `form:"hardDelete,omitempty" json:"hardDelete,omitempty"`
}

// DeleteWorkflowDefinitionByFQNParams defines parameters for DeleteWorkflowDefinitionByFQN.
type DeleteWorkflowDefinitionByFQNParams struct {
	// HardDelete Hard delete the entity. (default = `false`)
	HardDelete *bool `form:"hardDelete,omitempty" json:"hardDelete,omitempty"`

	// Recursive Recursively delete this entity and it's children. (default `false`)
	Recursive *bool `form:"recursive,omitempty" json:"recursive,omitempty"`
}

// GetWorkflowDefinitionByFQNParams defines parameters for GetWorkflowDefinitionByFQN.
type GetWorkflowDefinitionByFQNParams struct {
	// Fields Fields requested in the returned resource
	Fields *string `form:"fields,omitempty" json:"fields,omitempty"`

	// Include Include all, deleted, or non-deleted entities.
	Include *GetWorkflowDefinitionByFQNParamsInclude `form:"include,omitempty" json:"include,omitempty"`
}

// GetWorkflowDefinitionByFQNParamsInclude defines parameters for GetWorkflowDefinitionByFQN.
type GetWorkflowDefinitionByFQNParamsInclude string

// PatchWorkflowDefinitionApplicationJSONPatchPlusJSONBody defines parameters for PatchWorkflowDefinition.
type PatchWorkflowDefinitionApplicationJSONPatchPlusJSONBody = map[string]interface{}

// DeleteWorkflowDefinitionParams defines parameters for DeleteWorkflowDefinition.
type DeleteWorkflowDefinitionParams struct {
	// Recursive Recursively delete this entity and it's children. (default `false`)
	Recursive *bool `form:"recursive,omitempty" json:"recursive,omitempty"`

	// HardDelete Hard delete the entity. (default = `false`)
	HardDelete *bool `form:"hardDelete,omitempty" json:"hardDelete,omitempty"`
}

// GetWorkflowDefinitionByIDParams defines parameters for GetWorkflowDefinitionByID.
type GetWorkflowDefinitionByIDParams struct {
	// Fields Fields requested in the returned resource
	Fields *string `form:"fields,omitempty" json:"fields,omitempty"`

	// Include Include all, deleted, or non-deleted entities.
	Include *GetWorkflowDefinitionByIDParamsInclude `form:"include,omitempty" json:"include,omitempty"`
}

// GetWorkflowDefinitionByIDParamsInclude defines parameters for GetWorkflowDefinitionByID.
type GetWorkflowDefinitionByIDParamsInclude string

// PatchWorkflowDefinition1ApplicationJSONPatchPlusJSONBody defines parameters for PatchWorkflowDefinition1.
type PatchWorkflowDefinition1ApplicationJSONPatchPlusJSONBody = map[string]interface{}

// ListWorkflowInstanceStatesParams defines parameters for ListWorkflowInstanceStates.
type ListWorkflowInstanceStatesParams struct {
	// Limit Limit the number of Workflow Instance States returned. (1 to 1000000, default = 10)
	Limit *int32 `form:"limit,omitempty" json:"limit,omitempty"`

	// Offset Returns list of Workflow Instance States at the offset
	Offset *string `form:"offset,omitempty" json:"offset,omitempty"`

	// StartTs Filter Workflow Instance States after the given start timestamp
	StartTs *float32 `form:"startTs,omitempty" json:"startTs,omitempty"`

	// EndTs Filter Workflow Instance States before the given end timestamp
	EndTs *float32 `form:"endTs,omitempty" json:"endTs,omitempty"`

	// Latest Only list the latest Workflow Instance States
	Latest *bool `form:"latest,omitempty" json:"latest,omitempty"`
}

// GetWorkflowInstanceStatesForAWorkflowInstanceIdParams defines parameters for GetWorkflowInstanceStatesForAWorkflowInstanceId.
type GetWorkflowInstanceStatesForAWorkflowInstanceIdParams struct {
	// Limit Limit the number of Workflow Instance States returned. (1 to 1000000, default = 10)
	Limit *int32 `form:"limit,omitempty" json:"limit,omitempty"`

	// Offset Returns list of Workflow Instance States at the offset
	Offset *string `form:"offset,omitempty" json:"offset,omitempty"`

	// StartTs Filter Workflow Instance States after the given start timestamp
	StartTs *float32 `form:"startTs,omitempty" json:"startTs,omitempty"`

	// EndTs Filter Workflow Instance States before the given end timestamp
	EndTs *float32 `form:"endTs,omitempty" json:"endTs,omitempty"`

	// Latest Only list the latest Workflow Instance States
	Latest *bool `form:"latest,omitempty" json:"latest,omitempty"`
}

// ListWorkflowInstancesParams defines parameters for ListWorkflowInstances.
type ListWorkflowInstancesParams struct {
	// Limit Limit the number of Workflow Instances returned. (1 to 1000000, default = 10)
	Limit *int32 `form:"limit,omitempty" json:"limit,omitempty"`

	// Offset Returns list of Workflow Instances at the offset
	Offset *string `form:"offset,omitempty" json:"offset,omitempty"`

	// StartTs Filter Workflow Instances after the given start timestamp
	StartTs *float32 `form:"startTs,omitempty" json:"startTs,omitempty"`

	// EndTs Filter Workflow Instances before the given end timestamp
	EndTs *float32 `form:"endTs,omitempty" json:"endTs,omitempty"`

	// Latest Only list the latest Workflow Instance
	Latest *bool `form:"latest,omitempty" json:"latest,omitempty"`

	// WorkflowDefinitionName Workflow Definition Name
	WorkflowDefinitionName *string `form:"workflowDefinitionName,omitempty" json:"workflowDefinitionName,omitempty"`

	// EntityLink Entity Link
	EntityLink *string `form:"entityLink,omitempty" json:"entityLink,omitempty"`
}

// ExportLineageParams defines parameters for ExportLineage.
type ExportLineageParams struct {
	// Fqn fqn
	Fqn *string `form:"fqn,omitempty" json:"fqn,omitempty"`

	// UpstreamDepth upstreamDepth
	UpstreamDepth *int32 `form:"upstreamDepth,omitempty" json:"upstreamDepth,omitempty"`

	// DownstreamDepth downstreamDepth
	DownstreamDepth *int32 `form:"downstreamDepth,omitempty" json:"downstreamDepth,omitempty"`

	// QueryFilter Elasticsearch query that will be combined with the query_string query generator from the `query` argument
	QueryFilter *string `form:"query_filter,omitempty" json:"query_filter,omitempty"`

	// IncludeDeleted Filter documents by deleted param. By default deleted is false
	IncludeDeleted *bool `form:"includeDeleted,omitempty" json:"includeDeleted,omitempty"`

	// Type entity type
	Type *string `form:"type,omitempty" json:"type,omitempty"`
}

// ExportLineage1Params defines parameters for ExportLineage1.
type ExportLineage1Params struct {
	// Fqn fqn
	Fqn *string `form:"fqn,omitempty" json:"fqn,omitempty"`

	// UpstreamDepth upstreamDepth
	UpstreamDepth *int32 `form:"upstreamDepth,omitempty" json:"upstreamDepth,omitempty"`

	// DownstreamDepth downstreamDepth
	DownstreamDepth *int32 `form:"downstreamDepth,omitempty" json:"downstreamDepth,omitempty"`

	// QueryFilter Elasticsearch query that will be combined with the query_string query generator from the `query` argument
	QueryFilter *string `form:"query_filter,omitempty" json:"query_filter,omitempty"`

	// IncludeDeleted Filter documents by deleted param. By default deleted is false
	IncludeDeleted *bool `form:"includeDeleted,omitempty" json:"includeDeleted,omitempty"`

	// Type entity type
	Type *string `form:"type,omitempty" json:"type,omitempty"`
}

// SearchDataQualityLineageParams defines parameters for SearchDataQualityLineage.
type SearchDataQualityLineageParams struct {
	// Fqn fqn
	Fqn *string `form:"fqn,omitempty" json:"fqn,omitempty"`

	// UpstreamDepth upstreamDepth
	UpstreamDepth *int32 `form:"upstreamDepth,omitempty" json:"upstreamDepth,omitempty"`

	// QueryFilter Elasticsearch query that will be combined with the query_string query generator from the `query` argument
	QueryFilter *string `form:"query_filter,omitempty" json:"query_filter,omitempty"`

	// IncludeDeleted Filter documents by deleted param. By default deleted is false
	IncludeDeleted *bool `form:"includeDeleted,omitempty" json:"includeDeleted,omitempty"`
}

// SearchLineageParams defines parameters for SearchLineage.
type SearchLineageParams struct {
	// Fqn fqn
	Fqn *string `form:"fqn,omitempty" json:"fqn,omitempty"`

	// UpstreamDepth upstreamDepth
	UpstreamDepth *int32 `form:"upstreamDepth,omitempty" json:"upstreamDepth,omitempty"`

	// DownstreamDepth downstreamDepth
	DownstreamDepth *int32 `form:"downstreamDepth,omitempty" json:"downstreamDepth,omitempty"`

	// QueryFilter Elasticsearch query that will be combined with the query_string query generator from the `query` argument
	QueryFilter *string `form:"query_filter,omitempty" json:"query_filter,omitempty"`

	// IncludeDeleted Filter documents by deleted param. By default deleted is false
	IncludeDeleted *bool `form:"includeDeleted,omitempty" json:"includeDeleted,omitempty"`

	// Fields Source Fields to Include
	Fields *string `form:"fields,omitempty" json:"fields,omitempty"`

	// Type entity type
	Type *string `form:"type,omitempty" json:"type,omitempty"`

	// From From field to paginate the results, defaults to 0
	From *int32 `form:"from,omitempty" json:"from,omitempty"`

	// Size Size field to limit the no.of results returned, defaults to 10
	Size *int32 `form:"size,omitempty" json:"size,omitempty"`
}

// SearchLineageWithDirectionParams defines parameters for SearchLineageWithDirection.
type SearchLineageWithDirectionParams struct {
	// Fqn fqn
	Fqn *string `form:"fqn,omitempty" json:"fqn,omitempty"`

	// UpstreamDepth upstreamDepth
	UpstreamDepth *int32 `form:"upstreamDepth,omitempty" json:"upstreamDepth,omitempty"`

	// DownstreamDepth downstreamDepth
	DownstreamDepth *int32 `form:"downstreamDepth,omitempty" json:"downstreamDepth,omitempty"`

	// QueryFilter Elasticsearch query that will be combined with the query_string query generator from the `query` argument
	QueryFilter *string `form:"query_filter,omitempty" json:"query_filter,omitempty"`

	// IncludeDeleted Filter documents by deleted param. By default deleted is false
	IncludeDeleted *bool `form:"includeDeleted,omitempty" json:"includeDeleted,omitempty"`

	// Fields Source Fields to Include
	Fields *string `form:"fields,omitempty" json:"fields,omitempty"`

	// Type entity type
	Type *string `form:"type,omitempty" json:"type,omitempty"`

	// From From field to paginate the results, defaults to 0
	From *int32 `form:"from,omitempty" json:"from,omitempty"`

	// Size Size field to limit the no.of results returned, defaults to 10
	Size *int32 `form:"size,omitempty" json:"size,omitempty"`
}

// GetPlatformLineageParams defines parameters for GetPlatformLineage.
type GetPlatformLineageParams struct {
	// View view (service or domain)
	View *string `form:"view,omitempty" json:"view,omitempty"`

	// QueryFilter Elasticsearch query that will be combined with the query_string query generator from the `query` argument
	QueryFilter *string `form:"query_filter,omitempty" json:"query_filter,omitempty"`

	// IncludeDeleted Filter documents by deleted param. By default deleted is false
	IncludeDeleted *bool `form:"includeDeleted,omitempty" json:"includeDeleted,omitempty"`
}

// GetLineageByFQNParams defines parameters for GetLineageByFQN.
type GetLineageByFQNParams struct {
	// UpstreamDepth Upstream depth of lineage (default=1, min=0, max=3)
	UpstreamDepth *int32 `form:"upstreamDepth,omitempty" json:"upstreamDepth,omitempty"`

	// DownstreamDepth Upstream depth of lineage (default=1, min=0, max=3)
	DownstreamDepth *int32 `form:"downstreamDepth,omitempty" json:"downstreamDepth,omitempty"`
}

// GetLineageParams defines parameters for GetLineage.
type GetLineageParams struct {
	// UpstreamDepth Upstream depth of lineage (default=1, min=0, max=3)
	UpstreamDepth *int32 `form:"upstreamDepth,omitempty" json:"upstreamDepth,omitempty"`

	// DownstreamDepth Upstream depth of lineage (default=1, min=0, max=3)
	DownstreamDepth *int32 `form:"downstreamDepth,omitempty" json:"downstreamDepth,omitempty"`
}

// PatchLineageEdgeApplicationJSONPatchPlusJSONBody defines parameters for PatchLineageEdge.
type PatchLineageEdgeApplicationJSONPatchPlusJSONBody = map[string]interface{}

// ListTypesParams defines parameters for ListTypes.
type ListTypesParams struct {
	// Category Filter types by metadata type category.
	Category *string `form:"category,omitempty" json:"category,omitempty"`

	// Limit Limit the number types returned. (1 to 1000000, default = 10)
	Limit *int32 `form:"limit,omitempty" json:"limit,omitempty"`

	// Before Returns list of types before this cursor
	Before *string `form:"before,omitempty" json:"before,omitempty"`

	// After Returns list of types after this cursor
	After *string `form:"after,omitempty" json:"after,omitempty"`
}

// GetEntityTypeFieldsParams defines parameters for GetEntityTypeFields.
type GetEntityTypeFieldsParams struct {
	Include *GetEntityTypeFieldsParamsInclude `form:"include,omitempty" json:"include,omitempty"`
}

// GetEntityTypeFieldsParamsInclude defines parameters for GetEntityTypeFields.
type GetEntityTypeFieldsParamsInclude string

// PatchTypeApplicationJSONPatchPlusJSONBody defines parameters for PatchType.
type PatchTypeApplicationJSONPatchPlusJSONBody = map[string]interface{}

// GetTypeByNameParams defines parameters for GetTypeByName.
type GetTypeByNameParams struct {
	// Fields Fields requested in the returned resource
	Fields *string `form:"fields,omitempty" json:"fields,omitempty"`

	// Include Include all, deleted, or non-deleted entities.
	Include *GetTypeByNameParamsInclude `form:"include,omitempty" json:"include,omitempty"`
}

// GetTypeByNameParamsInclude defines parameters for GetTypeByName.
type GetTypeByNameParamsInclude string

// GetTypeByIDParams defines parameters for GetTypeByID.
type GetTypeByIDParams struct {
	// Fields Fields requested in the returned resource
	Fields *string `form:"fields,omitempty" json:"fields,omitempty"`

	// Include Include all, deleted, or non-deleted entities.
	Include *GetTypeByIDParamsInclude `form:"include,omitempty" json:"include,omitempty"`
}

// GetTypeByIDParamsInclude defines parameters for GetTypeByID.
type GetTypeByIDParamsInclude string

// PatchType1ApplicationJSONPatchPlusJSONBody defines parameters for PatchType1.
type PatchType1ApplicationJSONPatchPlusJSONBody = map[string]interface{}

// ListMetricsParams defines parameters for ListMetrics.
type ListMetricsParams struct {
	// Fields Fields requested in the returned resource
	Fields *string `form:"fields,omitempty" json:"fields,omitempty"`
	Limit  *int32  `form:"limit,omitempty" json:"limit,omitempty"`

	// Before Returns list of metrics before this cursor
	Before *string `form:"before,omitempty" json:"before,omitempty"`

	// After Returns list of metrics after this cursor
	After *string `form:"after,omitempty" json:"after,omitempty"`

	// Include Include all, deleted, or non-deleted entities.
	Include *ListMetricsParamsInclude `form:"include,omitempty" json:"include,omitempty"`
}

// ListMetricsParamsInclude defines parameters for ListMetrics.
type ListMetricsParamsInclude string

// DeleteMetricAsyncParams defines parameters for DeleteMetricAsync.
type DeleteMetricAsyncParams struct {
	// HardDelete Hard delete the entity. (Default = `false`)
	HardDelete *bool `form:"hardDelete,omitempty" json:"hardDelete,omitempty"`
}

// DeleteAPIEndpointByFQN1Params defines parameters for DeleteAPIEndpointByFQN1.
type DeleteAPIEndpointByFQN1Params struct {
	// HardDelete Hard delete the entity. (Default = `false`)
	HardDelete *bool `form:"hardDelete,omitempty" json:"hardDelete,omitempty"`
}

// GetMetricByFQNParams defines parameters for GetMetricByFQN.
type GetMetricByFQNParams struct {
	// Fields Fields requested in the returned resource
	Fields *string `form:"fields,omitempty" json:"fields,omitempty"`

	// Include Include all, deleted, or non-deleted entities.
	Include *GetMetricByFQNParamsInclude `form:"include,omitempty" json:"include,omitempty"`
}

// GetMetricByFQNParamsInclude defines parameters for GetMetricByFQN.
type GetMetricByFQNParamsInclude string

// PatchMetricApplicationJSONPatchPlusJSONBody defines parameters for PatchMetric.
type PatchMetricApplicationJSONPatchPlusJSONBody = map[string]interface{}

// DeleteMetricParams defines parameters for DeleteMetric.
type DeleteMetricParams struct {
	// HardDelete Hard delete the entity. (Default = `false`)
	HardDelete *bool `form:"hardDelete,omitempty" json:"hardDelete,omitempty"`
}

// GetMetricByIDParams defines parameters for GetMetricByID.
type GetMetricByIDParams struct {
	// Fields Fields requested in the returned resource
	Fields *string `form:"fields,omitempty" json:"fields,omitempty"`

	// Include Include all, deleted, or non-deleted entities.
	Include *GetMetricByIDParamsInclude `form:"include,omitempty" json:"include,omitempty"`
}

// GetMetricByIDParamsInclude defines parameters for GetMetricByID.
type GetMetricByIDParamsInclude string

// PatchMetric1ApplicationJSONPatchPlusJSONBody defines parameters for PatchMetric1.
type PatchMetric1ApplicationJSONPatchPlusJSONBody = map[string]interface{}

// AddFollower2JSONBody defines parameters for AddFollower2.
type AddFollower2JSONBody = openapi_types.UUID

// ListMlModelsParams defines parameters for ListMlModels.
type ListMlModelsParams struct {
	// Fields Fields requested in the returned resource
	Fields *string `form:"fields,omitempty" json:"fields,omitempty"`

	// Service Filter MlModels by service name
	Service *string `form:"service,omitempty" json:"service,omitempty"`

	// Limit Limit the number models returned. (1 to 1000000, default = 10)
	Limit *int32 `form:"limit,omitempty" json:"limit,omitempty"`

	// Before Returns list of models before this cursor
	Before *string `form:"before,omitempty" json:"before,omitempty"`

	// After Returns list of models after this cursor
	After *string `form:"after,omitempty" json:"after,omitempty"`

	// Include Include all, deleted, or non-deleted entities.
	Include *ListMlModelsParamsInclude `form:"include,omitempty" json:"include,omitempty"`
}

// ListMlModelsParamsInclude defines parameters for ListMlModels.
type ListMlModelsParamsInclude string

// DeleteMlModelAsyncParams defines parameters for DeleteMlModelAsync.
type DeleteMlModelAsyncParams struct {
	// HardDelete Hard delete the entity. (Default = `false`)
	HardDelete *bool `form:"hardDelete,omitempty" json:"hardDelete,omitempty"`
}

// DeleteMlModelByFQNParams defines parameters for DeleteMlModelByFQN.
type DeleteMlModelByFQNParams struct {
	// HardDelete Hard delete the entity. (Default = `false`)
	HardDelete *bool `form:"hardDelete,omitempty" json:"hardDelete,omitempty"`

	// Recursive Recursively delete this entity and it's children. (Default `false`)
	Recursive *bool `form:"recursive,omitempty" json:"recursive,omitempty"`
}

// GetMlModelByFQNParams defines parameters for GetMlModelByFQN.
type GetMlModelByFQNParams struct {
	// Fields Fields requested in the returned resource
	Fields *string `form:"fields,omitempty" json:"fields,omitempty"`

	// Include Include all, deleted, or non-deleted entities.
	Include *GetMlModelByFQNParamsInclude `form:"include,omitempty" json:"include,omitempty"`
}

// GetMlModelByFQNParamsInclude defines parameters for GetMlModelByFQN.
type GetMlModelByFQNParamsInclude string

// PatchMlModelApplicationJSONPatchPlusJSONBody defines parameters for PatchMlModel.
type PatchMlModelApplicationJSONPatchPlusJSONBody = map[string]interface{}

// DeleteMlModelParams defines parameters for DeleteMlModel.
type DeleteMlModelParams struct {
	// HardDelete Hard delete the entity. (Default = `false`)
	HardDelete *bool `form:"hardDelete,omitempty" json:"hardDelete,omitempty"`
}

// GetMlModelByIDParams defines parameters for GetMlModelByID.
type GetMlModelByIDParams struct {
	// Fields Fields requested in the returned resource
	Fields *string `form:"fields,omitempty" json:"fields,omitempty"`

	// Include Include all, deleted, or non-deleted entities.
	Include *GetMlModelByIDParamsInclude `form:"include,omitempty" json:"include,omitempty"`
}

// GetMlModelByIDParamsInclude defines parameters for GetMlModelByID.
type GetMlModelByIDParamsInclude string

// PatchMlModel1ApplicationJSONPatchPlusJSONBody defines parameters for PatchMlModel1.
type PatchMlModel1ApplicationJSONPatchPlusJSONBody = map[string]interface{}

// AddFollower3JSONBody defines parameters for AddFollower3.
type AddFollower3JSONBody = openapi_types.UUID

// GetResourcePermissionsParams defines parameters for GetResourcePermissions.
type GetResourcePermissionsParams struct {
	// User Permission for user specified in this query param. If not specified, the user is defaulted to the logged in user
	User *string `form:"user,omitempty" json:"user,omitempty"`
}

// GetPermissionsForPoliciesParams defines parameters for GetPermissionsForPolicies.
type GetPermissionsForPoliciesParams struct {
	// Ids List of policy of ids
	Ids *[]openapi_types.UUID `form:"ids,omitempty" json:"ids,omitempty"`
}

// GetResourceTypePermissionParams defines parameters for GetResourceTypePermission.
type GetResourceTypePermissionParams struct {
	// User Permission for user specified in this query param. If not specified, the user is defaulted to the logged in user
	User *string `form:"user,omitempty" json:"user,omitempty"`
}

// GetResourcePermissionByNameParams defines parameters for GetResourcePermissionByName.
type GetResourcePermissionByNameParams struct {
	// User Permission for user specified in this query param. If not specified, the user is defaulted to the logged in user
	User *string `form:"user,omitempty" json:"user,omitempty"`
}

// GetResourcePermissionParams defines parameters for GetResourcePermission.
type GetResourcePermissionParams struct {
	// User Permission for user specified in this query param. If not specified, the user is defaulted to the logged in user
	User *string `form:"user,omitempty" json:"user,omitempty"`
}

// ListPersonasParams defines parameters for ListPersonas.
type ListPersonasParams struct {
	// Fields Fields requested in the returned resource
	Fields *string `form:"fields,omitempty" json:"fields,omitempty"`

	// Limit Limit the number of personas returned. (1 to 1000000, default = 10)
	Limit *int32 `form:"limit,omitempty" json:"limit,omitempty"`

	// Before Returns list of personas before this cursor
	Before *string `form:"before,omitempty" json:"before,omitempty"`

	// After Returns list of personas after this cursor
	After *string `form:"after,omitempty" json:"after,omitempty"`
}

// PatchPersonaApplicationJSONPatchPlusJSONBody defines parameters for PatchPersona.
type PatchPersonaApplicationJSONPatchPlusJSONBody = map[string]interface{}

// GetPersonaByFQNParams defines parameters for GetPersonaByFQN.
type GetPersonaByFQNParams struct {
	// Fields Fields requested in the returned resource
	Fields *string `form:"fields,omitempty" json:"fields,omitempty"`

	// Include Include all, deleted, or non-deleted entities.
	Include *GetPersonaByFQNParamsInclude `form:"include,omitempty" json:"include,omitempty"`
}

// GetPersonaByFQNParamsInclude defines parameters for GetPersonaByFQN.
type GetPersonaByFQNParamsInclude string

// GetPersonaByIDParams defines parameters for GetPersonaByID.
type GetPersonaByIDParams struct {
	// Fields Fields requested in the returned resource
	Fields *string `form:"fields,omitempty" json:"fields,omitempty"`

	// Include Include all, deleted, or non-deleted entities.
	Include *GetPersonaByIDParamsInclude `form:"include,omitempty" json:"include,omitempty"`
}

// GetPersonaByIDParamsInclude defines parameters for GetPersonaByID.
type GetPersonaByIDParamsInclude string

// PatchPersona1ApplicationJSONPatchPlusJSONBody defines parameters for PatchPersona1.
type PatchPersona1ApplicationJSONPatchPlusJSONBody = map[string]interface{}

// ListPipelinesParams defines parameters for ListPipelines.
type ListPipelinesParams struct {
	// Fields Fields requested in the returned resource
	Fields *string `form:"fields,omitempty" json:"fields,omitempty"`

	// Service Filter pipelines by service name
	Service *string `form:"service,omitempty" json:"service,omitempty"`

	// Limit Limit the number pipelines returned. (1 to 1000000, default = 10)
	Limit *int32 `form:"limit,omitempty" json:"limit,omitempty"`

	// Before Returns list of pipelines before this cursor
	Before *string `form:"before,omitempty" json:"before,omitempty"`

	// After Returns list of pipelines after this cursor
	After *string `form:"after,omitempty" json:"after,omitempty"`

	// Include Include all, deleted, or non-deleted entities.
	Include *ListPipelinesParamsInclude `form:"include,omitempty" json:"include,omitempty"`
}

// ListPipelinesParamsInclude defines parameters for ListPipelines.
type ListPipelinesParamsInclude string

// DeletePipelineAsyncParams defines parameters for DeletePipelineAsync.
type DeletePipelineAsyncParams struct {
	// HardDelete Hard delete the entity. (Default = `false`)
	HardDelete *bool `form:"hardDelete,omitempty" json:"hardDelete,omitempty"`

	// Recursive Recursively delete this entity and it's children. (Default `false`)
	Recursive *bool `form:"recursive,omitempty" json:"recursive,omitempty"`
}

// DeletePipelineByFQNParams defines parameters for DeletePipelineByFQN.
type DeletePipelineByFQNParams struct {
	// HardDelete Hard delete the entity. (Default = `false`)
	HardDelete *bool `form:"hardDelete,omitempty" json:"hardDelete,omitempty"`

	// Recursive Recursively delete this entity and it's children. (Default `false`)
	Recursive *bool `form:"recursive,omitempty" json:"recursive,omitempty"`
}

// GetPipelineByFQNParams defines parameters for GetPipelineByFQN.
type GetPipelineByFQNParams struct {
	// Fields Fields requested in the returned resource
	Fields *string `form:"fields,omitempty" json:"fields,omitempty"`

	// Include Include all, deleted, or non-deleted entities.
	Include *GetPipelineByFQNParamsInclude `form:"include,omitempty" json:"include,omitempty"`
}

// GetPipelineByFQNParamsInclude defines parameters for GetPipelineByFQN.
type GetPipelineByFQNParamsInclude string

// PatchPipelineApplicationJSONPatchPlusJSONBody defines parameters for PatchPipeline.
type PatchPipelineApplicationJSONPatchPlusJSONBody = map[string]interface{}

// ListPipelineStatusesParams defines parameters for ListPipelineStatuses.
type ListPipelineStatusesParams struct {
	// StartTs Filter pipeline statues after the given start timestamp
	StartTs float32 `form:"startTs" json:"startTs"`

	// EndTs Filter pipeline statues before the given end timestamp
	EndTs float32 `form:"endTs" json:"endTs"`
}

// DeletePipelineParams defines parameters for DeletePipeline.
type DeletePipelineParams struct {
	// HardDelete Hard delete the entity. (Default = `false`)
	HardDelete *bool `form:"hardDelete,omitempty" json:"hardDelete,omitempty"`

	// Recursive Recursively delete this entity and it's children. (Default `false`)
	Recursive *bool `form:"recursive,omitempty" json:"recursive,omitempty"`
}

// GetPipelineWithIDParams defines parameters for GetPipelineWithID.
type GetPipelineWithIDParams struct {
	// Fields Fields requested in the returned resource
	Fields *string `form:"fields,omitempty" json:"fields,omitempty"`

	// Include Include all, deleted, or non-deleted entities.
	Include *GetPipelineWithIDParamsInclude `form:"include,omitempty" json:"include,omitempty"`
}

// GetPipelineWithIDParamsInclude defines parameters for GetPipelineWithID.
type GetPipelineWithIDParamsInclude string

// PatchPipeline1ApplicationJSONPatchPlusJSONBody defines parameters for PatchPipeline1.
type PatchPipeline1ApplicationJSONPatchPlusJSONBody = map[string]interface{}

// AddFollower4JSONBody defines parameters for AddFollower4.
type AddFollower4JSONBody = string

// ListPoliciesParams defines parameters for ListPolicies.
type ListPoliciesParams struct {
	// Fields Fields requested in the returned resource
	Fields *string `form:"fields,omitempty" json:"fields,omitempty"`

	// Limit Limit the number policies returned. (1 to 1000000, default = 10)
	Limit *int32 `form:"limit,omitempty" json:"limit,omitempty"`

	// Before Returns list of policies before this cursor
	Before *string `form:"before,omitempty" json:"before,omitempty"`

	// After Returns list of policies after this cursor
	After *string `form:"after,omitempty" json:"after,omitempty"`

	// Include Include all, deleted, or non-deleted entities.
	Include *ListPoliciesParamsInclude `form:"include,omitempty" json:"include,omitempty"`
}

// ListPoliciesParamsInclude defines parameters for ListPolicies.
type ListPoliciesParamsInclude string

// DeletePolicyAsyncParams defines parameters for DeletePolicyAsync.
type DeletePolicyAsyncParams struct {
	// HardDelete Hard delete the entity. (Default = `false`)
	HardDelete *bool `form:"hardDelete,omitempty" json:"hardDelete,omitempty"`
}

// DeletePolicyByFQNParams defines parameters for DeletePolicyByFQN.
type DeletePolicyByFQNParams struct {
	// HardDelete Hard delete the entity. (Default = `false`)
	HardDelete *bool `form:"hardDelete,omitempty" json:"hardDelete,omitempty"`
}

// GetPolicyByFQNParams defines parameters for GetPolicyByFQN.
type GetPolicyByFQNParams struct {
	// Fields Fields requested in the returned resource
	Fields *string `form:"fields,omitempty" json:"fields,omitempty"`

	// Include Include all, deleted, or non-deleted entities.
	Include *GetPolicyByFQNParamsInclude `form:"include,omitempty" json:"include,omitempty"`
}

// GetPolicyByFQNParamsInclude defines parameters for GetPolicyByFQN.
type GetPolicyByFQNParamsInclude string

// PatchPolicyApplicationJSONPatchPlusJSONBody defines parameters for PatchPolicy.
type PatchPolicyApplicationJSONPatchPlusJSONBody = map[string]interface{}

// DeletePolicyParams defines parameters for DeletePolicy.
type DeletePolicyParams struct {
	// HardDelete Hard delete the entity. (Default = `false`)
	HardDelete *bool `form:"hardDelete,omitempty" json:"hardDelete,omitempty"`
}

// GetPolicyByIDParams defines parameters for GetPolicyByID.
type GetPolicyByIDParams struct {
	// Fields Fields requested in the returned resource
	Fields *string `form:"fields,omitempty" json:"fields,omitempty"`

	// Include Include all, deleted, or non-deleted entities.
	Include *GetPolicyByIDParamsInclude `form:"include,omitempty" json:"include,omitempty"`
}

// GetPolicyByIDParamsInclude defines parameters for GetPolicyByID.
type GetPolicyByIDParamsInclude string

// PatchPolicy1ApplicationJSONPatchPlusJSONBody defines parameters for PatchPolicy1.
type PatchPolicy1ApplicationJSONPatchPlusJSONBody = map[string]interface{}

// ListQueriesParams defines parameters for ListQueries.
type ListQueriesParams struct {
	// Fields Fields requested in the returned resource
	Fields *string `form:"fields,omitempty" json:"fields,omitempty"`

	// EntityId UUID of the entity for which to list the Queries
	EntityId *openapi_types.UUID `form:"entityId,omitempty" json:"entityId,omitempty"`

	// Service Filter Queries by service Fully Qualified Name
	Service *string `form:"service,omitempty" json:"service,omitempty"`

	// Limit Limit the number queries returned. (1 to 1000000, default = 10)
	Limit *int32 `form:"limit,omitempty" json:"limit,omitempty"`

	// Before Returns list of queries before this cursor
	Before *string `form:"before,omitempty" json:"before,omitempty"`

	// After Returns list of queries after this cursor
	After *string `form:"after,omitempty" json:"after,omitempty"`
}

// GetQueryFqnParams defines parameters for GetQueryFqn.
type GetQueryFqnParams struct {
	// Fields Fields requested in the returned resource
	Fields *string `form:"fields,omitempty" json:"fields,omitempty"`
}

// PatchQueryApplicationJSONPatchPlusJSONBody defines parameters for PatchQuery.
type PatchQueryApplicationJSONPatchPlusJSONBody = map[string]interface{}

// GetQueryByIdParams defines parameters for GetQueryById.
type GetQueryByIdParams struct {
	// Fields Fields requested in the returned resource
	Fields *string `form:"fields,omitempty" json:"fields,omitempty"`
}

// PatchQuery1ApplicationJSONPatchPlusJSONBody defines parameters for PatchQuery1.
type PatchQuery1ApplicationJSONPatchPlusJSONBody = map[string]interface{}

// AddFollower5JSONBody defines parameters for AddFollower5.
type AddFollower5JSONBody = openapi_types.UUID

// RemoveQueryUsedInJSONBody defines parameters for RemoveQueryUsedIn.
type RemoveQueryUsedInJSONBody = []EntityReference

// AddQueryUsageJSONBody defines parameters for AddQueryUsage.
type AddQueryUsageJSONBody = []EntityReference

// AddQueryUsedByJSONBody defines parameters for AddQueryUsedBy.
type AddQueryUsedByJSONBody = []string

// AddQueryUsersJSONBody defines parameters for AddQueryUsers.
type AddQueryUsersJSONBody = []string

// ListReportsParams defines parameters for ListReports.
type ListReportsParams struct {
	// Fields Fields requested in the returned resource
	Fields *string `form:"fields,omitempty" json:"fields,omitempty"`
}

// GetReportByIDParams defines parameters for GetReportByID.
type GetReportByIDParams struct {
	// Fields Fields requested in the returned resource
	Fields *string `form:"fields,omitempty" json:"fields,omitempty"`

	// Include Include all, deleted, or non-deleted entities.
	Include *GetReportByIDParamsInclude `form:"include,omitempty" json:"include,omitempty"`
}

// GetReportByIDParamsInclude defines parameters for GetReportByID.
type GetReportByIDParamsInclude string

// ListRolesParams defines parameters for ListRoles.
type ListRolesParams struct {
	// Default List only default role(s)
	Default *bool `form:"default,omitempty" json:"default,omitempty"`

	// Fields Fields requested in the returned resource
	Fields *string `form:"fields,omitempty" json:"fields,omitempty"`

	// Limit Limit the number tables returned. (1 to 1000000, default = 10)
	Limit *int32 `form:"limit,omitempty" json:"limit,omitempty"`

	// Before Returns list of tables before this cursor
	Before *string `form:"before,omitempty" json:"before,omitempty"`

	// After Returns list of tables after this cursor
	After *string `form:"after,omitempty" json:"after,omitempty"`

	// Include Include all, deleted, or non-deleted entities.
	Include *ListRolesParamsInclude `form:"include,omitempty" json:"include,omitempty"`
}

// ListRolesParamsInclude defines parameters for ListRoles.
type ListRolesParamsInclude string

// DeleteRoleAsyncParams defines parameters for DeleteRoleAsync.
type DeleteRoleAsyncParams struct {
	// HardDelete Hard delete the entity. (Default = `false`)
	HardDelete *bool `form:"hardDelete,omitempty" json:"hardDelete,omitempty"`
}

// PatchRoleApplicationJSONPatchPlusJSONBody defines parameters for PatchRole.
type PatchRoleApplicationJSONPatchPlusJSONBody = map[string]interface{}

// DeleteRoleByNameParams defines parameters for DeleteRoleByName.
type DeleteRoleByNameParams struct {
	// HardDelete Hard delete the entity. (Default = `false`)
	HardDelete *bool `form:"hardDelete,omitempty" json:"hardDelete,omitempty"`
}

// GetRoleByFQNParams defines parameters for GetRoleByFQN.
type GetRoleByFQNParams struct {
	// Fields Fields requested in the returned resource
	Fields *string `form:"fields,omitempty" json:"fields,omitempty"`

	// Include Include all, deleted, or non-deleted entities.
	Include *GetRoleByFQNParamsInclude `form:"include,omitempty" json:"include,omitempty"`
}

// GetRoleByFQNParamsInclude defines parameters for GetRoleByFQN.
type GetRoleByFQNParamsInclude string

// DeleteRoleParams defines parameters for DeleteRole.
type DeleteRoleParams struct {
	// HardDelete Hard delete the entity. (Default = `false`)
	HardDelete *bool `form:"hardDelete,omitempty" json:"hardDelete,omitempty"`
}

// GetRoleByIDParams defines parameters for GetRoleByID.
type GetRoleByIDParams struct {
	// Fields Fields requested in the returned resource
	Fields *string `form:"fields,omitempty" json:"fields,omitempty"`

	// Include Include all, deleted, or non-deleted entities.
	Include *GetRoleByIDParamsInclude `form:"include,omitempty" json:"include,omitempty"`
}

// GetRoleByIDParamsInclude defines parameters for GetRoleByID.
type GetRoleByIDParamsInclude string

// PatchRole1ApplicationJSONPatchPlusJSONBody defines parameters for PatchRole1.
type PatchRole1ApplicationJSONPatchPlusJSONBody = map[string]interface{}

// GetAggregateFieldsParams defines parameters for GetAggregateFields.
type GetAggregateFieldsParams struct {
	Index *string `form:"index,omitempty" json:"index,omitempty"`

	// Field Field in an entity.
	Field *string `form:"field,omitempty" json:"field,omitempty"`

	// Value value for searching in aggregation
	Value *string `form:"value,omitempty" json:"value,omitempty"`

	// SourceFields List of fields to fetch from _source per bucket.
	SourceFields *string `form:"sourceFields,omitempty" json:"sourceFields,omitempty"`

	// Q Search Query Text, Pass *text* for substring match; Pass without wildcards for exact match. <br/> 1. For listing all tables or topics pass q=* <br/>2. For search tables or topics pass q=*search_term* <br/>3. For searching field names such as search by columnNames pass q=columnNames:address, for searching deleted entities, use q=deleted:true <br/>4. For searching by tag names pass q=tags.tagFQN:user.email <br/>5. When user selects a filter pass q=query_text AND tags.tagFQN:user.email AND platform:MYSQL <br/>6. Search with multiple values of same filter q=tags.tagFQN:user.email AND tags.tagFQN:user.address <br/>NOTE: logic operators such as AND, OR and NOT must be in uppercase
	Q string `form:"q" json:"q"`

	// Size Size field to limit the no.of results returned, defaults to 10
	Size    *int32 `form:"size,omitempty" json:"size,omitempty"`
	Deleted *bool  `form:"deleted,omitempty" json:"deleted,omitempty"`
}

// SearchEntitiesWithSpecificFieldAndValueParams defines parameters for SearchEntitiesWithSpecificFieldAndValue.
type SearchEntitiesWithSpecificFieldAndValueParams struct {
	// FieldName field name
	FieldName *string `form:"fieldName,omitempty" json:"fieldName,omitempty"`

	// FieldValue field value
	FieldValue *string `form:"fieldValue,omitempty" json:"fieldValue,omitempty"`

	// Index Search Index name, defaults to table_search_index
	Index *string `form:"index,omitempty" json:"index,omitempty"`
}

// SearchEntitiesWithNLQParams defines parameters for SearchEntitiesWithNLQ.
type SearchEntitiesWithNLQParams struct {
	// Q NLQ query string in natural language
	Q *string `form:"q,omitempty" json:"q,omitempty"`

	// Index ElasticSearch Index name, defaults to table_search_index
	Index *string `form:"index,omitempty" json:"index,omitempty"`

	// Deleted Filter documents by deleted param. By default deleted is false
	Deleted *bool `form:"deleted,omitempty" json:"deleted,omitempty"`

	// From From field to paginate the results, defaults to 0
	From *int32 `form:"from,omitempty" json:"from,omitempty"`

	// Size Size field to limit the no.of results returned, defaults to 10
	Size *int32 `form:"size,omitempty" json:"size,omitempty"`

	// SearchAfter When paginating, specify the search_after values
	SearchAfter *string `form:"search_after,omitempty" json:"search_after,omitempty"`

	// SortField Sort the search results by field
	SortField *string `form:"sort_field,omitempty" json:"sort_field,omitempty"`

	// SortOrder Sort order asc for ascending or desc for descending, defaults to desc
	SortOrder *string `form:"sort_order,omitempty" json:"sort_order,omitempty"`

	// TrackTotalHits Track Total Hits
	TrackTotalHits *bool `form:"track_total_hits,omitempty" json:"track_total_hits,omitempty"`

	// QueryFilter Additional filters to apply
	QueryFilter *string `form:"query_filter,omitempty" json:"query_filter,omitempty"`

	// PostFilter Post-filters to apply
	PostFilter *string `form:"post_filter,omitempty" json:"post_filter,omitempty"`

	// FetchSource Get document body for each hit
	FetchSource *bool `form:"fetch_source,omitempty" json:"fetch_source,omitempty"`

	// IncludeSourceFields Get only selected fields of the document body
	IncludeSourceFields *[]string `form:"include_source_fields,omitempty" json:"include_source_fields,omitempty"`

	// GetHierarchy Fetch results in hierarchical order
	GetHierarchy *bool `form:"getHierarchy,omitempty" json:"getHierarchy,omitempty"`

	// Explain Explain the results of the query
	Explain *bool `form:"explain,omitempty" json:"explain,omitempty"`
}

// SearchEntitiesWithQueryParams defines parameters for SearchEntitiesWithQuery.
type SearchEntitiesWithQueryParams struct {
	// Q Search Query Text, Pass *text* for substring match; Pass without wildcards for exact match. <br/> 1. For listing all tables or topics pass q=* <br/>2. For search tables or topics pass q=*search_term* <br/>3. For searching field names such as search by columnNames pass q=columnNames:address , for searching deleted entities, use q=deleted:true <br/> 4. For searching by tag names pass q=tags.tagFQN:user.email <br/>5. When user selects a filter pass q=query_text AND q=tags.tagFQN:user.email AND platform:MYSQL <br/>6. Search with multiple values of same filter q=tags.tagFQN:user.email AND tags.tagFQN:user.address <br/> 7. Search by service version and type q=service.type:databaseService AND version:0.1 <br/> 8. Search Tables with Specific Constraints q=tableConstraints.constraintType.keyword:PRIMARY_KEY AND NOT tier.tagFQN:Tier.Tier1 <br/> 9. Search with owners q=owner.displayName.keyword:owner_name <br/> NOTE: logic operators such as AND, OR and NOT must be in uppercase
	Q string `form:"q" json:"q"`

	// Index ElasticSearch Index name, defaults to table_search_index
	Index *string `form:"index,omitempty" json:"index,omitempty"`

	// Deleted Filter documents by deleted param. By default deleted is false
	Deleted *bool `form:"deleted,omitempty" json:"deleted,omitempty"`

	// From From field to paginate the results, defaults to 0
	From *int32 `form:"from,omitempty" json:"from,omitempty"`

	// Size Size field to limit the no.of results returned, defaults to 10
	Size *int32 `form:"size,omitempty" json:"size,omitempty"`

	// SearchAfter When paginating, specify the search_after values. Use it ass search_after=<val1>,<val2>,...
	SearchAfter *string `form:"search_after,omitempty" json:"search_after,omitempty"`

	// SortField Sort the search results by field, available fields to sort weekly_stats , daily_stats, monthly_stats, last_updated_timestamp
	SortField *string `form:"sort_field,omitempty" json:"sort_field,omitempty"`

	// SortOrder Sort order asc for ascending or desc for descending, defaults to desc
	SortOrder *string `form:"sort_order,omitempty" json:"sort_order,omitempty"`

	// TrackTotalHits Track Total Hits
	TrackTotalHits *bool `form:"track_total_hits,omitempty" json:"track_total_hits,omitempty"`

	// QueryFilter Elasticsearch query that will be combined with the query_string query generator from the `query` argument
	QueryFilter *string `form:"query_filter,omitempty" json:"query_filter,omitempty"`

	// PostFilter Elasticsearch query that will be used as a post_filter
	PostFilter *string `form:"post_filter,omitempty" json:"post_filter,omitempty"`

	// FetchSource Get document body for each hit
	FetchSource *bool `form:"fetch_source,omitempty" json:"fetch_source,omitempty"`

	// IncludeSourceFields Get only selected fields of the document body for each hit. Empty value will return all fields
	IncludeSourceFields *[]string `form:"include_source_fields,omitempty" json:"include_source_fields,omitempty"`

	// GetHierarchy Fetch search results in hierarchical order of children elements. By default hierarchy is not fetched. Currently only supported for glossary_term_search_index.
	GetHierarchy *bool `form:"getHierarchy,omitempty" json:"getHierarchy,omitempty"`

	// Explain Explain the results of the query. Defaults to false. Only for debugging purposes.
	Explain *bool `form:"explain,omitempty" json:"explain,omitempty"`
}

// SearchEntitiesWithSourceUrlParams defines parameters for SearchEntitiesWithSourceUrl.
type SearchEntitiesWithSourceUrlParams struct {
	// SourceUrl source url
	SourceUrl *string `form:"sourceUrl,omitempty" json:"sourceUrl,omitempty"`
}

// GetSuggestedEntitiesParams defines parameters for GetSuggestedEntities.
type GetSuggestedEntitiesParams struct {
	// Q Suggest API can be used to auto-fill the entities name while use is typing search text <br/> 1. To get suggest results pass q=us or q=user etc.. <br/> 2. Do not add any wild-cards such as * like in search api <br/> 3. suggest api is a prefix suggestion <br/>
	Q     string  `form:"q" json:"q"`
	Index *string `form:"index,omitempty" json:"index,omitempty"`

	// Field Field in object containing valid suggestions. Defaults to 'suggest`. All indices has a `suggest` field, only some indices have other `suggest_*` fields.
	Field *string `form:"field,omitempty" json:"field,omitempty"`

	// Size Size field to limit the no.of results returned, defaults to 10
	Size *int32 `form:"size,omitempty" json:"size,omitempty"`

	// FetchSource Get document body for each hit
	FetchSource *bool `form:"fetch_source,omitempty" json:"fetch_source,omitempty"`

	// IncludeSourceFields Get only selected fields of the document body for each hit. Empty value will return all fields
	IncludeSourceFields *[]string `form:"include_source_fields,omitempty" json:"include_source_fields,omitempty"`
	Deleted             *bool     `form:"deleted,omitempty" json:"deleted,omitempty"`
}

// ListSearchIndexesParams defines parameters for ListSearchIndexes.
type ListSearchIndexesParams struct {
	// Fields Fields requested in the returned resource
	Fields *string `form:"fields,omitempty" json:"fields,omitempty"`

	// Service Filter SearchIndexes by service name
	Service *string `form:"service,omitempty" json:"service,omitempty"`

	// Limit Limit the number SearchIndexes returned. (1 to 1000000, default = 10)
	Limit *int32 `form:"limit,omitempty" json:"limit,omitempty"`

	// Before Returns list of SearchIndexes before this cursor
	Before *string `form:"before,omitempty" json:"before,omitempty"`

	// After Returns list of SearchIndexes after this cursor
	After *string `form:"after,omitempty" json:"after,omitempty"`

	// Include Include all, deleted, or non-deleted entities.
	Include *ListSearchIndexesParamsInclude `form:"include,omitempty" json:"include,omitempty"`
}

// ListSearchIndexesParamsInclude defines parameters for ListSearchIndexes.
type ListSearchIndexesParamsInclude string

// DeleteSearchIndexAsyncParams defines parameters for DeleteSearchIndexAsync.
type DeleteSearchIndexAsyncParams struct {
	// HardDelete Hard delete the entity. (Default = `false`)
	HardDelete *bool `form:"hardDelete,omitempty" json:"hardDelete,omitempty"`

	// Recursive Recursively delete this entity and it's children. (Default `false`)
	Recursive *bool `form:"recursive,omitempty" json:"recursive,omitempty"`
}

// DeleteSearchIndexByFQNParams defines parameters for DeleteSearchIndexByFQN.
type DeleteSearchIndexByFQNParams struct {
	// HardDelete Hard delete the entity. (Default = `false`)
	HardDelete *bool `form:"hardDelete,omitempty" json:"hardDelete,omitempty"`

	// Recursive Recursively delete this entity and it's children. (Default `false`)
	Recursive *bool `form:"recursive,omitempty" json:"recursive,omitempty"`
}

// GetSearchIndexByFQNParams defines parameters for GetSearchIndexByFQN.
type GetSearchIndexByFQNParams struct {
	// Fields Fields requested in the returned resource
	Fields *string `form:"fields,omitempty" json:"fields,omitempty"`

	// Include Include all, deleted, or non-deleted entities.
	Include *GetSearchIndexByFQNParamsInclude `form:"include,omitempty" json:"include,omitempty"`
}

// GetSearchIndexByFQNParamsInclude defines parameters for GetSearchIndexByFQN.
type GetSearchIndexByFQNParamsInclude string

// PatchSearchIndexApplicationJSONPatchPlusJSONBody defines parameters for PatchSearchIndex.
type PatchSearchIndexApplicationJSONPatchPlusJSONBody = map[string]interface{}

// DeleteSearchIndexParams defines parameters for DeleteSearchIndex.
type DeleteSearchIndexParams struct {
	// HardDelete Hard delete the entity. (Default = `false`)
	HardDelete *bool `form:"hardDelete,omitempty" json:"hardDelete,omitempty"`

	// Recursive Recursively delete this entity and it's children. (Default `false`)
	Recursive *bool `form:"recursive,omitempty" json:"recursive,omitempty"`
}

// Get6Params defines parameters for Get6.
type Get6Params struct {
	// Fields Fields requested in the returned resource
	Fields *string `form:"fields,omitempty" json:"fields,omitempty"`

	// Include Include all, deleted, or non-deleted entities.
	Include *Get6ParamsInclude `form:"include,omitempty" json:"include,omitempty"`
}

// Get6ParamsInclude defines parameters for Get6.
type Get6ParamsInclude string

// PatchSearchIndex1ApplicationJSONPatchPlusJSONBody defines parameters for PatchSearchIndex1.
type PatchSearchIndex1ApplicationJSONPatchPlusJSONBody = map[string]interface{}

// AddFollower6JSONBody defines parameters for AddFollower6.
type AddFollower6JSONBody = openapi_types.UUID

// ListAPIServicesParams defines parameters for ListAPIServices.
type ListAPIServicesParams struct {
	// Fields Fields requested in the returned resource
	Fields *string `form:"fields,omitempty" json:"fields,omitempty"`

	// Domain Filter services by domain
	Domain *string `form:"domain,omitempty" json:"domain,omitempty"`
	Limit  *int32  `form:"limit,omitempty" json:"limit,omitempty"`

	// Before Returns list of API services before this cursor
	Before *string `form:"before,omitempty" json:"before,omitempty"`

	// After Returns list of API services after this cursor
	After *string `form:"after,omitempty" json:"after,omitempty"`

	// Include Include all, deleted, or non-deleted entities.
	Include *ListAPIServicesParamsInclude `form:"include,omitempty" json:"include,omitempty"`
}

// ListAPIServicesParamsInclude defines parameters for ListAPIServices.
type ListAPIServicesParamsInclude string

// DeleteAPIServiceAsyncParams defines parameters for DeleteAPIServiceAsync.
type DeleteAPIServiceAsyncParams struct {
	// Recursive Recursively delete this entity and it's children. (Default `false`)
	Recursive *bool `form:"recursive,omitempty" json:"recursive,omitempty"`

	// HardDelete Hard delete the entity. (Default = `false`)
	HardDelete *bool `form:"hardDelete,omitempty" json:"hardDelete,omitempty"`
}

// DeleteAPIServiceByFQNParams defines parameters for DeleteAPIServiceByFQN.
type DeleteAPIServiceByFQNParams struct {
	// Recursive Recursively delete this entity and it's children. (Default `false`)
	Recursive *bool `form:"recursive,omitempty" json:"recursive,omitempty"`

	// HardDelete Hard delete the entity. (Default = `false`)
	HardDelete *bool `form:"hardDelete,omitempty" json:"hardDelete,omitempty"`
}

// PatchAPIServiceApplicationJSONPatchPlusJSONBody defines parameters for PatchAPIService.
type PatchAPIServiceApplicationJSONPatchPlusJSONBody = map[string]interface{}

// GetAPIServiceByFQNParams defines parameters for GetAPIServiceByFQN.
type GetAPIServiceByFQNParams struct {
	// Fields Fields requested in the returned resource
	Fields *string `form:"fields,omitempty" json:"fields,omitempty"`

	// Include Include all, deleted, or non-deleted entities.
	Include *GetAPIServiceByFQNParamsInclude `form:"include,omitempty" json:"include,omitempty"`
}

// GetAPIServiceByFQNParamsInclude defines parameters for GetAPIServiceByFQN.
type GetAPIServiceByFQNParamsInclude string

// DeleteAPIServiceParams defines parameters for DeleteAPIService.
type DeleteAPIServiceParams struct {
	// Recursive Recursively delete this entity and it's children. (Default `false`)
	Recursive *bool `form:"recursive,omitempty" json:"recursive,omitempty"`

	// HardDelete Hard delete the entity. (Default = `false`)
	HardDelete *bool `form:"hardDelete,omitempty" json:"hardDelete,omitempty"`
}

// GetAPIServiceByIDParams defines parameters for GetAPIServiceByID.
type GetAPIServiceByIDParams struct {
	// Fields Fields requested in the returned resource
	Fields *string `form:"fields,omitempty" json:"fields,omitempty"`

	// Include Include all, deleted, or non-deleted entities.
	Include *GetAPIServiceByIDParamsInclude `form:"include,omitempty" json:"include,omitempty"`
}

// GetAPIServiceByIDParamsInclude defines parameters for GetAPIServiceByID.
type GetAPIServiceByIDParamsInclude string

// PatchAPIService1ApplicationJSONPatchPlusJSONBody defines parameters for PatchAPIService1.
type PatchAPIService1ApplicationJSONPatchPlusJSONBody = map[string]interface{}

// ListDashboardsServiceParams defines parameters for ListDashboardsService.
type ListDashboardsServiceParams struct {
	Name *string `form:"name,omitempty" json:"name,omitempty"`

	// Fields Fields requested in the returned resource
	Fields *string `form:"fields,omitempty" json:"fields,omitempty"`

	// Domain Filter services by domain
	Domain *string `form:"domain,omitempty" json:"domain,omitempty"`
	Limit  *int32  `form:"limit,omitempty" json:"limit,omitempty"`

	// Before Returns list of dashboard services before this cursor
	Before *string `form:"before,omitempty" json:"before,omitempty"`

	// After Returns list of dashboard services after this cursor
	After *string `form:"after,omitempty" json:"after,omitempty"`

	// Include Include all, deleted, or non-deleted entities.
	Include *ListDashboardsServiceParamsInclude `form:"include,omitempty" json:"include,omitempty"`
}

// ListDashboardsServiceParamsInclude defines parameters for ListDashboardsService.
type ListDashboardsServiceParamsInclude string

// DeleteDashboardServiceAsyncParams defines parameters for DeleteDashboardServiceAsync.
type DeleteDashboardServiceAsyncParams struct {
	// Recursive Recursively delete this entity and it's children. (Default `false`)
	Recursive *bool `form:"recursive,omitempty" json:"recursive,omitempty"`

	// HardDelete Hard delete the entity. (Default = `false`)
	HardDelete *bool `form:"hardDelete,omitempty" json:"hardDelete,omitempty"`
}

// PatchDashboardServiceApplicationJSONPatchPlusJSONBody defines parameters for PatchDashboardService.
type PatchDashboardServiceApplicationJSONPatchPlusJSONBody = map[string]interface{}

// DeleteDashboardServiceByNameParams defines parameters for DeleteDashboardServiceByName.
type DeleteDashboardServiceByNameParams struct {
	// HardDelete Hard delete the entity. (Default = `false`)
	HardDelete *bool `form:"hardDelete,omitempty" json:"hardDelete,omitempty"`

	// Recursive Recursively delete this entity and it's children. (Default `false`)
	Recursive *bool `form:"recursive,omitempty" json:"recursive,omitempty"`
}

// GetDashboardServiceByFQNParams defines parameters for GetDashboardServiceByFQN.
type GetDashboardServiceByFQNParams struct {
	// Fields Fields requested in the returned resource
	Fields *string `form:"fields,omitempty" json:"fields,omitempty"`

	// Include Include all, deleted, or non-deleted entities.
	Include *GetDashboardServiceByFQNParamsInclude `form:"include,omitempty" json:"include,omitempty"`
}

// GetDashboardServiceByFQNParamsInclude defines parameters for GetDashboardServiceByFQN.
type GetDashboardServiceByFQNParamsInclude string

// DeleteDashboardServiceParams defines parameters for DeleteDashboardService.
type DeleteDashboardServiceParams struct {
	// Recursive Recursively delete this entity and it's children. (Default `false`)
	Recursive *bool `form:"recursive,omitempty" json:"recursive,omitempty"`

	// HardDelete Hard delete the entity. (Default = `false`)
	HardDelete *bool `form:"hardDelete,omitempty" json:"hardDelete,omitempty"`
}

// GetDashboardServiceByIDParams defines parameters for GetDashboardServiceByID.
type GetDashboardServiceByIDParams struct {
	// Fields Fields requested in the returned resource
	Fields *string `form:"fields,omitempty" json:"fields,omitempty"`

	// Include Include all, deleted, or non-deleted entities.
	Include *GetDashboardServiceByIDParamsInclude `form:"include,omitempty" json:"include,omitempty"`
}

// GetDashboardServiceByIDParamsInclude defines parameters for GetDashboardServiceByID.
type GetDashboardServiceByIDParamsInclude string

// PatchDashboardService1ApplicationJSONPatchPlusJSONBody defines parameters for PatchDashboardService1.
type PatchDashboardService1ApplicationJSONPatchPlusJSONBody = map[string]interface{}

// ListDatabaseServicesParams defines parameters for ListDatabaseServices.
type ListDatabaseServicesParams struct {
	// Fields Fields requested in the returned resource
	Fields *string `form:"fields,omitempty" json:"fields,omitempty"`

	// Domain Filter services by domain
	Domain *string `form:"domain,omitempty" json:"domain,omitempty"`
	Limit  *int32  `form:"limit,omitempty" json:"limit,omitempty"`

	// Before Returns list of database services before this cursor
	Before *string `form:"before,omitempty" json:"before,omitempty"`

	// After Returns list of database services after this cursor
	After *string `form:"after,omitempty" json:"after,omitempty"`

	// Include Include all, deleted, or non-deleted entities.
	Include *ListDatabaseServicesParamsInclude `form:"include,omitempty" json:"include,omitempty"`
}

// ListDatabaseServicesParamsInclude defines parameters for ListDatabaseServices.
type ListDatabaseServicesParamsInclude string

// DeleteDatabaseServiceAsyncParams defines parameters for DeleteDatabaseServiceAsync.
type DeleteDatabaseServiceAsyncParams struct {
	// Recursive Recursively delete this entity and it's children. (Default `false`)
	Recursive *bool `form:"recursive,omitempty" json:"recursive,omitempty"`

	// HardDelete Hard delete the entity. (Default = `false`)
	HardDelete *bool `form:"hardDelete,omitempty" json:"hardDelete,omitempty"`
}

// PatchDatabaseServiceApplicationJSONPatchPlusJSONBody defines parameters for PatchDatabaseService.
type PatchDatabaseServiceApplicationJSONPatchPlusJSONBody = map[string]interface{}

// DeleteDatabaseServiceByNameParams defines parameters for DeleteDatabaseServiceByName.
type DeleteDatabaseServiceByNameParams struct {
	// HardDelete Hard delete the entity. (Default = `false`)
	HardDelete *bool `form:"hardDelete,omitempty" json:"hardDelete,omitempty"`

	// Recursive Recursively delete this entity and it's children. (Default `false`)
	Recursive *bool `form:"recursive,omitempty" json:"recursive,omitempty"`
}

// GetDatabaseServiceByFQNParams defines parameters for GetDatabaseServiceByFQN.
type GetDatabaseServiceByFQNParams struct {
	// Fields Fields requested in the returned resource
	Fields *string `form:"fields,omitempty" json:"fields,omitempty"`

	// Include Include all, deleted, or non-deleted entities.
	Include *GetDatabaseServiceByFQNParamsInclude `form:"include,omitempty" json:"include,omitempty"`
}

// GetDatabaseServiceByFQNParamsInclude defines parameters for GetDatabaseServiceByFQN.
type GetDatabaseServiceByFQNParamsInclude string

// ExportDatabaseServicesParams defines parameters for ExportDatabaseServices.
type ExportDatabaseServicesParams struct {
	// Recursive If true, export will include child entities (schemas, tables, columns)
	Recursive *bool `form:"recursive,omitempty" json:"recursive,omitempty"`
}

// ExportDatabaseServiceParams defines parameters for ExportDatabaseService.
type ExportDatabaseServiceParams struct {
	// Recursive If true, export will include child entities (schemas, tables, columns)
	Recursive *bool `form:"recursive,omitempty" json:"recursive,omitempty"`
}

// ImportDatabaseServiceParams defines parameters for ImportDatabaseService.
type ImportDatabaseServiceParams struct {
	// DryRun Dry-run when true is used for validating the CSV without really importing it. (default=true)
	DryRun *bool `form:"dryRun,omitempty" json:"dryRun,omitempty"`

	// Recursive If true, recursive import
	Recursive *bool `form:"recursive,omitempty" json:"recursive,omitempty"`
}

// ImportDatabaseServiceAsyncParams defines parameters for ImportDatabaseServiceAsync.
type ImportDatabaseServiceAsyncParams struct {
	// DryRun Dry-run when true is used for validating the CSV without really importing it. (default=true)
	DryRun *bool `form:"dryRun,omitempty" json:"dryRun,omitempty"`

	// Recursive If true, recursive import
	Recursive *bool `form:"recursive,omitempty" json:"recursive,omitempty"`
}

// DeleteDatabaseServiceParams defines parameters for DeleteDatabaseService.
type DeleteDatabaseServiceParams struct {
	// Recursive Recursively delete this entity and it's children. (Default `false`)
	Recursive *bool `form:"recursive,omitempty" json:"recursive,omitempty"`

	// HardDelete Hard delete the entity. (Default = `false`)
	HardDelete *bool `form:"hardDelete,omitempty" json:"hardDelete,omitempty"`
}

// GetDatabaseServiceByIDParams defines parameters for GetDatabaseServiceByID.
type GetDatabaseServiceByIDParams struct {
	// Fields Fields requested in the returned resource
	Fields *string `form:"fields,omitempty" json:"fields,omitempty"`

	// Include Include all, deleted, or non-deleted entities.
	Include *GetDatabaseServiceByIDParamsInclude `form:"include,omitempty" json:"include,omitempty"`
}

// GetDatabaseServiceByIDParamsInclude defines parameters for GetDatabaseServiceByID.
type GetDatabaseServiceByIDParamsInclude string

// PatchDatabaseService1ApplicationJSONPatchPlusJSONBody defines parameters for PatchDatabaseService1.
type PatchDatabaseService1ApplicationJSONPatchPlusJSONBody = map[string]interface{}

// ListIngestionPipelinesParams defines parameters for ListIngestionPipelines.
type ListIngestionPipelinesParams struct {
	// Fields Fields requested in the returned resource
	Fields *string `form:"fields,omitempty" json:"fields,omitempty"`

	// Service Filter Ingestion Pipelines by service fully qualified name
	Service *string `form:"service,omitempty" json:"service,omitempty"`

	// TestSuite Filter Ingestion Pipelines by test suite fully qualified name
	TestSuite *string `form:"testSuite,omitempty" json:"testSuite,omitempty"`

	// PipelineType Filter Ingestion Pipelines by pipeline Type
	PipelineType *string `form:"pipelineType,omitempty" json:"pipelineType,omitempty"`

	// ServiceType Filter Ingestion Pipelines by service Type
	ServiceType *string `form:"serviceType,omitempty" json:"serviceType,omitempty"`

	// ApplicationType Filter Ingestion Pipelines by the type of the application
	ApplicationType *string `form:"applicationType,omitempty" json:"applicationType,omitempty"`

	// Limit Limit the number ingestion returned. (1 to 1000000, default = 10)
	Limit *int32 `form:"limit,omitempty" json:"limit,omitempty"`

	// Before Returns list of ingestion before this cursor
	Before *string `form:"before,omitempty" json:"before,omitempty"`

	// After Returns list of ingestion after this cursor
	After *string `form:"after,omitempty" json:"after,omitempty"`

	// Include Include all, deleted, or non-deleted entities.
	Include *ListIngestionPipelinesParamsInclude `form:"include,omitempty" json:"include,omitempty"`
}

// ListIngestionPipelinesParamsInclude defines parameters for ListIngestionPipelines.
type ListIngestionPipelinesParamsInclude string

// DeleteIngestionPipelineAsyncParams defines parameters for DeleteIngestionPipelineAsync.
type DeleteIngestionPipelineAsyncParams struct {
	// HardDelete Hard delete the entity. (Default = `false`)
	HardDelete *bool `form:"hardDelete,omitempty" json:"hardDelete,omitempty"`
}

// BulkDeployIngestionJSONBody defines parameters for BulkDeployIngestion.
type BulkDeployIngestionJSONBody = []openapi_types.UUID

// GetLastIngestionLogsParams defines parameters for GetLastIngestionLogs.
type GetLastIngestionLogsParams struct {
	// After Returns log chunk after this cursor
	After *string `form:"after,omitempty" json:"after,omitempty"`
}

// DeleteIngestionPipelineByFQNParams defines parameters for DeleteIngestionPipelineByFQN.
type DeleteIngestionPipelineByFQNParams struct {
	// HardDelete Hard delete the entity. (Default = `false`)
	HardDelete *bool `form:"hardDelete,omitempty" json:"hardDelete,omitempty"`
}

// GetSpecificIngestionPipelineByFQNParams defines parameters for GetSpecificIngestionPipelineByFQN.
type GetSpecificIngestionPipelineByFQNParams struct {
	// Fields Fields requested in the returned resource
	Fields *string `form:"fields,omitempty" json:"fields,omitempty"`

	// Include Include all, deleted, or non-deleted entities.
	Include *GetSpecificIngestionPipelineByFQNParamsInclude `form:"include,omitempty" json:"include,omitempty"`
}

// GetSpecificIngestionPipelineByFQNParamsInclude defines parameters for GetSpecificIngestionPipelineByFQN.
type GetSpecificIngestionPipelineByFQNParamsInclude string

// PatchIngestionPipelineApplicationJSONPatchPlusJSONBody defines parameters for PatchIngestionPipeline.
type PatchIngestionPipelineApplicationJSONPatchPlusJSONBody = map[string]interface{}

// ListPipelineStatuses1Params defines parameters for ListPipelineStatuses1.
type ListPipelineStatuses1Params struct {
	// StartTs Filter pipeline status after the given start timestamp
	StartTs *float32 `form:"startTs,omitempty" json:"startTs,omitempty"`

	// EndTs Filter pipeline status before the given end timestamp
	EndTs *float32 `form:"endTs,omitempty" json:"endTs,omitempty"`
}

// DeleteIngestionPipelineParams defines parameters for DeleteIngestionPipeline.
type DeleteIngestionPipelineParams struct {
	// HardDelete Hard delete the entity. (Default = `false`)
	HardDelete *bool `form:"hardDelete,omitempty" json:"hardDelete,omitempty"`
}

// GetIngestionPipelineByIDParams defines parameters for GetIngestionPipelineByID.
type GetIngestionPipelineByIDParams struct {
	// Fields Fields requested in the returned resource
	Fields *string `form:"fields,omitempty" json:"fields,omitempty"`

	// Include Include all, deleted, or non-deleted entities.
	Include *GetIngestionPipelineByIDParamsInclude `form:"include,omitempty" json:"include,omitempty"`
}

// GetIngestionPipelineByIDParamsInclude defines parameters for GetIngestionPipelineByID.
type GetIngestionPipelineByIDParamsInclude string

// PatchIngestionPipeline1ApplicationJSONPatchPlusJSONBody defines parameters for PatchIngestionPipeline1.
type PatchIngestionPipeline1ApplicationJSONPatchPlusJSONBody = map[string]interface{}

// ListMessagingServiceParams defines parameters for ListMessagingService.
type ListMessagingServiceParams struct {
	// Fields Fields requested in the returned resource
	Fields *string `form:"fields,omitempty" json:"fields,omitempty"`

	// Domain Filter services by domain
	Domain *string `form:"domain,omitempty" json:"domain,omitempty"`

	// Limit Limit number services returned. (1 to 1000000, default 10)
	Limit *int32 `form:"limit,omitempty" json:"limit,omitempty"`

	// Before Returns list of services before this cursor
	Before *string `form:"before,omitempty" json:"before,omitempty"`

	// After Returns list of services after this cursor
	After *string `form:"after,omitempty" json:"after,omitempty"`

	// Include Include all, deleted, or non-deleted entities.
	Include *ListMessagingServiceParamsInclude `form:"include,omitempty" json:"include,omitempty"`
}

// ListMessagingServiceParamsInclude defines parameters for ListMessagingService.
type ListMessagingServiceParamsInclude string

// DeleteMessagingServiceAsyncParams defines parameters for DeleteMessagingServiceAsync.
type DeleteMessagingServiceAsyncParams struct {
	// Recursive Recursively delete this entity and it's children. (Default `false`)
	Recursive *bool `form:"recursive,omitempty" json:"recursive,omitempty"`

	// HardDelete Hard delete the entity. (Default = `false`)
	HardDelete *bool `form:"hardDelete,omitempty" json:"hardDelete,omitempty"`
}

// PatchMessagingServiceApplicationJSONPatchPlusJSONBody defines parameters for PatchMessagingService.
type PatchMessagingServiceApplicationJSONPatchPlusJSONBody = map[string]interface{}

// DeleteMessagingServiceByNameParams defines parameters for DeleteMessagingServiceByName.
type DeleteMessagingServiceByNameParams struct {
	// HardDelete Hard delete the entity. (Default = `false`)
	HardDelete *bool `form:"hardDelete,omitempty" json:"hardDelete,omitempty"`

	// Recursive Recursively delete this entity and it's children. (Default `false`)
	Recursive *bool `form:"recursive,omitempty" json:"recursive,omitempty"`
}

// GetMessagingServiceByFQNParams defines parameters for GetMessagingServiceByFQN.
type GetMessagingServiceByFQNParams struct {
	// Fields Fields requested in the returned resource
	Fields *string `form:"fields,omitempty" json:"fields,omitempty"`

	// Include Include all, deleted, or non-deleted entities.
	Include *GetMessagingServiceByFQNParamsInclude `form:"include,omitempty" json:"include,omitempty"`
}

// GetMessagingServiceByFQNParamsInclude defines parameters for GetMessagingServiceByFQN.
type GetMessagingServiceByFQNParamsInclude string

// DeleteMessagingServiceParams defines parameters for DeleteMessagingService.
type DeleteMessagingServiceParams struct {
	// Recursive Recursively delete this entity and it's children. (Default `false`)
	Recursive *bool `form:"recursive,omitempty" json:"recursive,omitempty"`

	// HardDelete Hard delete the entity. (Default = `false`)
	HardDelete *bool `form:"hardDelete,omitempty" json:"hardDelete,omitempty"`
}

// GetMessagingServiceByIDParams defines parameters for GetMessagingServiceByID.
type GetMessagingServiceByIDParams struct {
	// Fields Fields requested in the returned resource
	Fields *string `form:"fields,omitempty" json:"fields,omitempty"`

	// Include Include all, deleted, or non-deleted entities.
	Include *GetMessagingServiceByIDParamsInclude `form:"include,omitempty" json:"include,omitempty"`
}

// GetMessagingServiceByIDParamsInclude defines parameters for GetMessagingServiceByID.
type GetMessagingServiceByIDParamsInclude string

// PatchMessagingService1ApplicationJSONPatchPlusJSONBody defines parameters for PatchMessagingService1.
type PatchMessagingService1ApplicationJSONPatchPlusJSONBody = map[string]interface{}

// ListMetadataServicesParams defines parameters for ListMetadataServices.
type ListMetadataServicesParams struct {
	// Fields Fields requested in the returned resource
	Fields *string `form:"fields,omitempty" json:"fields,omitempty"`
	Limit  *int32  `form:"limit,omitempty" json:"limit,omitempty"`

	// Before Returns list of metadata services before this cursor
	Before *string `form:"before,omitempty" json:"before,omitempty"`

	// After Returns list of metadata services after this cursor
	After *string `form:"after,omitempty" json:"after,omitempty"`

	// Include Include all, deleted, or non-deleted entities.
	Include *ListMetadataServicesParamsInclude `form:"include,omitempty" json:"include,omitempty"`
}

// ListMetadataServicesParamsInclude defines parameters for ListMetadataServices.
type ListMetadataServicesParamsInclude string

// DeleteMetadataServiceAsyncParams defines parameters for DeleteMetadataServiceAsync.
type DeleteMetadataServiceAsyncParams struct {
	// Recursive Recursively delete this entity and it's children. (Default `false`)
	Recursive *bool `form:"recursive,omitempty" json:"recursive,omitempty"`

	// HardDelete Hard delete the entity. (Default = `false`)
	HardDelete *bool `form:"hardDelete,omitempty" json:"hardDelete,omitempty"`
}

// PatchMetadataServiceApplicationJSONPatchPlusJSONBody defines parameters for PatchMetadataService.
type PatchMetadataServiceApplicationJSONPatchPlusJSONBody = map[string]interface{}

// DeleteMetadataServiceByNameParams defines parameters for DeleteMetadataServiceByName.
type DeleteMetadataServiceByNameParams struct {
	// HardDelete Hard delete the entity. (Default = `false`)
	HardDelete *bool `form:"hardDelete,omitempty" json:"hardDelete,omitempty"`

	// Recursive Recursively delete this entity and it's children. (Default `false`)
	Recursive *bool `form:"recursive,omitempty" json:"recursive,omitempty"`
}

// GetMetadataServiceByFQNParams defines parameters for GetMetadataServiceByFQN.
type GetMetadataServiceByFQNParams struct {
	// Fields Fields requested in the returned resource
	Fields *string `form:"fields,omitempty" json:"fields,omitempty"`

	// Include Include all, deleted, or non-deleted entities.
	Include *GetMetadataServiceByFQNParamsInclude `form:"include,omitempty" json:"include,omitempty"`
}

// GetMetadataServiceByFQNParamsInclude defines parameters for GetMetadataServiceByFQN.
type GetMetadataServiceByFQNParamsInclude string

// DeleteMetadataServiceParams defines parameters for DeleteMetadataService.
type DeleteMetadataServiceParams struct {
	// Recursive Recursively delete this entity and it's children. (Default `false`)
	Recursive *bool `form:"recursive,omitempty" json:"recursive,omitempty"`

	// HardDelete Hard delete the entity. (Default = `false`)
	HardDelete *bool `form:"hardDelete,omitempty" json:"hardDelete,omitempty"`
}

// GetMetadataServiceByIDParams defines parameters for GetMetadataServiceByID.
type GetMetadataServiceByIDParams struct {
	// Fields Fields requested in the returned resource
	Fields *string `form:"fields,omitempty" json:"fields,omitempty"`

	// Include Include all, deleted, or non-deleted entities.
	Include *GetMetadataServiceByIDParamsInclude `form:"include,omitempty" json:"include,omitempty"`
}

// GetMetadataServiceByIDParamsInclude defines parameters for GetMetadataServiceByID.
type GetMetadataServiceByIDParamsInclude string

// PatchMetadataService1ApplicationJSONPatchPlusJSONBody defines parameters for PatchMetadataService1.
type PatchMetadataService1ApplicationJSONPatchPlusJSONBody = map[string]interface{}

// ListMlModelServiceParams defines parameters for ListMlModelService.
type ListMlModelServiceParams struct {
	// Fields Fields requested in the returned resource
	Fields *string `form:"fields,omitempty" json:"fields,omitempty"`

	// Domain Filter services by domain
	Domain *string `form:"domain,omitempty" json:"domain,omitempty"`

	// Limit Limit number services returned. (1 to 1000000, default 10)
	Limit *int32 `form:"limit,omitempty" json:"limit,omitempty"`

	// Before Returns list of services before this cursor
	Before *string `form:"before,omitempty" json:"before,omitempty"`

	// After Returns list of services after this cursor
	After *string `form:"after,omitempty" json:"after,omitempty"`

	// Include Include all, deleted, or non-deleted entities.
	Include *ListMlModelServiceParamsInclude `form:"include,omitempty" json:"include,omitempty"`
}

// ListMlModelServiceParamsInclude defines parameters for ListMlModelService.
type ListMlModelServiceParamsInclude string

// DeleteMlModelServiceAsyncParams defines parameters for DeleteMlModelServiceAsync.
type DeleteMlModelServiceAsyncParams struct {
	// Recursive Recursively delete this entity and it's children. (Default `false`)
	Recursive *bool `form:"recursive,omitempty" json:"recursive,omitempty"`

	// HardDelete Hard delete the entity. (Default = `false`)
	HardDelete *bool `form:"hardDelete,omitempty" json:"hardDelete,omitempty"`
}

// PatchMlModelServiceApplicationJSONPatchPlusJSONBody defines parameters for PatchMlModelService.
type PatchMlModelServiceApplicationJSONPatchPlusJSONBody = map[string]interface{}

// DeleteMlModelServiceByNameParams defines parameters for DeleteMlModelServiceByName.
type DeleteMlModelServiceByNameParams struct {
	// Recursive Recursively delete this entity and it's children. (Default `false`)
	Recursive *bool `form:"recursive,omitempty" json:"recursive,omitempty"`

	// HardDelete Hard delete the entity. (Default = `false`)
	HardDelete *bool `form:"hardDelete,omitempty" json:"hardDelete,omitempty"`
}

// GetMlModelServiceByFQNParams defines parameters for GetMlModelServiceByFQN.
type GetMlModelServiceByFQNParams struct {
	// Fields Fields requested in the returned resource
	Fields *string `form:"fields,omitempty" json:"fields,omitempty"`

	// Include Include all, deleted, or non-deleted entities.
	Include *GetMlModelServiceByFQNParamsInclude `form:"include,omitempty" json:"include,omitempty"`
}

// GetMlModelServiceByFQNParamsInclude defines parameters for GetMlModelServiceByFQN.
type GetMlModelServiceByFQNParamsInclude string

// DeleteMlModelServiceParams defines parameters for DeleteMlModelService.
type DeleteMlModelServiceParams struct {
	// Recursive Recursively delete this entity and it's children. (Default `false`)
	Recursive *bool `form:"recursive,omitempty" json:"recursive,omitempty"`

	// HardDelete Hard delete the entity. (Default = `false`)
	HardDelete *bool `form:"hardDelete,omitempty" json:"hardDelete,omitempty"`
}

// GetMlModelServiceByIDParams defines parameters for GetMlModelServiceByID.
type GetMlModelServiceByIDParams struct {
	// Fields Fields requested in the returned resource
	Fields *string `form:"fields,omitempty" json:"fields,omitempty"`

	// Include Include all, deleted, or non-deleted entities.
	Include *GetMlModelServiceByIDParamsInclude `form:"include,omitempty" json:"include,omitempty"`
}

// GetMlModelServiceByIDParamsInclude defines parameters for GetMlModelServiceByID.
type GetMlModelServiceByIDParamsInclude string

// PatchMlModelService1ApplicationJSONPatchPlusJSONBody defines parameters for PatchMlModelService1.
type PatchMlModelService1ApplicationJSONPatchPlusJSONBody = map[string]interface{}

// ListPipelineServiceParams defines parameters for ListPipelineService.
type ListPipelineServiceParams struct {
	// Fields Fields requested in the returned resource
	Fields *string `form:"fields,omitempty" json:"fields,omitempty"`

	// Domain Filter services by domain
	Domain *string `form:"domain,omitempty" json:"domain,omitempty"`

	// Limit Limit number services returned. (1 to 1000000, default 10)
	Limit *int32 `form:"limit,omitempty" json:"limit,omitempty"`

	// Before Returns list of services before this cursor
	Before *string `form:"before,omitempty" json:"before,omitempty"`

	// After Returns list of services after this cursor
	After *string `form:"after,omitempty" json:"after,omitempty"`

	// Include Include all, deleted, or non-deleted entities.
	Include *ListPipelineServiceParamsInclude `form:"include,omitempty" json:"include,omitempty"`
}

// ListPipelineServiceParamsInclude defines parameters for ListPipelineService.
type ListPipelineServiceParamsInclude string

// DeletePipelineServiceAsyncParams defines parameters for DeletePipelineServiceAsync.
type DeletePipelineServiceAsyncParams struct {
	// Recursive Recursively delete this entity and it's children. (Default `false`)
	Recursive *bool `form:"recursive,omitempty" json:"recursive,omitempty"`

	// HardDelete Hard delete the entity. (Default = `false`)
	HardDelete *bool `form:"hardDelete,omitempty" json:"hardDelete,omitempty"`
}

// DeletePipelineServiceByNameParams defines parameters for DeletePipelineServiceByName.
type DeletePipelineServiceByNameParams struct {
	// Recursive Recursively delete this entity and it's children. (Default `false`)
	Recursive *bool `form:"recursive,omitempty" json:"recursive,omitempty"`

	// HardDelete Hard delete the entity. (Default = `false`)
	HardDelete *bool `form:"hardDelete,omitempty" json:"hardDelete,omitempty"`
}

// GetPipelineServiceByFQNParams defines parameters for GetPipelineServiceByFQN.
type GetPipelineServiceByFQNParams struct {
	// Fields Fields requested in the returned resource
	Fields *string `form:"fields,omitempty" json:"fields,omitempty"`

	// Include Include all, deleted, or non-deleted entities.
	Include *GetPipelineServiceByFQNParamsInclude `form:"include,omitempty" json:"include,omitempty"`
}

// GetPipelineServiceByFQNParamsInclude defines parameters for GetPipelineServiceByFQN.
type GetPipelineServiceByFQNParamsInclude string

// PatchPipelineServiceApplicationJSONPatchPlusJSONBody defines parameters for PatchPipelineService.
type PatchPipelineServiceApplicationJSONPatchPlusJSONBody = map[string]interface{}

// DeletePipelineServiceParams defines parameters for DeletePipelineService.
type DeletePipelineServiceParams struct {
	// Recursive Recursively delete this entity and it's children. (Default `false`)
	Recursive *bool `form:"recursive,omitempty" json:"recursive,omitempty"`

	// HardDelete Hard delete the entity. (Default = `false`)
	HardDelete *bool `form:"hardDelete,omitempty" json:"hardDelete,omitempty"`
}

// GetPipelineServiceByIDParams defines parameters for GetPipelineServiceByID.
type GetPipelineServiceByIDParams struct {
	// Fields Fields requested in the returned resource
	Fields *string `form:"fields,omitempty" json:"fields,omitempty"`

	// Include Include all, deleted, or non-deleted entities.
	Include *GetPipelineServiceByIDParamsInclude `form:"include,omitempty" json:"include,omitempty"`
}

// GetPipelineServiceByIDParamsInclude defines parameters for GetPipelineServiceByID.
type GetPipelineServiceByIDParamsInclude string

// PatchPipelineService1ApplicationJSONPatchPlusJSONBody defines parameters for PatchPipelineService1.
type PatchPipelineService1ApplicationJSONPatchPlusJSONBody = map[string]interface{}

// ListSearchServicesParams defines parameters for ListSearchServices.
type ListSearchServicesParams struct {
	// Fields Fields requested in the returned resource
	Fields *string `form:"fields,omitempty" json:"fields,omitempty"`

	// Domain Filter services by domain
	Domain *string `form:"domain,omitempty" json:"domain,omitempty"`
	Limit  *int32  `form:"limit,omitempty" json:"limit,omitempty"`

	// Before Returns list of search services before this cursor
	Before *string `form:"before,omitempty" json:"before,omitempty"`

	// After Returns list of search services after this cursor
	After *string `form:"after,omitempty" json:"after,omitempty"`

	// Include Include all, deleted, or non-deleted entities.
	Include *ListSearchServicesParamsInclude `form:"include,omitempty" json:"include,omitempty"`
}

// ListSearchServicesParamsInclude defines parameters for ListSearchServices.
type ListSearchServicesParamsInclude string

// DeleteSearchServiceAsyncParams defines parameters for DeleteSearchServiceAsync.
type DeleteSearchServiceAsyncParams struct {
	// Recursive Recursively delete this entity and it's children. (Default `false`)
	Recursive *bool `form:"recursive,omitempty" json:"recursive,omitempty"`

	// HardDelete Hard delete the entity. (Default = `false`)
	HardDelete *bool `form:"hardDelete,omitempty" json:"hardDelete,omitempty"`
}

// DeleteSearchServiceByFQNParams defines parameters for DeleteSearchServiceByFQN.
type DeleteSearchServiceByFQNParams struct {
	// Recursive Recursively delete this entity and it's children. (Default `false`)
	Recursive *bool `form:"recursive,omitempty" json:"recursive,omitempty"`

	// HardDelete Hard delete the entity. (Default = `false`)
	HardDelete *bool `form:"hardDelete,omitempty" json:"hardDelete,omitempty"`
}

// PatchSearchServiceApplicationJSONPatchPlusJSONBody defines parameters for PatchSearchService.
type PatchSearchServiceApplicationJSONPatchPlusJSONBody = map[string]interface{}

// GetSearchServiceByFQNParams defines parameters for GetSearchServiceByFQN.
type GetSearchServiceByFQNParams struct {
	// Fields Fields requested in the returned resource
	Fields *string `form:"fields,omitempty" json:"fields,omitempty"`

	// Include Include all, deleted, or non-deleted entities.
	Include *GetSearchServiceByFQNParamsInclude `form:"include,omitempty" json:"include,omitempty"`
}

// GetSearchServiceByFQNParamsInclude defines parameters for GetSearchServiceByFQN.
type GetSearchServiceByFQNParamsInclude string

// DeleteSearchServiceParams defines parameters for DeleteSearchService.
type DeleteSearchServiceParams struct {
	// Recursive Recursively delete this entity and it's children. (Default `false`)
	Recursive *bool `form:"recursive,omitempty" json:"recursive,omitempty"`

	// HardDelete Hard delete the entity. (Default = `false`)
	HardDelete *bool `form:"hardDelete,omitempty" json:"hardDelete,omitempty"`
}

// GetSearchServiceByIDParams defines parameters for GetSearchServiceByID.
type GetSearchServiceByIDParams struct {
	// Fields Fields requested in the returned resource
	Fields *string `form:"fields,omitempty" json:"fields,omitempty"`

	// Include Include all, deleted, or non-deleted entities.
	Include *GetSearchServiceByIDParamsInclude `form:"include,omitempty" json:"include,omitempty"`
}

// GetSearchServiceByIDParamsInclude defines parameters for GetSearchServiceByID.
type GetSearchServiceByIDParamsInclude string

// PatchSearchService1ApplicationJSONPatchPlusJSONBody defines parameters for PatchSearchService1.
type PatchSearchService1ApplicationJSONPatchPlusJSONBody = map[string]interface{}

// ListStorageServicesParams defines parameters for ListStorageServices.
type ListStorageServicesParams struct {
	// Fields Fields requested in the returned resource
	Fields *string `form:"fields,omitempty" json:"fields,omitempty"`

	// Domain Filter services by domain
	Domain *string `form:"domain,omitempty" json:"domain,omitempty"`
	Limit  *int32  `form:"limit,omitempty" json:"limit,omitempty"`

	// Before Returns list of storage services before this cursor
	Before *string `form:"before,omitempty" json:"before,omitempty"`

	// After Returns list of storage services after this cursor
	After *string `form:"after,omitempty" json:"after,omitempty"`

	// Include Include all, deleted, or non-deleted entities.
	Include *ListStorageServicesParamsInclude `form:"include,omitempty" json:"include,omitempty"`
}

// ListStorageServicesParamsInclude defines parameters for ListStorageServices.
type ListStorageServicesParamsInclude string

// DeleteStorageServiceAsyncParams defines parameters for DeleteStorageServiceAsync.
type DeleteStorageServiceAsyncParams struct {
	// Recursive Recursively delete this entity and it's children. (Default `false`)
	Recursive *bool `form:"recursive,omitempty" json:"recursive,omitempty"`

	// HardDelete Hard delete the entity. (Default = `false`)
	HardDelete *bool `form:"hardDelete,omitempty" json:"hardDelete,omitempty"`
}

// DeleteStorageServiceByFQNParams defines parameters for DeleteStorageServiceByFQN.
type DeleteStorageServiceByFQNParams struct {
	// Recursive Recursively delete this entity and it's children. (Default `false`)
	Recursive *bool `form:"recursive,omitempty" json:"recursive,omitempty"`

	// HardDelete Hard delete the entity. (Default = `false`)
	HardDelete *bool `form:"hardDelete,omitempty" json:"hardDelete,omitempty"`
}

// PatchStorageServiceByFQNApplicationJSONPatchPlusJSONBody defines parameters for PatchStorageServiceByFQN.
type PatchStorageServiceByFQNApplicationJSONPatchPlusJSONBody = map[string]interface{}

// GetStorageServiceByFQNParams defines parameters for GetStorageServiceByFQN.
type GetStorageServiceByFQNParams struct {
	// Fields Fields requested in the returned resource
	Fields *string `form:"fields,omitempty" json:"fields,omitempty"`

	// Include Include all, deleted, or non-deleted entities.
	Include *GetStorageServiceByFQNParamsInclude `form:"include,omitempty" json:"include,omitempty"`
}

// GetStorageServiceByFQNParamsInclude defines parameters for GetStorageServiceByFQN.
type GetStorageServiceByFQNParamsInclude string

// DeleteStorageServiceParams defines parameters for DeleteStorageService.
type DeleteStorageServiceParams struct {
	// Recursive Recursively delete this entity and it's children. (Default `false`)
	Recursive *bool `form:"recursive,omitempty" json:"recursive,omitempty"`

	// HardDelete Hard delete the entity. (Default = `false`)
	HardDelete *bool `form:"hardDelete,omitempty" json:"hardDelete,omitempty"`
}

// GetStorageServiceByIDParams defines parameters for GetStorageServiceByID.
type GetStorageServiceByIDParams struct {
	// Fields Fields requested in the returned resource
	Fields *string `form:"fields,omitempty" json:"fields,omitempty"`

	// Include Include all, deleted, or non-deleted entities.
	Include *GetStorageServiceByIDParamsInclude `form:"include,omitempty" json:"include,omitempty"`
}

// GetStorageServiceByIDParamsInclude defines parameters for GetStorageServiceByID.
type GetStorageServiceByIDParamsInclude string

// PatchStorageServiceApplicationJSONPatchPlusJSONBody defines parameters for PatchStorageService.
type PatchStorageServiceApplicationJSONPatchPlusJSONBody = map[string]interface{}

// ListStoredProceduresParams defines parameters for ListStoredProcedures.
type ListStoredProceduresParams struct {
	// Fields Fields requested in the returned resource
	Fields *string `form:"fields,omitempty" json:"fields,omitempty"`

	// DatabaseSchema Filter stored procedures by database schema
	DatabaseSchema *string `form:"databaseSchema,omitempty" json:"databaseSchema,omitempty"`

	// Limit Limit the number schemas returned. (1 to 1000000, default = 10)
	Limit *int32 `form:"limit,omitempty" json:"limit,omitempty"`

	// Before Returns list of schemas before this cursor
	Before *string `form:"before,omitempty" json:"before,omitempty"`

	// After Returns list of schemas after this cursor
	After *string `form:"after,omitempty" json:"after,omitempty"`

	// Include Include all, deleted, or non-deleted entities.
	Include *ListStoredProceduresParamsInclude `form:"include,omitempty" json:"include,omitempty"`
}

// ListStoredProceduresParamsInclude defines parameters for ListStoredProcedures.
type ListStoredProceduresParamsInclude string

// DeleteStoredProcedureAsyncParams defines parameters for DeleteStoredProcedureAsync.
type DeleteStoredProcedureAsyncParams struct {
	// Recursive Recursively delete this entity and it's children. (Default `false`)
	Recursive *bool `form:"recursive,omitempty" json:"recursive,omitempty"`

	// HardDelete Hard delete the entity. (Default = `false`)
	HardDelete *bool `form:"hardDelete,omitempty" json:"hardDelete,omitempty"`
}

// DeleteDBSchemaByFQN1Params defines parameters for DeleteDBSchemaByFQN1.
type DeleteDBSchemaByFQN1Params struct {
	// HardDelete Hard delete the entity. (Default = `false`)
	HardDelete *bool `form:"hardDelete,omitempty" json:"hardDelete,omitempty"`

	// Recursive Recursively delete this entity and it's children. (Default `false`)
	Recursive *bool `form:"recursive,omitempty" json:"recursive,omitempty"`
}

// GetStoredProcedureByFQNParams defines parameters for GetStoredProcedureByFQN.
type GetStoredProcedureByFQNParams struct {
	// Fields Fields requested in the returned resource
	Fields *string `form:"fields,omitempty" json:"fields,omitempty"`

	// Include Include all, deleted, or non-deleted entities.
	Include *GetStoredProcedureByFQNParamsInclude `form:"include,omitempty" json:"include,omitempty"`
}

// GetStoredProcedureByFQNParamsInclude defines parameters for GetStoredProcedureByFQN.
type GetStoredProcedureByFQNParamsInclude string

// PatchStoredProcedureApplicationJSONPatchPlusJSONBody defines parameters for PatchStoredProcedure.
type PatchStoredProcedureApplicationJSONPatchPlusJSONBody = map[string]interface{}

// DeleteStoredProcedureParams defines parameters for DeleteStoredProcedure.
type DeleteStoredProcedureParams struct {
	// Recursive Recursively delete this entity and it's children. (Default `false`)
	Recursive *bool `form:"recursive,omitempty" json:"recursive,omitempty"`

	// HardDelete Hard delete the entity. (Default = `false`)
	HardDelete *bool `form:"hardDelete,omitempty" json:"hardDelete,omitempty"`
}

// GetStoredProcedureByIDParams defines parameters for GetStoredProcedureByID.
type GetStoredProcedureByIDParams struct {
	// Fields Fields requested in the returned resource
	Fields *string `form:"fields,omitempty" json:"fields,omitempty"`

	// Include Include all, deleted, or non-deleted entities.
	Include *GetStoredProcedureByIDParamsInclude `form:"include,omitempty" json:"include,omitempty"`
}

// GetStoredProcedureByIDParamsInclude defines parameters for GetStoredProcedureByID.
type GetStoredProcedureByIDParamsInclude string

// PatchStoredProcedure1ApplicationJSONPatchPlusJSONBody defines parameters for PatchStoredProcedure1.
type PatchStoredProcedure1ApplicationJSONPatchPlusJSONBody = map[string]interface{}

// AddFollower1JSONBody defines parameters for AddFollower1.
type AddFollower1JSONBody = openapi_types.UUID

// ListSuggestionsParams defines parameters for ListSuggestions.
type ListSuggestionsParams struct {
	// Limit Limit the number of suggestions returned. (1 to 1000000, default = 10)
	Limit *int32 `form:"limit,omitempty" json:"limit,omitempty"`

	// Before Returns list of threads before this cursor
	Before *string `form:"before,omitempty" json:"before,omitempty"`

	// After Returns list of threads after this cursor
	After *string `form:"after,omitempty" json:"after,omitempty"`

	// EntityFQN Filter suggestions by entityFQN
	EntityFQN *string `form:"entityFQN,omitempty" json:"entityFQN,omitempty"`

	// UserId Filter threads by user id or bot id. This filter requires a 'filterType' query param.
	UserId *string `form:"userId,omitempty" json:"userId,omitempty"`

	// Status Filter threads by whether they are accepted or rejected. By default status is OPEN.
	Status *string `form:"status,omitempty" json:"status,omitempty"`
}

// AcceptAllSuggestionParams defines parameters for AcceptAllSuggestion.
type AcceptAllSuggestionParams struct {
	// UserId user id
	UserId *string `form:"userId,omitempty" json:"userId,omitempty"`

	// EntityFQN fullyQualifiedName of entity
	EntityFQN *string `form:"entityFQN,omitempty" json:"entityFQN,omitempty"`

	// SuggestionType Suggestion type being accepted
	SuggestionType *string `form:"suggestionType,omitempty" json:"suggestionType,omitempty"`
}

// RejectAllSuggestionParams defines parameters for RejectAllSuggestion.
type RejectAllSuggestionParams struct {
	// UserId user id
	UserId *string `form:"userId,omitempty" json:"userId,omitempty"`

	// EntityFQN fullyQualifiedName of entity
	EntityFQN *string `form:"entityFQN,omitempty" json:"entityFQN,omitempty"`

	// SuggestionType Suggestion type being rejected
	SuggestionType *string `form:"suggestionType,omitempty" json:"suggestionType,omitempty"`
}

// ListTablesParams defines parameters for ListTables.
type ListTablesParams struct {
	// Fields Fields requested in the returned resource
	Fields *string `form:"fields,omitempty" json:"fields,omitempty"`

	// Database Filter tables by database fully qualified name
	Database *string `form:"database,omitempty" json:"database,omitempty"`

	// DatabaseSchema Filter tables by databaseSchema fully qualified name
	DatabaseSchema *string `form:"databaseSchema,omitempty" json:"databaseSchema,omitempty"`

	// IncludeEmptyTestSuite Include tables with an empty test suite (i.e. no test cases have been created for this table). Default to true
	IncludeEmptyTestSuite *bool `form:"includeEmptyTestSuite,omitempty" json:"includeEmptyTestSuite,omitempty"`

	// Limit Limit the number tables returned. (1 to 1000000, default = 10)
	Limit *int32 `form:"limit,omitempty" json:"limit,omitempty"`

	// Before Returns list of tables before this cursor
	Before *string `form:"before,omitempty" json:"before,omitempty"`

	// After Returns list of tables after this cursor
	After *string `form:"after,omitempty" json:"after,omitempty"`

	// Include Include all, deleted, or non-deleted entities.
	Include *ListTablesParamsInclude `form:"include,omitempty" json:"include,omitempty"`
}

// ListTablesParamsInclude defines parameters for ListTables.
type ListTablesParamsInclude string

// DeleteTableAsyncParams defines parameters for DeleteTableAsync.
type DeleteTableAsyncParams struct {
	// HardDelete Hard delete the entity. (Default = `false`)
	HardDelete *bool `form:"hardDelete,omitempty" json:"hardDelete,omitempty"`

	// Recursive Recursively delete this entity and it's children. (Default `false`)
	Recursive *bool `form:"recursive,omitempty" json:"recursive,omitempty"`
}

// SearchEntityRelationshipParams defines parameters for SearchEntityRelationship.
type SearchEntityRelationshipParams struct {
	// Fqn fqn
	Fqn *string `form:"fqn,omitempty" json:"fqn,omitempty"`

	// UpstreamDepth upstreamDepth
	UpstreamDepth *int32 `form:"upstreamDepth,omitempty" json:"upstreamDepth,omitempty"`

	// DownstreamDepth downstreamDepth
	DownstreamDepth *int32 `form:"downstreamDepth,omitempty" json:"downstreamDepth,omitempty"`

	// QueryFilter Elasticsearch query that will be combined with the query_string query generator from the `query` argument
	QueryFilter *string `form:"query_filter,omitempty" json:"query_filter,omitempty"`

	// IncludeDeleted Filter documents by deleted param. By default deleted is false
	IncludeDeleted *bool `form:"includeDeleted,omitempty" json:"includeDeleted,omitempty"`
}

// DeleteTable1Params defines parameters for DeleteTable1.
type DeleteTable1Params struct {
	// HardDelete Hard delete the entity. (Default = `false`)
	HardDelete *bool `form:"hardDelete,omitempty" json:"hardDelete,omitempty"`

	// Recursive Recursively delete this entity and it's children. (Default `false`)
	Recursive *bool `form:"recursive,omitempty" json:"recursive,omitempty"`
}

// GetTableByFQNParams defines parameters for GetTableByFQN.
type GetTableByFQNParams struct {
	// Fields Fields requested in the returned resource
	Fields *string `form:"fields,omitempty" json:"fields,omitempty"`

	// Include Include all, deleted, or non-deleted entities.
	Include *GetTableByFQNParamsInclude `form:"include,omitempty" json:"include,omitempty"`
}

// GetTableByFQNParamsInclude defines parameters for GetTableByFQN.
type GetTableByFQNParamsInclude string

// PatchTableApplicationJSONPatchPlusJSONBody defines parameters for PatchTable.
type PatchTableApplicationJSONPatchPlusJSONBody = map[string]interface{}

// PatchTableParams defines parameters for PatchTable.
type PatchTableParams struct {
	// ChangeSource Context of the change
	ChangeSource *PatchTableParamsChangeSource `form:"changeSource,omitempty" json:"changeSource,omitempty"`
}

// PatchTableParamsChangeSource defines parameters for PatchTable.
type PatchTableParamsChangeSource string

// ImportTableTextBody defines parameters for ImportTable.
type ImportTableTextBody = string

// ImportTableParams defines parameters for ImportTable.
type ImportTableParams struct {
	// DryRun Dry-run when true is used for validating the CSV without really importing it. (default=true)
	DryRun *bool `form:"dryRun,omitempty" json:"dryRun,omitempty"`
}

// ImportTableAsyncTextBody defines parameters for ImportTableAsync.
type ImportTableAsyncTextBody = string

// ImportTableAsyncParams defines parameters for ImportTableAsync.
type ImportTableAsyncParams struct {
	// DryRun Dry-run when true is used for validating the CSV without really importing it. (default=true)
	DryRun *bool `form:"dryRun,omitempty" json:"dryRun,omitempty"`
}

// ListColumnProfilesParams defines parameters for ListColumnProfiles.
type ListColumnProfilesParams struct {
	// StartTs Filter table/column profiles after the given start timestamp
	StartTs float32 `form:"startTs" json:"startTs"`

	// EndTs Filter table/column profiles before the given end timestamp
	EndTs float32 `form:"endTs" json:"endTs"`
}

// ListSystemProfilesParams defines parameters for ListSystemProfiles.
type ListSystemProfilesParams struct {
	// StartTs Filter system profiles after the given start timestamp
	StartTs float32 `form:"startTs" json:"startTs"`

	// EndTs Filter system profiles before the given end timestamp
	EndTs float32 `form:"endTs" json:"endTs"`
}

// ListProfilesParams defines parameters for ListProfiles.
type ListProfilesParams struct {
	// StartTs Filter table/column profiles after the given start timestamp
	StartTs *float32 `form:"startTs,omitempty" json:"startTs,omitempty"`

	// EndTs Filter table/column profiles before the given end timestamp
	EndTs *float32 `form:"endTs,omitempty" json:"endTs,omitempty"`
}

// DeleteTableParams defines parameters for DeleteTable.
type DeleteTableParams struct {
	// HardDelete Hard delete the entity. (Default = `false`)
	HardDelete *bool `form:"hardDelete,omitempty" json:"hardDelete,omitempty"`

	// Recursive Recursively delete this entity and it's children. (Default `false`)
	Recursive *bool `form:"recursive,omitempty" json:"recursive,omitempty"`
}

// GetTableByIDParams defines parameters for GetTableByID.
type GetTableByIDParams struct {
	// Fields Fields requested in the returned resource
	Fields *string `form:"fields,omitempty" json:"fields,omitempty"`

	// Include Include all, deleted, or non-deleted entities.
	Include *GetTableByIDParamsInclude `form:"include,omitempty" json:"include,omitempty"`
}

// GetTableByIDParamsInclude defines parameters for GetTableByID.
type GetTableByIDParamsInclude string

// PatchTable1ApplicationJSONPatchPlusJSONBody defines parameters for PatchTable1.
type PatchTable1ApplicationJSONPatchPlusJSONBody = map[string]interface{}

// PatchTable1Params defines parameters for PatchTable1.
type PatchTable1Params struct {
	// ChangeSource Optional source of the change. If the change is made by a user use 'Manual'.
	ChangeSource *PatchTable1ParamsChangeSource `form:"changeSource,omitempty" json:"changeSource,omitempty"`
}

// PatchTable1ParamsChangeSource defines parameters for PatchTable1.
type PatchTable1ParamsChangeSource string

// AddFollowerToTableJSONBody defines parameters for AddFollowerToTable.
type AddFollowerToTableJSONBody = string

// ListTagsParams defines parameters for ListTags.
type ListTagsParams struct {
	// Parent List tags filtered by children of tag identified by fqn given in `parent` parameter. The fqn can either be classificationName or fqn of a parent tag
	Parent *string `form:"parent,omitempty" json:"parent,omitempty"`

	// Fields Fields requested in the returned resource
	Fields *string `form:"fields,omitempty" json:"fields,omitempty"`

	// Disabled Filter Disabled Classifications
	Disabled *string `form:"disabled,omitempty" json:"disabled,omitempty"`

	// Limit Limit the number tags returned. (1 to 1000000, default = 10)
	Limit *int32 `form:"limit,omitempty" json:"limit,omitempty"`

	// Before Returns list of tags before this cursor
	Before *string `form:"before,omitempty" json:"before,omitempty"`

	// After Returns list of tags after this cursor
	After *string `form:"after,omitempty" json:"after,omitempty"`

	// Include Include all, deleted, or non-deleted entities.
	Include *ListTagsParamsInclude `form:"include,omitempty" json:"include,omitempty"`
}

// ListTagsParamsInclude defines parameters for ListTags.
type ListTagsParamsInclude string

// DeleteTagAsyncParams defines parameters for DeleteTagAsync.
type DeleteTagAsyncParams struct {
	// Recursive Recursively delete this entity and it's children. (Default `false`)
	Recursive *bool `form:"recursive,omitempty" json:"recursive,omitempty"`

	// HardDelete Hard delete the entity. (Default = `false`)
	HardDelete *bool `form:"hardDelete,omitempty" json:"hardDelete,omitempty"`
}

// DeleteTagByNameParams defines parameters for DeleteTagByName.
type DeleteTagByNameParams struct {
	// HardDelete Hard delete the entity. (Default = `false`)
	HardDelete *bool `form:"hardDelete,omitempty" json:"hardDelete,omitempty"`
}

// GetTagByFQNParams defines parameters for GetTagByFQN.
type GetTagByFQNParams struct {
	// Fields Fields requested in the returned resource
	Fields *string `form:"fields,omitempty" json:"fields,omitempty"`

	// Include Include all, deleted, or non-deleted entities.
	Include *GetTagByFQNParamsInclude `form:"include,omitempty" json:"include,omitempty"`
}

// GetTagByFQNParamsInclude defines parameters for GetTagByFQN.
type GetTagByFQNParamsInclude string

// PatchTagApplicationJSONPatchPlusJSONBody defines parameters for PatchTag.
type PatchTagApplicationJSONPatchPlusJSONBody = map[string]interface{}

// DeleteTagParams defines parameters for DeleteTag.
type DeleteTagParams struct {
	// Recursive Recursively delete this entity and it's children. (Default `false`)
	Recursive *bool `form:"recursive,omitempty" json:"recursive,omitempty"`

	// HardDelete Hard delete the entity. (Default = `false`)
	HardDelete *bool `form:"hardDelete,omitempty" json:"hardDelete,omitempty"`
}

// GetTagByIDParams defines parameters for GetTagByID.
type GetTagByIDParams struct {
	// Fields Fields requested in the returned resource
	Fields *string `form:"fields,omitempty" json:"fields,omitempty"`

	// Include Include all, deleted, or non-deleted entities.
	Include *GetTagByIDParamsInclude `form:"include,omitempty" json:"include,omitempty"`
}

// GetTagByIDParamsInclude defines parameters for GetTagByID.
type GetTagByIDParamsInclude string

// PatchTag1ApplicationJSONPatchPlusJSONBody defines parameters for PatchTag1.
type PatchTag1ApplicationJSONPatchPlusJSONBody = map[string]interface{}

// ListTeamsParams defines parameters for ListTeams.
type ListTeamsParams struct {
	// Fields Fields requested in the returned resource
	Fields *string `form:"fields,omitempty" json:"fields,omitempty"`

	// Limit Limit the number of teams returned. (1 to 1000000, default = 10)
	Limit *int32 `form:"limit,omitempty" json:"limit,omitempty"`

	// Before Returns list of teams before this cursor
	Before *string `form:"before,omitempty" json:"before,omitempty"`

	// After Returns list of teams after this cursor
	After *string `form:"after,omitempty" json:"after,omitempty"`

	// ParentTeam Filter the results by parent team name
	ParentTeam *string `form:"parentTeam,omitempty" json:"parentTeam,omitempty"`

	// IsJoinable Filter the results by whether the team can be joined by any user or not
	IsJoinable *bool `form:"isJoinable,omitempty" json:"isJoinable,omitempty"`

	// Include Include all, deleted, or non-deleted entities.
	Include *ListTeamsParamsInclude `form:"include,omitempty" json:"include,omitempty"`
}

// ListTeamsParamsInclude defines parameters for ListTeams.
type ListTeamsParamsInclude string

// DeleteTeamAsyncParams defines parameters for DeleteTeamAsync.
type DeleteTeamAsyncParams struct {
	// Recursive Recursively delete this team and it's children. (Default `false`)
	Recursive *bool `form:"recursive,omitempty" json:"recursive,omitempty"`

	// HardDelete Hard delete the entity. (Default = `false`)
	HardDelete *bool `form:"hardDelete,omitempty" json:"hardDelete,omitempty"`
}

// ListTeamsHierarchyParams defines parameters for ListTeamsHierarchy.
type ListTeamsHierarchyParams struct {
	// Limit Limit the number of teams returned. (1 to 1000000, default = 10)
	Limit *int32 `form:"limit,omitempty" json:"limit,omitempty"`

	// IsJoinable Filter the results by whether the team can be joined by any user or not
	IsJoinable *bool `form:"isJoinable,omitempty" json:"isJoinable,omitempty"`
}

// PatchTeamApplicationJSONPatchPlusJSONBody defines parameters for PatchTeam.
type PatchTeamApplicationJSONPatchPlusJSONBody = map[string]interface{}

// DeleteTeamByNameParams defines parameters for DeleteTeamByName.
type DeleteTeamByNameParams struct {
	// HardDelete Hard delete the entity. (Default = `false`)
	HardDelete *bool `form:"hardDelete,omitempty" json:"hardDelete,omitempty"`
}

// GetTeamByFQNParams defines parameters for GetTeamByFQN.
type GetTeamByFQNParams struct {
	// Fields Fields requested in the returned resource
	Fields *string `form:"fields,omitempty" json:"fields,omitempty"`

	// Include Include all, deleted, or non-deleted entities.
	Include *GetTeamByFQNParamsInclude `form:"include,omitempty" json:"include,omitempty"`
}

// GetTeamByFQNParamsInclude defines parameters for GetTeamByFQN.
type GetTeamByFQNParamsInclude string

// ImportTeamsTextBody defines parameters for ImportTeams.
type ImportTeamsTextBody = string

// ImportTeamsParams defines parameters for ImportTeams.
type ImportTeamsParams struct {
	// DryRun Dry-run when true is used for validating the CSV without really importing it. (default=true)
	DryRun *bool `form:"dryRun,omitempty" json:"dryRun,omitempty"`
}

// ImportTeamsAsyncTextBody defines parameters for ImportTeamsAsync.
type ImportTeamsAsyncTextBody = string

// ImportTeamsAsyncParams defines parameters for ImportTeamsAsync.
type ImportTeamsAsyncParams struct {
	// DryRun Dry-run when true is used for validating the CSV without really importing it. (default=true)
	DryRun *bool `form:"dryRun,omitempty" json:"dryRun,omitempty"`
}

// DeleteTeamParams defines parameters for DeleteTeam.
type DeleteTeamParams struct {
	// Recursive Recursively delete this team and it's children. (Default `false`)
	Recursive *bool `form:"recursive,omitempty" json:"recursive,omitempty"`

	// HardDelete Hard delete the entity. (Default = `false`)
	HardDelete *bool `form:"hardDelete,omitempty" json:"hardDelete,omitempty"`
}

// GetTeamByIDParams defines parameters for GetTeamByID.
type GetTeamByIDParams struct {
	// Fields Fields requested in the returned resource
	Fields *string `form:"fields,omitempty" json:"fields,omitempty"`

	// Include Include all, deleted, or non-deleted entities.
	Include *GetTeamByIDParamsInclude `form:"include,omitempty" json:"include,omitempty"`
}

// GetTeamByIDParamsInclude defines parameters for GetTeamByID.
type GetTeamByIDParamsInclude string

// PatchTeam1ApplicationJSONPatchPlusJSONBody defines parameters for PatchTeam1.
type PatchTeam1ApplicationJSONPatchPlusJSONBody = map[string]interface{}

// UpdateTeamUsersJSONBody defines parameters for UpdateTeamUsers.
type UpdateTeamUsersJSONBody = []EntityReference

// ListTopicsParams defines parameters for ListTopics.
type ListTopicsParams struct {
	// Fields Fields requested in the returned resource
	Fields *string `form:"fields,omitempty" json:"fields,omitempty"`

	// Service Filter topics by service name
	Service *string `form:"service,omitempty" json:"service,omitempty"`

	// Limit Limit the number topics returned. (1 to 1000000, default = 10)
	Limit *int32 `form:"limit,omitempty" json:"limit,omitempty"`

	// Before Returns list of topics before this cursor
	Before *string `form:"before,omitempty" json:"before,omitempty"`

	// After Returns list of topics after this cursor
	After *string `form:"after,omitempty" json:"after,omitempty"`

	// Include Include all, deleted, or non-deleted entities.
	Include *ListTopicsParamsInclude `form:"include,omitempty" json:"include,omitempty"`
}

// ListTopicsParamsInclude defines parameters for ListTopics.
type ListTopicsParamsInclude string

// DeleteTopicAsyncParams defines parameters for DeleteTopicAsync.
type DeleteTopicAsyncParams struct {
	// HardDelete Hard delete the entity. (Default = `false`)
	HardDelete *bool `form:"hardDelete,omitempty" json:"hardDelete,omitempty"`
}

// DeleteTopicByFQNParams defines parameters for DeleteTopicByFQN.
type DeleteTopicByFQNParams struct {
	// HardDelete Hard delete the entity. (Default = `false`)
	HardDelete *bool `form:"hardDelete,omitempty" json:"hardDelete,omitempty"`
}

// GetTopicByFQNParams defines parameters for GetTopicByFQN.
type GetTopicByFQNParams struct {
	// Fields Fields requested in the returned resource
	Fields *string `form:"fields,omitempty" json:"fields,omitempty"`

	// Include Include all, deleted, or non-deleted entities.
	Include *GetTopicByFQNParamsInclude `form:"include,omitempty" json:"include,omitempty"`
}

// GetTopicByFQNParamsInclude defines parameters for GetTopicByFQN.
type GetTopicByFQNParamsInclude string

// PatchTopicApplicationJSONPatchPlusJSONBody defines parameters for PatchTopic.
type PatchTopicApplicationJSONPatchPlusJSONBody = map[string]interface{}

// DeleteTopicParams defines parameters for DeleteTopic.
type DeleteTopicParams struct {
	// HardDelete Hard delete the entity. (Default = `false`)
	HardDelete *bool `form:"hardDelete,omitempty" json:"hardDelete,omitempty"`
}

// Get7Params defines parameters for Get7.
type Get7Params struct {
	// Fields Fields requested in the returned resource
	Fields *string `form:"fields,omitempty" json:"fields,omitempty"`

	// Include Include all, deleted, or non-deleted entities.
	Include *Get7ParamsInclude `form:"include,omitempty" json:"include,omitempty"`
}

// Get7ParamsInclude defines parameters for Get7.
type Get7ParamsInclude string

// PatchTopic1ApplicationJSONPatchPlusJSONBody defines parameters for PatchTopic1.
type PatchTopic1ApplicationJSONPatchPlusJSONBody = map[string]interface{}

// AddFollower8JSONBody defines parameters for AddFollower8.
type AddFollower8JSONBody = openapi_types.UUID

// GetEntityUsageByFQNParams defines parameters for GetEntityUsageByFQN.
type GetEntityUsageByFQNParams struct {
	// Days Usage for number of days going back from the given date (default=1, min=1, max=30)
	Days *int32 `form:"days,omitempty" json:"days,omitempty"`

	// Date Usage for number of days going back from this date in ISO 8601 format (default = currentDate)
	Date *string `form:"date,omitempty" json:"date,omitempty"`
}

// GetEntityUsageByIDParams defines parameters for GetEntityUsageByID.
type GetEntityUsageByIDParams struct {
	// Days Usage for number of days going back from the given date (default=1, min=1, max=30)
	Days *int32 `form:"days,omitempty" json:"days,omitempty"`

	// Date Usage for number of days going back from this date in ISO 8601 format. (default = currentDate)
	Date *string `form:"date,omitempty" json:"date,omitempty"`
}

// ListUsersParams defines parameters for ListUsers.
type ListUsersParams struct {
	// Fields Fields requested in the returned resource
	Fields *string `form:"fields,omitempty" json:"fields,omitempty"`

	// Team Filter users by team
	Team *string `form:"team,omitempty" json:"team,omitempty"`

	// Limit Limit the number users returned. (1 to 1000000, default = 10)
	Limit *int32 `form:"limit,omitempty" json:"limit,omitempty"`

	// Before Returns list of users before this cursor
	Before *string `form:"before,omitempty" json:"before,omitempty"`

	// After Returns list of users after this cursor
	After *string `form:"after,omitempty" json:"after,omitempty"`

	// IsAdmin Returns list of admin users if set to true
	IsAdmin *bool `form:"isAdmin,omitempty" json:"isAdmin,omitempty"`

	// IsBot Returns list of bot users if set to true
	IsBot *bool `form:"isBot,omitempty" json:"isBot,omitempty"`

	// Include Include all, deleted, or non-deleted entities.
	Include *ListUsersParamsInclude `form:"include,omitempty" json:"include,omitempty"`
}

// ListUsersParamsInclude defines parameters for ListUsers.
type ListUsersParamsInclude string

// DeleteUserAsyncParams defines parameters for DeleteUserAsync.
type DeleteUserAsyncParams struct {
	// HardDelete Hard delete the entity. (Default = `false`)
	HardDelete *bool `form:"hardDelete,omitempty" json:"hardDelete,omitempty"`
}

// ExportUsersParams defines parameters for ExportUsers.
type ExportUsersParams struct {
	// Team Name of the team to under which the users are imported to
	Team string `form:"team" json:"team"`
}

// ExportUsers1Params defines parameters for ExportUsers1.
type ExportUsers1Params struct {
	// Team Name of the team to under which the users are imported to
	Team string `form:"team" json:"team"`
}

// ImportTeams1TextBody defines parameters for ImportTeams1.
type ImportTeams1TextBody = string

// ImportTeams1Params defines parameters for ImportTeams1.
type ImportTeams1Params struct {
	// Team Name of the team to under which the users are imported to
	Team string `form:"team" json:"team"`

	// DryRun Dry-run when true is used for validating the CSV without really importing it. (default=true)
	DryRun *bool `form:"dryRun,omitempty" json:"dryRun,omitempty"`
}

// ImportTeamsAsync1TextBody defines parameters for ImportTeamsAsync1.
type ImportTeamsAsync1TextBody = string

// ImportTeamsAsync1Params defines parameters for ImportTeamsAsync1.
type ImportTeamsAsync1Params struct {
	// Team Name of the team to under which the users are imported to
	Team string `form:"team" json:"team"`

	// DryRun Dry-run when true is used for validating the CSV without really importing it. (default=true)
	DryRun *bool `form:"dryRun,omitempty" json:"dryRun,omitempty"`
}

// GetCurrentLoggedInUserParams defines parameters for GetCurrentLoggedInUser.
type GetCurrentLoggedInUserParams struct {
	// Fields Fields requested in the returned resource
	Fields *string `form:"fields,omitempty" json:"fields,omitempty"`
}

// DeleteUserByNameParams defines parameters for DeleteUserByName.
type DeleteUserByNameParams struct {
	// HardDelete Hard delete the entity. (Default = `false`)
	HardDelete *bool `form:"hardDelete,omitempty" json:"hardDelete,omitempty"`
}

// GetUserByFQNParams defines parameters for GetUserByFQN.
type GetUserByFQNParams struct {
	// Fields Fields requested in the returned resource
	Fields *string `form:"fields,omitempty" json:"fields,omitempty"`

	// Include Include all, deleted, or non-deleted entities.
	Include *GetUserByFQNParamsInclude `form:"include,omitempty" json:"include,omitempty"`
}

// GetUserByFQNParamsInclude defines parameters for GetUserByFQN.
type GetUserByFQNParamsInclude string

// ConfirmUserEmailParams defines parameters for ConfirmUserEmail.
type ConfirmUserEmailParams struct {
	// Token Token sent for Email Confirmation
	Token *string `form:"token,omitempty" json:"token,omitempty"`
}

// ResendRegistrationTokenParams defines parameters for ResendRegistrationToken.
type ResendRegistrationTokenParams struct {
	// User Token sent for Email Confirmation Earlier
	User *string `form:"user,omitempty" json:"user,omitempty"`
}

// GetPersonalAccessTokenParams defines parameters for GetPersonalAccessToken.
type GetPersonalAccessTokenParams struct {
	// Username User Name of the User for which to get. (Default = `false`)
	Username *string `form:"username,omitempty" json:"username,omitempty"`
}

// RevokePersonalAccessTokenParams defines parameters for RevokePersonalAccessToken.
type RevokePersonalAccessTokenParams struct {
	// Username Username in case admin is revoking. (Default = `false`)
	Username *string `form:"username,omitempty" json:"username,omitempty"`

	// RemoveAll Remove All tokens of the user. (Default = `false`)
	RemoveAll *bool `form:"removeAll,omitempty" json:"removeAll,omitempty"`
}

// DeleteUserParams defines parameters for DeleteUser.
type DeleteUserParams struct {
	// HardDelete Hard delete the entity. (Default = `false`)
	HardDelete *bool `form:"hardDelete,omitempty" json:"hardDelete,omitempty"`
}

// GetUserByIDParams defines parameters for GetUserByID.
type GetUserByIDParams struct {
	// Fields Fields requested in the returned resource
	Fields *string `form:"fields,omitempty" json:"fields,omitempty"`

	// Include Include all, deleted, or non-deleted entities.
	Include *GetUserByIDParamsInclude `form:"include,omitempty" json:"include,omitempty"`
}

// GetUserByIDParamsInclude defines parameters for GetUserByID.
type GetUserByIDParamsInclude string

// PatchUserApplicationJSONPatchPlusJSONBody defines parameters for PatchUser.
type PatchUserApplicationJSONPatchPlusJSONBody = map[string]interface{}

// CreateAPICollectionJSONRequestBody defines body for CreateAPICollection for application/json ContentType.
type CreateAPICollectionJSONRequestBody = CreateAPICollection

// CreateOrUpdateAPICollectionJSONRequestBody defines body for CreateOrUpdateAPICollection for application/json ContentType.
type CreateOrUpdateAPICollectionJSONRequestBody = CreateAPICollection

// PatchAPICollectionApplicationJSONPatchPlusJSONRequestBody defines body for PatchAPICollection for application/json-patch+json ContentType.
type PatchAPICollectionApplicationJSONPatchPlusJSONRequestBody = PatchAPICollectionApplicationJSONPatchPlusJSONBody

// RestoreJSONRequestBody defines body for Restore for application/json ContentType.
type RestoreJSONRequestBody = RestoreEntity

// PatchAPICollection1ApplicationJSONPatchPlusJSONRequestBody defines body for PatchAPICollection1 for application/json-patch+json ContentType.
type PatchAPICollection1ApplicationJSONPatchPlusJSONRequestBody = PatchAPICollection1ApplicationJSONPatchPlusJSONBody

// UpdateVoteForAPICollectionJSONRequestBody defines body for UpdateVoteForAPICollection for application/json ContentType.
type UpdateVoteForAPICollectionJSONRequestBody = VoteRequest

// CreateAPIEndpointJSONRequestBody defines body for CreateAPIEndpoint for application/json ContentType.
type CreateAPIEndpointJSONRequestBody = CreateAPIEndpoint

// CreateOrUpdateAPIEndpointJSONRequestBody defines body for CreateOrUpdateAPIEndpoint for application/json ContentType.
type CreateOrUpdateAPIEndpointJSONRequestBody = CreateAPIEndpoint

// PatchAPIEndpointApplicationJSONPatchPlusJSONRequestBody defines body for PatchAPIEndpoint for application/json-patch+json ContentType.
type PatchAPIEndpointApplicationJSONPatchPlusJSONRequestBody = PatchAPIEndpointApplicationJSONPatchPlusJSONBody

// Restore1JSONRequestBody defines body for Restore1 for application/json ContentType.
type Restore1JSONRequestBody = RestoreEntity

// PatchAPIEndpoint1ApplicationJSONPatchPlusJSONRequestBody defines body for PatchAPIEndpoint1 for application/json-patch+json ContentType.
type PatchAPIEndpoint1ApplicationJSONPatchPlusJSONRequestBody = PatchAPIEndpoint1ApplicationJSONPatchPlusJSONBody

// AddFollowerJSONRequestBody defines body for AddFollower for application/json ContentType.
type AddFollowerJSONRequestBody = AddFollowerJSONBody

// UpdateVoteForAPIEndpointJSONRequestBody defines body for UpdateVoteForAPIEndpoint for application/json ContentType.
type UpdateVoteForAPIEndpointJSONRequestBody = VoteRequest

// CreateApplication1JSONRequestBody defines body for CreateApplication1 for application/json ContentType.
type CreateApplication1JSONRequestBody = CreateApp

// CreateOrUpdateApp1JSONRequestBody defines body for CreateOrUpdateApp1 for application/json ContentType.
type CreateOrUpdateApp1JSONRequestBody = CreateApp

// CreateApplicationJSONRequestBody defines body for CreateApplication for application/json ContentType.
type CreateApplicationJSONRequestBody = CreateAppMarketPlaceDefinitionReq

// CreateOrUpdateAppJSONRequestBody defines body for CreateOrUpdateApp for application/json ContentType.
type CreateOrUpdateAppJSONRequestBody = CreateAppMarketPlaceDefinitionReq

// PatchApplicationApplicationJSONPatchPlusJSONRequestBody defines body for PatchApplication for application/json-patch+json ContentType.
type PatchApplicationApplicationJSONPatchPlusJSONRequestBody = PatchApplicationApplicationJSONPatchPlusJSONBody

// Restore2JSONRequestBody defines body for Restore2 for application/json ContentType.
type Restore2JSONRequestBody = RestoreEntity

// PatchApplication1ApplicationJSONPatchPlusJSONRequestBody defines body for PatchApplication1 for application/json-patch+json ContentType.
type PatchApplication1ApplicationJSONPatchPlusJSONRequestBody = PatchApplication1ApplicationJSONPatchPlusJSONBody

// PatchApplication2ApplicationJSONPatchPlusJSONRequestBody defines body for PatchApplication2 for application/json-patch+json ContentType.
type PatchApplication2ApplicationJSONPatchPlusJSONRequestBody = PatchApplication2ApplicationJSONPatchPlusJSONBody

// Restore3JSONRequestBody defines body for Restore3 for application/json ContentType.
type Restore3JSONRequestBody = RestoreEntity

// TriggerApplicationRunJSONRequestBody defines body for TriggerApplicationRun for application/json ContentType.
type TriggerApplicationRunJSONRequestBody TriggerApplicationRunJSONBody

// PatchApplication3ApplicationJSONPatchPlusJSONRequestBody defines body for PatchApplication3 for application/json-patch+json ContentType.
type PatchApplication3ApplicationJSONPatchPlusJSONRequestBody = PatchApplication3ApplicationJSONPatchPlusJSONBody

// CreateBotJSONRequestBody defines body for CreateBot for application/json ContentType.
type CreateBotJSONRequestBody = CreateBot

// CreateOrUpdateBotJSONRequestBody defines body for CreateOrUpdateBot for application/json ContentType.
type CreateOrUpdateBotJSONRequestBody = CreateBot

// PatchBotApplicationJSONPatchPlusJSONRequestBody defines body for PatchBot for application/json-patch+json ContentType.
type PatchBotApplicationJSONPatchPlusJSONRequestBody = PatchBotApplicationJSONPatchPlusJSONBody

// Restore4JSONRequestBody defines body for Restore4 for application/json ContentType.
type Restore4JSONRequestBody = RestoreEntity

// PatchBot1ApplicationJSONPatchPlusJSONRequestBody defines body for PatchBot1 for application/json-patch+json ContentType.
type PatchBot1ApplicationJSONPatchPlusJSONRequestBody = PatchBot1ApplicationJSONPatchPlusJSONBody

// CreateChartJSONRequestBody defines body for CreateChart for application/json ContentType.
type CreateChartJSONRequestBody = CreateChart

// CreateOrUpdateChartJSONRequestBody defines body for CreateOrUpdateChart for application/json ContentType.
type CreateOrUpdateChartJSONRequestBody = CreateChart

// PatchChartApplicationJSONPatchPlusJSONRequestBody defines body for PatchChart for application/json-patch+json ContentType.
type PatchChartApplicationJSONPatchPlusJSONRequestBody = PatchChartApplicationJSONPatchPlusJSONBody

// Restore5JSONRequestBody defines body for Restore5 for application/json ContentType.
type Restore5JSONRequestBody = RestoreEntity

// PatchChart1ApplicationJSONPatchPlusJSONRequestBody defines body for PatchChart1 for application/json-patch+json ContentType.
type PatchChart1ApplicationJSONPatchPlusJSONRequestBody = PatchChart1ApplicationJSONPatchPlusJSONBody

// AddFollowerToChartJSONRequestBody defines body for AddFollowerToChart for application/json ContentType.
type AddFollowerToChartJSONRequestBody = AddFollowerToChartJSONBody

// UpdateVoteForEntityJSONRequestBody defines body for UpdateVoteForEntity for application/json ContentType.
type UpdateVoteForEntityJSONRequestBody = VoteRequest

// CreateClassificationJSONRequestBody defines body for CreateClassification for application/json ContentType.
type CreateClassificationJSONRequestBody = CreateClassification

// CreateOrUpdateClassificationJSONRequestBody defines body for CreateOrUpdateClassification for application/json ContentType.
type CreateOrUpdateClassificationJSONRequestBody = CreateClassification

// PatchClassificationApplicationJSONPatchPlusJSONRequestBody defines body for PatchClassification for application/json-patch+json ContentType.
type PatchClassificationApplicationJSONPatchPlusJSONRequestBody = PatchClassificationApplicationJSONPatchPlusJSONBody

// RestoreClassificationJSONRequestBody defines body for RestoreClassification for application/json ContentType.
type RestoreClassificationJSONRequestBody = RestoreEntity

// PatchClassification1ApplicationJSONPatchPlusJSONRequestBody defines body for PatchClassification1 for application/json-patch+json ContentType.
type PatchClassification1ApplicationJSONPatchPlusJSONRequestBody = PatchClassification1ApplicationJSONPatchPlusJSONBody

// CreateContainerJSONRequestBody defines body for CreateContainer for application/json ContentType.
type CreateContainerJSONRequestBody = CreateContainer

// CreateOrUpdateContainerJSONRequestBody defines body for CreateOrUpdateContainer for application/json ContentType.
type CreateOrUpdateContainerJSONRequestBody = CreateContainer

// PatchContainerApplicationJSONPatchPlusJSONRequestBody defines body for PatchContainer for application/json-patch+json ContentType.
type PatchContainerApplicationJSONPatchPlusJSONRequestBody = PatchContainerApplicationJSONPatchPlusJSONBody

// Restore34JSONRequestBody defines body for Restore34 for application/json ContentType.
type Restore34JSONRequestBody = RestoreEntity

// PatchContainer1ApplicationJSONPatchPlusJSONRequestBody defines body for PatchContainer1 for application/json-patch+json ContentType.
type PatchContainer1ApplicationJSONPatchPlusJSONRequestBody = PatchContainer1ApplicationJSONPatchPlusJSONBody

// AddFollower7JSONRequestBody defines body for AddFollower7 for application/json ContentType.
type AddFollower7JSONRequestBody = AddFollower7JSONBody

// UpdateVoteForEntity14JSONRequestBody defines body for UpdateVoteForEntity14 for application/json ContentType.
type UpdateVoteForEntity14JSONRequestBody = VoteRequest

// CreateDataModelJSONRequestBody defines body for CreateDataModel for application/json ContentType.
type CreateDataModelJSONRequestBody = CreateDashboardDataModel

// CreateOrUpdateDataModelJSONRequestBody defines body for CreateOrUpdateDataModel for application/json ContentType.
type CreateOrUpdateDataModelJSONRequestBody = CreateDashboardDataModel

// PatchDataModelApplicationJSONPatchPlusJSONRequestBody defines body for PatchDataModel for application/json-patch+json ContentType.
type PatchDataModelApplicationJSONPatchPlusJSONRequestBody = PatchDataModelApplicationJSONPatchPlusJSONBody

// Restore11JSONRequestBody defines body for Restore11 for application/json ContentType.
type Restore11JSONRequestBody = RestoreEntity

// PatchDataModel1ApplicationJSONPatchPlusJSONRequestBody defines body for PatchDataModel1 for application/json-patch+json ContentType.
type PatchDataModel1ApplicationJSONPatchPlusJSONRequestBody = PatchDataModel1ApplicationJSONPatchPlusJSONBody

// AddFollowerToDataModelJSONRequestBody defines body for AddFollowerToDataModel for application/json ContentType.
type AddFollowerToDataModelJSONRequestBody = AddFollowerToDataModelJSONBody

// UpdateVoteForEntity6JSONRequestBody defines body for UpdateVoteForEntity6 for application/json ContentType.
type UpdateVoteForEntity6JSONRequestBody = VoteRequest

// CreateDashboardJSONRequestBody defines body for CreateDashboard for application/json ContentType.
type CreateDashboardJSONRequestBody = CreateDashboard

// CreateOrUpdateDashboardJSONRequestBody defines body for CreateOrUpdateDashboard for application/json ContentType.
type CreateOrUpdateDashboardJSONRequestBody = CreateDashboard

// PatchDashboardApplicationJSONPatchPlusJSONRequestBody defines body for PatchDashboard for application/json-patch+json ContentType.
type PatchDashboardApplicationJSONPatchPlusJSONRequestBody = PatchDashboardApplicationJSONPatchPlusJSONBody

// Restore6JSONRequestBody defines body for Restore6 for application/json ContentType.
type Restore6JSONRequestBody = RestoreEntity

// PatchDashboard1ApplicationJSONPatchPlusJSONRequestBody defines body for PatchDashboard1 for application/json-patch+json ContentType.
type PatchDashboard1ApplicationJSONPatchPlusJSONRequestBody = PatchDashboard1ApplicationJSONPatchPlusJSONBody

// AddFollowerToDashboardJSONRequestBody defines body for AddFollowerToDashboard for application/json ContentType.
type AddFollowerToDashboardJSONRequestBody = AddFollowerToDashboardJSONBody

// UpdateVoteForEntity1JSONRequestBody defines body for UpdateVoteForEntity1 for application/json ContentType.
type UpdateVoteForEntity1JSONRequestBody = VoteRequest

// CreateDataProductJSONRequestBody defines body for CreateDataProduct for application/json ContentType.
type CreateDataProductJSONRequestBody = CreateDataProduct

// CreateOrUpdateDataProductJSONRequestBody defines body for CreateOrUpdateDataProduct for application/json ContentType.
type CreateOrUpdateDataProductJSONRequestBody = CreateDataProduct

// PatchDataProductApplicationJSONPatchPlusJSONRequestBody defines body for PatchDataProduct for application/json-patch+json ContentType.
type PatchDataProductApplicationJSONPatchPlusJSONRequestBody = PatchDataProductApplicationJSONPatchPlusJSONBody

// PatchDataProduct1ApplicationJSONPatchPlusJSONRequestBody defines body for PatchDataProduct1 for application/json-patch+json ContentType.
type PatchDataProduct1ApplicationJSONPatchPlusJSONRequestBody = PatchDataProduct1ApplicationJSONPatchPlusJSONBody

// BulkAddAssetsJSONRequestBody defines body for BulkAddAssets for application/json ContentType.
type BulkAddAssetsJSONRequestBody = BulkAssets

// BulkRemoveAssetsJSONRequestBody defines body for BulkRemoveAssets for application/json ContentType.
type BulkRemoveAssetsJSONRequestBody = BulkAssets

// CreateTestCaseJSONRequestBody defines body for CreateTestCase for application/json ContentType.
type CreateTestCaseJSONRequestBody = CreateTestCase

// CreateOrUpdateTestJSONRequestBody defines body for CreateOrUpdateTest for application/json ContentType.
type CreateOrUpdateTestJSONRequestBody = CreateTestCase

// CreateManyTestCaseJSONRequestBody defines body for CreateManyTestCase for application/json ContentType.
type CreateManyTestCaseJSONRequestBody = CreateManyTestCaseJSONBody

// AddTestCasesToLogicalTestSuiteJSONRequestBody defines body for AddTestCasesToLogicalTestSuite for application/json ContentType.
type AddTestCasesToLogicalTestSuiteJSONRequestBody = CreateLogicalTestCases

// Restore12JSONRequestBody defines body for Restore12 for application/json ContentType.
type Restore12JSONRequestBody = RestoreEntity

// CreateTestCaseResolutionStatusJSONRequestBody defines body for CreateTestCaseResolutionStatus for application/json ContentType.
type CreateTestCaseResolutionStatusJSONRequestBody = CreateTestCaseResolutionStatus

// UpdateTestCaseResolutionStatusApplicationJSONPatchPlusJSONRequestBody defines body for UpdateTestCaseResolutionStatus for application/json-patch+json ContentType.
type UpdateTestCaseResolutionStatusApplicationJSONPatchPlusJSONRequestBody = UpdateTestCaseResolutionStatusApplicationJSONPatchPlusJSONBody

// AddTestCaseResult1JSONRequestBody defines body for AddTestCaseResult1 for application/json ContentType.
type AddTestCaseResult1JSONRequestBody = CreateTestCaseResult

// PatchTestCaseResult1ApplicationJSONPatchPlusJSONRequestBody defines body for PatchTestCaseResult1 for application/json-patch+json ContentType.
type PatchTestCaseResult1ApplicationJSONPatchPlusJSONRequestBody = PatchTestCaseResult1ApplicationJSONPatchPlusJSONBody

// AddTestCaseResultJSONRequestBody defines body for AddTestCaseResult for application/json ContentType.
type AddTestCaseResultJSONRequestBody = TestCaseResult

// PatchTestCaseResultApplicationJSONPatchPlusJSONRequestBody defines body for PatchTestCaseResult for application/json-patch+json ContentType.
type PatchTestCaseResultApplicationJSONPatchPlusJSONRequestBody = PatchTestCaseResultApplicationJSONPatchPlusJSONBody

// PatchTestApplicationJSONPatchPlusJSONRequestBody defines body for PatchTest for application/json-patch+json ContentType.
type PatchTestApplicationJSONPatchPlusJSONRequestBody = PatchTestApplicationJSONPatchPlusJSONBody

// AddFailedRowsSampleJSONRequestBody defines body for AddFailedRowsSample for application/json ContentType.
type AddFailedRowsSampleJSONRequestBody = TableData

// AddInspectionQueryJSONRequestBody defines body for AddInspectionQuery for application/json ContentType.
type AddInspectionQueryJSONRequestBody = AddInspectionQueryJSONBody

// CreateTestDefinitionJSONRequestBody defines body for CreateTestDefinition for application/json ContentType.
type CreateTestDefinitionJSONRequestBody = CreateTestDefinition

// CreateOrUpdateTestDefinitionJSONRequestBody defines body for CreateOrUpdateTestDefinition for application/json ContentType.
type CreateOrUpdateTestDefinitionJSONRequestBody = CreateTestDefinition

// Restore13JSONRequestBody defines body for Restore13 for application/json ContentType.
type Restore13JSONRequestBody = RestoreEntity

// PatchTestDefinitionApplicationJSONPatchPlusJSONRequestBody defines body for PatchTestDefinition for application/json-patch+json ContentType.
type PatchTestDefinitionApplicationJSONPatchPlusJSONRequestBody = PatchTestDefinitionApplicationJSONPatchPlusJSONBody

// CreateLogicalTestSuiteJSONRequestBody defines body for CreateLogicalTestSuite for application/json ContentType.
type CreateLogicalTestSuiteJSONRequestBody = CreateTestSuite

// CreateOrUpdateLogicalTestSuiteJSONRequestBody defines body for CreateOrUpdateLogicalTestSuite for application/json ContentType.
type CreateOrUpdateLogicalTestSuiteJSONRequestBody = CreateTestSuite

// CreateBasicTestSuiteJSONRequestBody defines body for CreateBasicTestSuite for application/json ContentType.
type CreateBasicTestSuiteJSONRequestBody = CreateTestSuite

// CreateOrUpdateBasicTestSuiteJSONRequestBody defines body for CreateOrUpdateBasicTestSuite for application/json ContentType.
type CreateOrUpdateBasicTestSuiteJSONRequestBody = CreateTestSuite

// CreateExecutableTestSuiteJSONRequestBody defines body for CreateExecutableTestSuite for application/json ContentType.
type CreateExecutableTestSuiteJSONRequestBody = CreateTestSuite

// CreateOrUpdateExecutableTestSuiteJSONRequestBody defines body for CreateOrUpdateExecutableTestSuite for application/json ContentType.
type CreateOrUpdateExecutableTestSuiteJSONRequestBody = CreateTestSuite

// Restore14JSONRequestBody defines body for Restore14 for application/json ContentType.
type Restore14JSONRequestBody = RestoreEntity

// PatchTestSuiteApplicationJSONPatchPlusJSONRequestBody defines body for PatchTestSuite for application/json-patch+json ContentType.
type PatchTestSuiteApplicationJSONPatchPlusJSONRequestBody = PatchTestSuiteApplicationJSONPatchPlusJSONBody

// CreateDBSchemaJSONRequestBody defines body for CreateDBSchema for application/json ContentType.
type CreateDBSchemaJSONRequestBody = CreateDatabaseSchema

// CreateOrUpdateDBSchemaJSONRequestBody defines body for CreateOrUpdateDBSchema for application/json ContentType.
type CreateOrUpdateDBSchemaJSONRequestBody = CreateDatabaseSchema

// PatchDBSchemaApplicationJSONPatchPlusJSONRequestBody defines body for PatchDBSchema for application/json-patch+json ContentType.
type PatchDBSchemaApplicationJSONPatchPlusJSONRequestBody = PatchDBSchemaApplicationJSONPatchPlusJSONBody

// Restore8JSONRequestBody defines body for Restore8 for application/json ContentType.
type Restore8JSONRequestBody = RestoreEntity

// PatchDBSchema1ApplicationJSONPatchPlusJSONRequestBody defines body for PatchDBSchema1 for application/json-patch+json ContentType.
type PatchDBSchema1ApplicationJSONPatchPlusJSONRequestBody = PatchDBSchema1ApplicationJSONPatchPlusJSONBody

// AddDataProfilerConfig1JSONRequestBody defines body for AddDataProfilerConfig1 for application/json ContentType.
type AddDataProfilerConfig1JSONRequestBody = DatabaseSchemaProfilerConfig

// UpdateVoteForEntity3JSONRequestBody defines body for UpdateVoteForEntity3 for application/json ContentType.
type UpdateVoteForEntity3JSONRequestBody = VoteRequest

// CreateDatabaseJSONRequestBody defines body for CreateDatabase for application/json ContentType.
type CreateDatabaseJSONRequestBody = CreateDatabase

// CreateOrUpdateDatabaseJSONRequestBody defines body for CreateOrUpdateDatabase for application/json ContentType.
type CreateOrUpdateDatabaseJSONRequestBody = CreateDatabase

// PatchDatabaseApplicationJSONPatchPlusJSONRequestBody defines body for PatchDatabase for application/json-patch+json ContentType.
type PatchDatabaseApplicationJSONPatchPlusJSONRequestBody = PatchDatabaseApplicationJSONPatchPlusJSONBody

// Restore7JSONRequestBody defines body for Restore7 for application/json ContentType.
type Restore7JSONRequestBody = RestoreEntity

// PatchDatabase1ApplicationJSONPatchPlusJSONRequestBody defines body for PatchDatabase1 for application/json-patch+json ContentType.
type PatchDatabase1ApplicationJSONPatchPlusJSONRequestBody = PatchDatabase1ApplicationJSONPatchPlusJSONBody

// AddDataProfilerConfigJSONRequestBody defines body for AddDataProfilerConfig for application/json ContentType.
type AddDataProfilerConfigJSONRequestBody = DatabaseProfilerConfig

// UpdateVoteForEntity2JSONRequestBody defines body for UpdateVoteForEntity2 for application/json ContentType.
type UpdateVoteForEntity2JSONRequestBody = VoteRequest

// CreateDocumentJSONRequestBody defines body for CreateDocument for application/json ContentType.
type CreateDocumentJSONRequestBody = CreateDocument

// CreateOrUpdateDocumentJSONRequestBody defines body for CreateOrUpdateDocument for application/json ContentType.
type CreateOrUpdateDocumentJSONRequestBody = CreateDocument

// PatchDocumentApplicationJSONPatchPlusJSONRequestBody defines body for PatchDocument for application/json-patch+json ContentType.
type PatchDocumentApplicationJSONPatchPlusJSONRequestBody = PatchDocumentApplicationJSONPatchPlusJSONBody

// ValidateEmailTemplateJSONRequestBody defines body for ValidateEmailTemplate for application/json ContentType.
type ValidateEmailTemplateJSONRequestBody = EmailTemplate

// PatchDocument1ApplicationJSONPatchPlusJSONRequestBody defines body for PatchDocument1 for application/json-patch+json ContentType.
type PatchDocument1ApplicationJSONPatchPlusJSONRequestBody = PatchDocument1ApplicationJSONPatchPlusJSONBody

// CreateDomainJSONRequestBody defines body for CreateDomain for application/json ContentType.
type CreateDomainJSONRequestBody = CreateDomain

// CreateOrUpdateDomainJSONRequestBody defines body for CreateOrUpdateDomain for application/json ContentType.
type CreateOrUpdateDomainJSONRequestBody = CreateDomain

// PatchDomainApplicationJSONPatchPlusJSONRequestBody defines body for PatchDomain for application/json-patch+json ContentType.
type PatchDomainApplicationJSONPatchPlusJSONRequestBody = PatchDomainApplicationJSONPatchPlusJSONBody

// PatchDomain1ApplicationJSONPatchPlusJSONRequestBody defines body for PatchDomain1 for application/json-patch+json ContentType.
type PatchDomain1ApplicationJSONPatchPlusJSONRequestBody = PatchDomain1ApplicationJSONPatchPlusJSONBody

// BulkAddAssets1JSONRequestBody defines body for BulkAddAssets1 for application/json ContentType.
type BulkAddAssets1JSONRequestBody = BulkAssets

// BulkRemoveAssets1JSONRequestBody defines body for BulkRemoveAssets1 for application/json ContentType.
type BulkRemoveAssets1JSONRequestBody = BulkAssets

// CreateEventSubscriptionJSONRequestBody defines body for CreateEventSubscription for application/json ContentType.
type CreateEventSubscriptionJSONRequestBody = CreateEventSubscription

// CreateOrUpdateEventSubscriptionJSONRequestBody defines body for CreateOrUpdateEventSubscription for application/json ContentType.
type CreateOrUpdateEventSubscriptionJSONRequestBody = CreateEventSubscription

// PatchEventSubscriptionApplicationJSONPatchPlusJSONRequestBody defines body for PatchEventSubscription for application/json-patch+json ContentType.
type PatchEventSubscriptionApplicationJSONPatchPlusJSONRequestBody = PatchEventSubscriptionApplicationJSONPatchPlusJSONBody

// TestDestinationJSONRequestBody defines body for TestDestination for application/json ContentType.
type TestDestinationJSONRequestBody = EventSubscriptionDestinationTestRequest

// PatchEventSubscription1ApplicationJSONPatchPlusJSONRequestBody defines body for PatchEventSubscription1 for application/json-patch+json ContentType.
type PatchEventSubscription1ApplicationJSONPatchPlusJSONRequestBody = PatchEventSubscription1ApplicationJSONPatchPlusJSONBody

// CreateThreadJSONRequestBody defines body for CreateThread for application/json ContentType.
type CreateThreadJSONRequestBody = CreateThread

// CloseTaskJSONRequestBody defines body for CloseTask for application/json ContentType.
type CloseTaskJSONRequestBody = CloseTask

// ResolveTaskJSONRequestBody defines body for ResolveTask for application/json ContentType.
type ResolveTaskJSONRequestBody = ResolveTask

// PatchThreadApplicationJSONPatchPlusJSONRequestBody defines body for PatchThread for application/json-patch+json ContentType.
type PatchThreadApplicationJSONPatchPlusJSONRequestBody = PatchThreadApplicationJSONPatchPlusJSONBody

// AddPostToThreadJSONRequestBody defines body for AddPostToThread for application/json ContentType.
type AddPostToThreadJSONRequestBody = CreatePost

// PatchPostOfThreadApplicationJSONPatchPlusJSONRequestBody defines body for PatchPostOfThread for application/json-patch+json ContentType.
type PatchPostOfThreadApplicationJSONPatchPlusJSONRequestBody = PatchPostOfThreadApplicationJSONPatchPlusJSONBody

// CreateGlossaryJSONRequestBody defines body for CreateGlossary for application/json ContentType.
type CreateGlossaryJSONRequestBody = CreateGlossary

// CreateOrUpdateGlossaryJSONRequestBody defines body for CreateOrUpdateGlossary for application/json ContentType.
type CreateOrUpdateGlossaryJSONRequestBody = CreateGlossary

// PatchGlossaryApplicationJSONPatchPlusJSONRequestBody defines body for PatchGlossary for application/json-patch+json ContentType.
type PatchGlossaryApplicationJSONPatchPlusJSONRequestBody = PatchGlossaryApplicationJSONPatchPlusJSONBody

// ImportGlossaryTextRequestBody defines body for ImportGlossary for text/plain ContentType.
type ImportGlossaryTextRequestBody = ImportGlossaryTextBody

// ImportGlossaryAsyncTextRequestBody defines body for ImportGlossaryAsync for text/plain ContentType.
type ImportGlossaryAsyncTextRequestBody = ImportGlossaryAsyncTextBody

// Restore15JSONRequestBody defines body for Restore15 for application/json ContentType.
type Restore15JSONRequestBody = RestoreEntity

// PatchGlossary1ApplicationJSONPatchPlusJSONRequestBody defines body for PatchGlossary1 for application/json-patch+json ContentType.
type PatchGlossary1ApplicationJSONPatchPlusJSONRequestBody = PatchGlossary1ApplicationJSONPatchPlusJSONBody

// UpdateVoteForEntity7JSONRequestBody defines body for UpdateVoteForEntity7 for application/json ContentType.
type UpdateVoteForEntity7JSONRequestBody = VoteRequest

// CreateGlossaryTermJSONRequestBody defines body for CreateGlossaryTerm for application/json ContentType.
type CreateGlossaryTermJSONRequestBody = CreateGlossaryTerm

// CreateOrUpdateGlossaryTermJSONRequestBody defines body for CreateOrUpdateGlossaryTerm for application/json ContentType.
type CreateOrUpdateGlossaryTermJSONRequestBody = CreateGlossaryTerm

// CreateManyGlossaryTermJSONRequestBody defines body for CreateManyGlossaryTerm for application/json ContentType.
type CreateManyGlossaryTermJSONRequestBody = CreateManyGlossaryTermJSONBody

// PatchGlossaryTermApplicationJSONPatchPlusJSONRequestBody defines body for PatchGlossaryTerm for application/json-patch+json ContentType.
type PatchGlossaryTermApplicationJSONPatchPlusJSONRequestBody = PatchGlossaryTermApplicationJSONPatchPlusJSONBody

// Restore16JSONRequestBody defines body for Restore16 for application/json ContentType.
type Restore16JSONRequestBody = RestoreEntity

// PatchGlossaryTerm1ApplicationJSONPatchPlusJSONRequestBody defines body for PatchGlossaryTerm1 for application/json-patch+json ContentType.
type PatchGlossaryTerm1ApplicationJSONPatchPlusJSONRequestBody = PatchGlossaryTerm1ApplicationJSONPatchPlusJSONBody

// BulkAddGlossaryTermToAssetsJSONRequestBody defines body for BulkAddGlossaryTermToAssets for application/json ContentType.
type BulkAddGlossaryTermToAssetsJSONRequestBody = AddGlossaryToAssetsRequest

// BulkRemoveGlossaryTermFromAssetsJSONRequestBody defines body for BulkRemoveGlossaryTermFromAssets for application/json ContentType.
type BulkRemoveGlossaryTermFromAssetsJSONRequestBody = AddGlossaryToAssetsRequest

// ValidateGlossaryTermTagsAdditionJSONRequestBody defines body for ValidateGlossaryTermTagsAddition for application/json ContentType.
type ValidateGlossaryTermTagsAdditionJSONRequestBody = AddGlossaryToAssetsRequest

// UpdateVoteForEntity8JSONRequestBody defines body for UpdateVoteForEntity8 for application/json ContentType.
type UpdateVoteForEntity8JSONRequestBody = VoteRequest

// CreateWorkflowDefinitionJSONRequestBody defines body for CreateWorkflowDefinition for application/json ContentType.
type CreateWorkflowDefinitionJSONRequestBody = CreateWorkflowDefinition

// CreateOrUpdateWorkflowDefinitionJSONRequestBody defines body for CreateOrUpdateWorkflowDefinition for application/json ContentType.
type CreateOrUpdateWorkflowDefinitionJSONRequestBody = CreateWorkflowDefinition

// PatchWorkflowDefinitionApplicationJSONPatchPlusJSONRequestBody defines body for PatchWorkflowDefinition for application/json-patch+json ContentType.
type PatchWorkflowDefinitionApplicationJSONPatchPlusJSONRequestBody = PatchWorkflowDefinitionApplicationJSONPatchPlusJSONBody

// Restore17JSONRequestBody defines body for Restore17 for application/json ContentType.
type Restore17JSONRequestBody = RestoreEntity

// PatchWorkflowDefinition1ApplicationJSONPatchPlusJSONRequestBody defines body for PatchWorkflowDefinition1 for application/json-patch+json ContentType.
type PatchWorkflowDefinition1ApplicationJSONPatchPlusJSONRequestBody = PatchWorkflowDefinition1ApplicationJSONPatchPlusJSONBody

// AddLineageEdgeJSONRequestBody defines body for AddLineageEdge for application/json ContentType.
type AddLineageEdgeJSONRequestBody = AddLineage

// PatchLineageEdgeApplicationJSONPatchPlusJSONRequestBody defines body for PatchLineageEdge for application/json-patch+json ContentType.
type PatchLineageEdgeApplicationJSONPatchPlusJSONRequestBody = PatchLineageEdgeApplicationJSONPatchPlusJSONBody

// CreateTypeJSONRequestBody defines body for CreateType for application/json ContentType.
type CreateTypeJSONRequestBody = CreateType

// CreateOrUpdateJSONRequestBody defines body for CreateOrUpdate for application/json ContentType.
type CreateOrUpdateJSONRequestBody = CreateType

// PatchTypeApplicationJSONPatchPlusJSONRequestBody defines body for PatchType for application/json-patch+json ContentType.
type PatchTypeApplicationJSONPatchPlusJSONRequestBody = PatchTypeApplicationJSONPatchPlusJSONBody

// PatchType1ApplicationJSONPatchPlusJSONRequestBody defines body for PatchType1 for application/json-patch+json ContentType.
type PatchType1ApplicationJSONPatchPlusJSONRequestBody = PatchType1ApplicationJSONPatchPlusJSONBody

// AddPropertyJSONRequestBody defines body for AddProperty for application/json ContentType.
type AddPropertyJSONRequestBody = CustomProperty

// CreateMetricJSONRequestBody defines body for CreateMetric for application/json ContentType.
type CreateMetricJSONRequestBody = CreateMetric

// CreateOrUpdateMetricJSONRequestBody defines body for CreateOrUpdateMetric for application/json ContentType.
type CreateOrUpdateMetricJSONRequestBody = CreateMetric

// PatchMetricApplicationJSONPatchPlusJSONRequestBody defines body for PatchMetric for application/json-patch+json ContentType.
type PatchMetricApplicationJSONPatchPlusJSONRequestBody = PatchMetricApplicationJSONPatchPlusJSONBody

// Restore18JSONRequestBody defines body for Restore18 for application/json ContentType.
type Restore18JSONRequestBody = RestoreEntity

// PatchMetric1ApplicationJSONPatchPlusJSONRequestBody defines body for PatchMetric1 for application/json-patch+json ContentType.
type PatchMetric1ApplicationJSONPatchPlusJSONRequestBody = PatchMetric1ApplicationJSONPatchPlusJSONBody

// AddFollower2JSONRequestBody defines body for AddFollower2 for application/json ContentType.
type AddFollower2JSONRequestBody = AddFollower2JSONBody

// UpdateVoteForMetricJSONRequestBody defines body for UpdateVoteForMetric for application/json ContentType.
type UpdateVoteForMetricJSONRequestBody = VoteRequest

// CreateMlModelJSONRequestBody defines body for CreateMlModel for application/json ContentType.
type CreateMlModelJSONRequestBody = CreateMlModel

// CreateOrUpdateMlModelJSONRequestBody defines body for CreateOrUpdateMlModel for application/json ContentType.
type CreateOrUpdateMlModelJSONRequestBody = CreateMlModel

// PatchMlModelApplicationJSONPatchPlusJSONRequestBody defines body for PatchMlModel for application/json-patch+json ContentType.
type PatchMlModelApplicationJSONPatchPlusJSONRequestBody = PatchMlModelApplicationJSONPatchPlusJSONBody

// Restore19JSONRequestBody defines body for Restore19 for application/json ContentType.
type Restore19JSONRequestBody = RestoreEntity

// PatchMlModel1ApplicationJSONPatchPlusJSONRequestBody defines body for PatchMlModel1 for application/json-patch+json ContentType.
type PatchMlModel1ApplicationJSONPatchPlusJSONRequestBody = PatchMlModel1ApplicationJSONPatchPlusJSONBody

// AddFollower3JSONRequestBody defines body for AddFollower3 for application/json ContentType.
type AddFollower3JSONRequestBody = AddFollower3JSONBody

// UpdateVoteForEntity9JSONRequestBody defines body for UpdateVoteForEntity9 for application/json ContentType.
type UpdateVoteForEntity9JSONRequestBody = VoteRequest

// CreatePersonaJSONRequestBody defines body for CreatePersona for application/json ContentType.
type CreatePersonaJSONRequestBody = CreatePersona

// CreateOrUpdatePersonaJSONRequestBody defines body for CreateOrUpdatePersona for application/json ContentType.
type CreateOrUpdatePersonaJSONRequestBody = CreatePersona

// PatchPersonaApplicationJSONPatchPlusJSONRequestBody defines body for PatchPersona for application/json-patch+json ContentType.
type PatchPersonaApplicationJSONPatchPlusJSONRequestBody = PatchPersonaApplicationJSONPatchPlusJSONBody

// PatchPersona1ApplicationJSONPatchPlusJSONRequestBody defines body for PatchPersona1 for application/json-patch+json ContentType.
type PatchPersona1ApplicationJSONPatchPlusJSONRequestBody = PatchPersona1ApplicationJSONPatchPlusJSONBody

// CreatePipelineJSONRequestBody defines body for CreatePipeline for application/json ContentType.
type CreatePipelineJSONRequestBody = CreatePipeline

// CreateOrUpdatePipelineJSONRequestBody defines body for CreateOrUpdatePipeline for application/json ContentType.
type CreateOrUpdatePipelineJSONRequestBody = CreatePipeline

// PatchPipelineApplicationJSONPatchPlusJSONRequestBody defines body for PatchPipeline for application/json-patch+json ContentType.
type PatchPipelineApplicationJSONPatchPlusJSONRequestBody = PatchPipelineApplicationJSONPatchPlusJSONBody

// Restore20JSONRequestBody defines body for Restore20 for application/json ContentType.
type Restore20JSONRequestBody = RestoreEntity

// AddStatusDataJSONRequestBody defines body for AddStatusData for application/json ContentType.
type AddStatusDataJSONRequestBody = PipelineStatus

// PatchPipeline1ApplicationJSONPatchPlusJSONRequestBody defines body for PatchPipeline1 for application/json-patch+json ContentType.
type PatchPipeline1ApplicationJSONPatchPlusJSONRequestBody = PatchPipeline1ApplicationJSONPatchPlusJSONBody

// AddFollower4JSONRequestBody defines body for AddFollower4 for application/json ContentType.
type AddFollower4JSONRequestBody = AddFollower4JSONBody

// UpdateVoteForEntity10JSONRequestBody defines body for UpdateVoteForEntity10 for application/json ContentType.
type UpdateVoteForEntity10JSONRequestBody = VoteRequest

// CreatePolicyJSONRequestBody defines body for CreatePolicy for application/json ContentType.
type CreatePolicyJSONRequestBody = CreatePolicy

// CreateOrUpdatePolicyJSONRequestBody defines body for CreateOrUpdatePolicy for application/json ContentType.
type CreateOrUpdatePolicyJSONRequestBody = CreatePolicy

// PatchPolicyApplicationJSONPatchPlusJSONRequestBody defines body for PatchPolicy for application/json-patch+json ContentType.
type PatchPolicyApplicationJSONPatchPlusJSONRequestBody = PatchPolicyApplicationJSONPatchPlusJSONBody

// Restore21JSONRequestBody defines body for Restore21 for application/json ContentType.
type Restore21JSONRequestBody = RestoreEntity

// PatchPolicy1ApplicationJSONPatchPlusJSONRequestBody defines body for PatchPolicy1 for application/json-patch+json ContentType.
type PatchPolicy1ApplicationJSONPatchPlusJSONRequestBody = PatchPolicy1ApplicationJSONPatchPlusJSONBody

// CreateQueryJSONRequestBody defines body for CreateQuery for application/json ContentType.
type CreateQueryJSONRequestBody = CreateQuery

// CreateOrUpdateQueryJSONRequestBody defines body for CreateOrUpdateQuery for application/json ContentType.
type CreateOrUpdateQueryJSONRequestBody = CreateQuery

// PatchQueryApplicationJSONPatchPlusJSONRequestBody defines body for PatchQuery for application/json-patch+json ContentType.
type PatchQueryApplicationJSONPatchPlusJSONRequestBody = PatchQueryApplicationJSONPatchPlusJSONBody

// Restore22JSONRequestBody defines body for Restore22 for application/json ContentType.
type Restore22JSONRequestBody = RestoreEntity

// PatchQuery1ApplicationJSONPatchPlusJSONRequestBody defines body for PatchQuery1 for application/json-patch+json ContentType.
type PatchQuery1ApplicationJSONPatchPlusJSONRequestBody = PatchQuery1ApplicationJSONPatchPlusJSONBody

// AddFollower5JSONRequestBody defines body for AddFollower5 for application/json ContentType.
type AddFollower5JSONRequestBody = AddFollower5JSONBody

// RemoveQueryUsedInJSONRequestBody defines body for RemoveQueryUsedIn for application/json ContentType.
type RemoveQueryUsedInJSONRequestBody = RemoveQueryUsedInJSONBody

// AddQueryUsageJSONRequestBody defines body for AddQueryUsage for application/json ContentType.
type AddQueryUsageJSONRequestBody = AddQueryUsageJSONBody

// AddQueryUsedByJSONRequestBody defines body for AddQueryUsedBy for application/json ContentType.
type AddQueryUsedByJSONRequestBody = AddQueryUsedByJSONBody

// AddQueryUsersJSONRequestBody defines body for AddQueryUsers for application/json ContentType.
type AddQueryUsersJSONRequestBody = AddQueryUsersJSONBody

// UpdateVoteForEntity11JSONRequestBody defines body for UpdateVoteForEntity11 for application/json ContentType.
type UpdateVoteForEntity11JSONRequestBody = VoteRequest

// CreateQueryCostRecordJSONRequestBody defines body for CreateQueryCostRecord for application/json ContentType.
type CreateQueryCostRecordJSONRequestBody = CreateQueryCostRecord

// GetReportByFQNJSONRequestBody defines body for GetReportByFQN for application/json ContentType.
type GetReportByFQNJSONRequestBody = Report

// CreateOrUpdateReportJSONRequestBody defines body for CreateOrUpdateReport for application/json ContentType.
type CreateOrUpdateReportJSONRequestBody = Report

// UpdateVoteForEntity12JSONRequestBody defines body for UpdateVoteForEntity12 for application/json ContentType.
type UpdateVoteForEntity12JSONRequestBody = VoteRequest

// CreateRoleJSONRequestBody defines body for CreateRole for application/json ContentType.
type CreateRoleJSONRequestBody = CreateRole

// CreateOrUpdateRoleJSONRequestBody defines body for CreateOrUpdateRole for application/json ContentType.
type CreateOrUpdateRoleJSONRequestBody = CreateRole

// PatchRoleApplicationJSONPatchPlusJSONRequestBody defines body for PatchRole for application/json-patch+json ContentType.
type PatchRoleApplicationJSONPatchPlusJSONRequestBody = PatchRoleApplicationJSONPatchPlusJSONBody

// Restore35JSONRequestBody defines body for Restore35 for application/json ContentType.
type Restore35JSONRequestBody = RestoreEntity

// PatchRole1ApplicationJSONPatchPlusJSONRequestBody defines body for PatchRole1 for application/json-patch+json ContentType.
type PatchRole1ApplicationJSONPatchPlusJSONRequestBody = PatchRole1ApplicationJSONPatchPlusJSONBody

// PreviewSearchJSONRequestBody defines body for PreviewSearch for application/json ContentType.
type PreviewSearchJSONRequestBody = PreviewSearchRequest

// CreateSearchIndexJSONRequestBody defines body for CreateSearchIndex for application/json ContentType.
type CreateSearchIndexJSONRequestBody = CreateSearchIndex

// CreateOrUpdateSearchIndexJSONRequestBody defines body for CreateOrUpdateSearchIndex for application/json ContentType.
type CreateOrUpdateSearchIndexJSONRequestBody = CreateSearchIndex

// PatchSearchIndexApplicationJSONPatchPlusJSONRequestBody defines body for PatchSearchIndex for application/json-patch+json ContentType.
type PatchSearchIndexApplicationJSONPatchPlusJSONRequestBody = PatchSearchIndexApplicationJSONPatchPlusJSONBody

// Restore23JSONRequestBody defines body for Restore23 for application/json ContentType.
type Restore23JSONRequestBody = RestoreEntity

// PatchSearchIndex1ApplicationJSONPatchPlusJSONRequestBody defines body for PatchSearchIndex1 for application/json-patch+json ContentType.
type PatchSearchIndex1ApplicationJSONPatchPlusJSONRequestBody = PatchSearchIndex1ApplicationJSONPatchPlusJSONBody

// AddFollower6JSONRequestBody defines body for AddFollower6 for application/json ContentType.
type AddFollower6JSONRequestBody = AddFollower6JSONBody

// AddSampleData1JSONRequestBody defines body for AddSampleData1 for application/json ContentType.
type AddSampleData1JSONRequestBody = SearchIndexSampleData

// UpdateVoteForEntity13JSONRequestBody defines body for UpdateVoteForEntity13 for application/json ContentType.
type UpdateVoteForEntity13JSONRequestBody = VoteRequest

// CreateApiServiceJSONRequestBody defines body for CreateApiService for application/json ContentType.
type CreateApiServiceJSONRequestBody = CreateApiService

// CreateOrUpdateAPIServiceJSONRequestBody defines body for CreateOrUpdateAPIService for application/json ContentType.
type CreateOrUpdateAPIServiceJSONRequestBody = CreateApiService

// PatchAPIServiceApplicationJSONPatchPlusJSONRequestBody defines body for PatchAPIService for application/json-patch+json ContentType.
type PatchAPIServiceApplicationJSONPatchPlusJSONRequestBody = PatchAPIServiceApplicationJSONPatchPlusJSONBody

// Restore24JSONRequestBody defines body for Restore24 for application/json ContentType.
type Restore24JSONRequestBody = RestoreEntity

// PatchAPIService1ApplicationJSONPatchPlusJSONRequestBody defines body for PatchAPIService1 for application/json-patch+json ContentType.
type PatchAPIService1ApplicationJSONPatchPlusJSONRequestBody = PatchAPIService1ApplicationJSONPatchPlusJSONBody

// AddTestConnectionResultJSONRequestBody defines body for AddTestConnectionResult for application/json ContentType.
type AddTestConnectionResultJSONRequestBody = TestConnectionResult

// CreateDashboardServiceJSONRequestBody defines body for CreateDashboardService for application/json ContentType.
type CreateDashboardServiceJSONRequestBody = CreateDashboardService

// CreateOrUpdateDashboardServiceJSONRequestBody defines body for CreateOrUpdateDashboardService for application/json ContentType.
type CreateOrUpdateDashboardServiceJSONRequestBody = CreateDashboardService

// PatchDashboardServiceApplicationJSONPatchPlusJSONRequestBody defines body for PatchDashboardService for application/json-patch+json ContentType.
type PatchDashboardServiceApplicationJSONPatchPlusJSONRequestBody = PatchDashboardServiceApplicationJSONPatchPlusJSONBody

// Restore25JSONRequestBody defines body for Restore25 for application/json ContentType.
type Restore25JSONRequestBody = RestoreEntity

// PatchDashboardService1ApplicationJSONPatchPlusJSONRequestBody defines body for PatchDashboardService1 for application/json-patch+json ContentType.
type PatchDashboardService1ApplicationJSONPatchPlusJSONRequestBody = PatchDashboardService1ApplicationJSONPatchPlusJSONBody

// AddTestConnectionResult1JSONRequestBody defines body for AddTestConnectionResult1 for application/json ContentType.
type AddTestConnectionResult1JSONRequestBody = TestConnectionResult

// CreateDatabaseServiceJSONRequestBody defines body for CreateDatabaseService for application/json ContentType.
type CreateDatabaseServiceJSONRequestBody = CreateDatabaseService

// CreateOrUpdateDatabaseServiceJSONRequestBody defines body for CreateOrUpdateDatabaseService for application/json ContentType.
type CreateOrUpdateDatabaseServiceJSONRequestBody = CreateDatabaseService

// PatchDatabaseServiceApplicationJSONPatchPlusJSONRequestBody defines body for PatchDatabaseService for application/json-patch+json ContentType.
type PatchDatabaseServiceApplicationJSONPatchPlusJSONRequestBody = PatchDatabaseServiceApplicationJSONPatchPlusJSONBody

// Restore26JSONRequestBody defines body for Restore26 for application/json ContentType.
type Restore26JSONRequestBody = RestoreEntity

// PatchDatabaseService1ApplicationJSONPatchPlusJSONRequestBody defines body for PatchDatabaseService1 for application/json-patch+json ContentType.
type PatchDatabaseService1ApplicationJSONPatchPlusJSONRequestBody = PatchDatabaseService1ApplicationJSONPatchPlusJSONBody

// AddTestConnectionResult2JSONRequestBody defines body for AddTestConnectionResult2 for application/json ContentType.
type AddTestConnectionResult2JSONRequestBody = TestConnectionResult

// CreateIngestionPipelineJSONRequestBody defines body for CreateIngestionPipeline for application/json ContentType.
type CreateIngestionPipelineJSONRequestBody = CreateIngestionPipeline

// CreateOrUpdateIngestionPipelineJSONRequestBody defines body for CreateOrUpdateIngestionPipeline for application/json ContentType.
type CreateOrUpdateIngestionPipelineJSONRequestBody = CreateIngestionPipeline

// BulkDeployIngestionJSONRequestBody defines body for BulkDeployIngestion for application/json ContentType.
type BulkDeployIngestionJSONRequestBody = BulkDeployIngestionJSONBody

// PatchIngestionPipelineApplicationJSONPatchPlusJSONRequestBody defines body for PatchIngestionPipeline for application/json-patch+json ContentType.
type PatchIngestionPipelineApplicationJSONPatchPlusJSONRequestBody = PatchIngestionPipelineApplicationJSONPatchPlusJSONBody

// Restore27JSONRequestBody defines body for Restore27 for application/json ContentType.
type Restore27JSONRequestBody = RestoreEntity

// AddPipelineStatusJSONRequestBody defines body for AddPipelineStatus for application/json ContentType.
type AddPipelineStatusJSONRequestBody = PipelineStatus

// PatchIngestionPipeline1ApplicationJSONPatchPlusJSONRequestBody defines body for PatchIngestionPipeline1 for application/json-patch+json ContentType.
type PatchIngestionPipeline1ApplicationJSONPatchPlusJSONRequestBody = PatchIngestionPipeline1ApplicationJSONPatchPlusJSONBody

// CreateMessagingServiceJSONRequestBody defines body for CreateMessagingService for application/json ContentType.
type CreateMessagingServiceJSONRequestBody = CreateMessagingService

// CreateOrUpdateMessagingServiceJSONRequestBody defines body for CreateOrUpdateMessagingService for application/json ContentType.
type CreateOrUpdateMessagingServiceJSONRequestBody = CreateMessagingService

// PatchMessagingServiceApplicationJSONPatchPlusJSONRequestBody defines body for PatchMessagingService for application/json-patch+json ContentType.
type PatchMessagingServiceApplicationJSONPatchPlusJSONRequestBody = PatchMessagingServiceApplicationJSONPatchPlusJSONBody

// Restore28JSONRequestBody defines body for Restore28 for application/json ContentType.
type Restore28JSONRequestBody = RestoreEntity

// PatchMessagingService1ApplicationJSONPatchPlusJSONRequestBody defines body for PatchMessagingService1 for application/json-patch+json ContentType.
type PatchMessagingService1ApplicationJSONPatchPlusJSONRequestBody = PatchMessagingService1ApplicationJSONPatchPlusJSONBody

// AddTestConnectionResult3JSONRequestBody defines body for AddTestConnectionResult3 for application/json ContentType.
type AddTestConnectionResult3JSONRequestBody = TestConnectionResult

// CreateMetadataServiceJSONRequestBody defines body for CreateMetadataService for application/json ContentType.
type CreateMetadataServiceJSONRequestBody = CreateMetadataService

// CreateOrUpdateMetadataServiceJSONRequestBody defines body for CreateOrUpdateMetadataService for application/json ContentType.
type CreateOrUpdateMetadataServiceJSONRequestBody = CreateMetadataService

// PatchMetadataServiceApplicationJSONPatchPlusJSONRequestBody defines body for PatchMetadataService for application/json-patch+json ContentType.
type PatchMetadataServiceApplicationJSONPatchPlusJSONRequestBody = PatchMetadataServiceApplicationJSONPatchPlusJSONBody

// Restore29JSONRequestBody defines body for Restore29 for application/json ContentType.
type Restore29JSONRequestBody = RestoreEntity

// PatchMetadataService1ApplicationJSONPatchPlusJSONRequestBody defines body for PatchMetadataService1 for application/json-patch+json ContentType.
type PatchMetadataService1ApplicationJSONPatchPlusJSONRequestBody = PatchMetadataService1ApplicationJSONPatchPlusJSONBody

// AddTestConnectionResult4JSONRequestBody defines body for AddTestConnectionResult4 for application/json ContentType.
type AddTestConnectionResult4JSONRequestBody = TestConnectionResult

// CreateMlModelServiceJSONRequestBody defines body for CreateMlModelService for application/json ContentType.
type CreateMlModelServiceJSONRequestBody = CreateMlModelService

// CreateOrUpdateMlModelServiceJSONRequestBody defines body for CreateOrUpdateMlModelService for application/json ContentType.
type CreateOrUpdateMlModelServiceJSONRequestBody = CreateMlModelService

// PatchMlModelServiceApplicationJSONPatchPlusJSONRequestBody defines body for PatchMlModelService for application/json-patch+json ContentType.
type PatchMlModelServiceApplicationJSONPatchPlusJSONRequestBody = PatchMlModelServiceApplicationJSONPatchPlusJSONBody

// Restore30JSONRequestBody defines body for Restore30 for application/json ContentType.
type Restore30JSONRequestBody = RestoreEntity

// PatchMlModelService1ApplicationJSONPatchPlusJSONRequestBody defines body for PatchMlModelService1 for application/json-patch+json ContentType.
type PatchMlModelService1ApplicationJSONPatchPlusJSONRequestBody = PatchMlModelService1ApplicationJSONPatchPlusJSONBody

// AddTestConnectionResult5JSONRequestBody defines body for AddTestConnectionResult5 for application/json ContentType.
type AddTestConnectionResult5JSONRequestBody = TestConnectionResult

// CreatePipelineServiceJSONRequestBody defines body for CreatePipelineService for application/json ContentType.
type CreatePipelineServiceJSONRequestBody = CreatePipelineService

// CreateOrUpdatePipelineServiceJSONRequestBody defines body for CreateOrUpdatePipelineService for application/json ContentType.
type CreateOrUpdatePipelineServiceJSONRequestBody = CreatePipelineService

// PatchPipelineServiceApplicationJSONPatchPlusJSONRequestBody defines body for PatchPipelineService for application/json-patch+json ContentType.
type PatchPipelineServiceApplicationJSONPatchPlusJSONRequestBody = PatchPipelineServiceApplicationJSONPatchPlusJSONBody

// Restore31JSONRequestBody defines body for Restore31 for application/json ContentType.
type Restore31JSONRequestBody = RestoreEntity

// PatchPipelineService1ApplicationJSONPatchPlusJSONRequestBody defines body for PatchPipelineService1 for application/json-patch+json ContentType.
type PatchPipelineService1ApplicationJSONPatchPlusJSONRequestBody = PatchPipelineService1ApplicationJSONPatchPlusJSONBody

// AddTestConnectionResult6JSONRequestBody defines body for AddTestConnectionResult6 for application/json ContentType.
type AddTestConnectionResult6JSONRequestBody = TestConnectionResult

// CreateSearchServiceJSONRequestBody defines body for CreateSearchService for application/json ContentType.
type CreateSearchServiceJSONRequestBody = CreateSearchService

// CreateOrUpdateSearchServiceJSONRequestBody defines body for CreateOrUpdateSearchService for application/json ContentType.
type CreateOrUpdateSearchServiceJSONRequestBody = CreateSearchService

// PatchSearchServiceApplicationJSONPatchPlusJSONRequestBody defines body for PatchSearchService for application/json-patch+json ContentType.
type PatchSearchServiceApplicationJSONPatchPlusJSONRequestBody = PatchSearchServiceApplicationJSONPatchPlusJSONBody

// Restore32JSONRequestBody defines body for Restore32 for application/json ContentType.
type Restore32JSONRequestBody = RestoreEntity

// PatchSearchService1ApplicationJSONPatchPlusJSONRequestBody defines body for PatchSearchService1 for application/json-patch+json ContentType.
type PatchSearchService1ApplicationJSONPatchPlusJSONRequestBody = PatchSearchService1ApplicationJSONPatchPlusJSONBody

// AddTestConnectionResult7JSONRequestBody defines body for AddTestConnectionResult7 for application/json ContentType.
type AddTestConnectionResult7JSONRequestBody = TestConnectionResult

// CreateStorageServiceJSONRequestBody defines body for CreateStorageService for application/json ContentType.
type CreateStorageServiceJSONRequestBody = CreateStorageService

// CreateOrUpdateStorageServiceJSONRequestBody defines body for CreateOrUpdateStorageService for application/json ContentType.
type CreateOrUpdateStorageServiceJSONRequestBody = CreateStorageService

// PatchStorageServiceByFQNApplicationJSONPatchPlusJSONRequestBody defines body for PatchStorageServiceByFQN for application/json-patch+json ContentType.
type PatchStorageServiceByFQNApplicationJSONPatchPlusJSONRequestBody = PatchStorageServiceByFQNApplicationJSONPatchPlusJSONBody

// Restore33JSONRequestBody defines body for Restore33 for application/json ContentType.
type Restore33JSONRequestBody = RestoreEntity

// PatchStorageServiceApplicationJSONPatchPlusJSONRequestBody defines body for PatchStorageService for application/json-patch+json ContentType.
type PatchStorageServiceApplicationJSONPatchPlusJSONRequestBody = PatchStorageServiceApplicationJSONPatchPlusJSONBody

// AddTestConnectionResult8JSONRequestBody defines body for AddTestConnectionResult8 for application/json ContentType.
type AddTestConnectionResult8JSONRequestBody = TestConnectionResult

// CreateStoredProcedureJSONRequestBody defines body for CreateStoredProcedure for application/json ContentType.
type CreateStoredProcedureJSONRequestBody = CreateStoredProcedure

// CreateOrUpdateStoredProcedureJSONRequestBody defines body for CreateOrUpdateStoredProcedure for application/json ContentType.
type CreateOrUpdateStoredProcedureJSONRequestBody = CreateStoredProcedure

// PatchStoredProcedureApplicationJSONPatchPlusJSONRequestBody defines body for PatchStoredProcedure for application/json-patch+json ContentType.
type PatchStoredProcedureApplicationJSONPatchPlusJSONRequestBody = PatchStoredProcedureApplicationJSONPatchPlusJSONBody

// Restore9JSONRequestBody defines body for Restore9 for application/json ContentType.
type Restore9JSONRequestBody = RestoreEntity

// PatchStoredProcedure1ApplicationJSONPatchPlusJSONRequestBody defines body for PatchStoredProcedure1 for application/json-patch+json ContentType.
type PatchStoredProcedure1ApplicationJSONPatchPlusJSONRequestBody = PatchStoredProcedure1ApplicationJSONPatchPlusJSONBody

// AddFollower1JSONRequestBody defines body for AddFollower1 for application/json ContentType.
type AddFollower1JSONRequestBody = AddFollower1JSONBody

// UpdateVoteForEntity4JSONRequestBody defines body for UpdateVoteForEntity4 for application/json ContentType.
type UpdateVoteForEntity4JSONRequestBody = VoteRequest

// CreateSuggestionJSONRequestBody defines body for CreateSuggestion for application/json ContentType.
type CreateSuggestionJSONRequestBody = CreateSuggestion

// UpdateSuggestionJSONRequestBody defines body for UpdateSuggestion for application/json ContentType.
type UpdateSuggestionJSONRequestBody = Suggestion

// CreateTableJSONRequestBody defines body for CreateTable for application/json ContentType.
type CreateTableJSONRequestBody = CreateTable

// CreateOrUpdateTableJSONRequestBody defines body for CreateOrUpdateTable for application/json ContentType.
type CreateOrUpdateTableJSONRequestBody = CreateTable

// PatchTableApplicationJSONPatchPlusJSONRequestBody defines body for PatchTable for application/json-patch+json ContentType.
type PatchTableApplicationJSONPatchPlusJSONRequestBody = PatchTableApplicationJSONPatchPlusJSONBody

// ImportTableTextRequestBody defines body for ImportTable for text/plain ContentType.
type ImportTableTextRequestBody = ImportTableTextBody

// ImportTableAsyncTextRequestBody defines body for ImportTableAsync for text/plain ContentType.
type ImportTableAsyncTextRequestBody = ImportTableAsyncTextBody

// Restore10JSONRequestBody defines body for Restore10 for application/json ContentType.
type Restore10JSONRequestBody = RestoreEntity

// PatchTable1ApplicationJSONPatchPlusJSONRequestBody defines body for PatchTable1 for application/json-patch+json ContentType.
type PatchTable1ApplicationJSONPatchPlusJSONRequestBody = PatchTable1ApplicationJSONPatchPlusJSONBody

// AddCustomMetricJSONRequestBody defines body for AddCustomMetric for application/json ContentType.
type AddCustomMetricJSONRequestBody = CreateCustomMetric

// AddDataModelJSONRequestBody defines body for AddDataModel for application/json ContentType.
type AddDataModelJSONRequestBody = DataModel

// AddFollowerToTableJSONRequestBody defines body for AddFollowerToTable for application/json ContentType.
type AddFollowerToTableJSONRequestBody = AddFollowerToTableJSONBody

// AddTableJoinInfoJSONRequestBody defines body for AddTableJoinInfo for application/json ContentType.
type AddTableJoinInfoJSONRequestBody = TableJoins

// AddSampleDataJSONRequestBody defines body for AddSampleData for application/json ContentType.
type AddSampleDataJSONRequestBody = TableData

// AddDataProfilerJSONRequestBody defines body for AddDataProfiler for application/json ContentType.
type AddDataProfilerJSONRequestBody = CreateTableProfile

// AddDataProfilerConfig2JSONRequestBody defines body for AddDataProfilerConfig2 for application/json ContentType.
type AddDataProfilerConfig2JSONRequestBody = TableProfilerConfig

// UpdateVoteForEntity5JSONRequestBody defines body for UpdateVoteForEntity5 for application/json ContentType.
type UpdateVoteForEntity5JSONRequestBody = VoteRequest

// CreateTagJSONRequestBody defines body for CreateTag for application/json ContentType.
type CreateTagJSONRequestBody = CreateTag

// CreateOrUpdateTagJSONRequestBody defines body for CreateOrUpdateTag for application/json ContentType.
type CreateOrUpdateTagJSONRequestBody = CreateTag

// PatchTagApplicationJSONPatchPlusJSONRequestBody defines body for PatchTag for application/json-patch+json ContentType.
type PatchTagApplicationJSONPatchPlusJSONRequestBody = PatchTagApplicationJSONPatchPlusJSONBody

// RestoreTagJSONRequestBody defines body for RestoreTag for application/json ContentType.
type RestoreTagJSONRequestBody = RestoreEntity

// PatchTag1ApplicationJSONPatchPlusJSONRequestBody defines body for PatchTag1 for application/json-patch+json ContentType.
type PatchTag1ApplicationJSONPatchPlusJSONRequestBody = PatchTag1ApplicationJSONPatchPlusJSONBody

// BulkAddTagToAssetsJSONRequestBody defines body for BulkAddTagToAssets for application/json ContentType.
type BulkAddTagToAssetsJSONRequestBody = AddTagToAssetsRequest

// BulkRemoveTagFromAssetsJSONRequestBody defines body for BulkRemoveTagFromAssets for application/json ContentType.
type BulkRemoveTagFromAssetsJSONRequestBody = AddTagToAssetsRequest

// CreateTeamJSONRequestBody defines body for CreateTeam for application/json ContentType.
type CreateTeamJSONRequestBody = CreateTeam

// CreateOrUpdateTeamJSONRequestBody defines body for CreateOrUpdateTeam for application/json ContentType.
type CreateOrUpdateTeamJSONRequestBody = CreateTeam

// PatchTeamApplicationJSONPatchPlusJSONRequestBody defines body for PatchTeam for application/json-patch+json ContentType.
type PatchTeamApplicationJSONPatchPlusJSONRequestBody = PatchTeamApplicationJSONPatchPlusJSONBody

// ImportTeamsTextRequestBody defines body for ImportTeams for text/plain ContentType.
type ImportTeamsTextRequestBody = ImportTeamsTextBody

// ImportTeamsAsyncTextRequestBody defines body for ImportTeamsAsync for text/plain ContentType.
type ImportTeamsAsyncTextRequestBody = ImportTeamsAsyncTextBody

// Restore36JSONRequestBody defines body for Restore36 for application/json ContentType.
type Restore36JSONRequestBody = RestoreEntity

// PatchTeam1ApplicationJSONPatchPlusJSONRequestBody defines body for PatchTeam1 for application/json-patch+json ContentType.
type PatchTeam1ApplicationJSONPatchPlusJSONRequestBody = PatchTeam1ApplicationJSONPatchPlusJSONBody

// BulkAddAssets2JSONRequestBody defines body for BulkAddAssets2 for application/json ContentType.
type BulkAddAssets2JSONRequestBody = BulkAssets

// BulkRemoveAssets2JSONRequestBody defines body for BulkRemoveAssets2 for application/json ContentType.
type BulkRemoveAssets2JSONRequestBody = BulkAssets

// UpdateTeamUsersJSONRequestBody defines body for UpdateTeamUsers for application/json ContentType.
type UpdateTeamUsersJSONRequestBody = UpdateTeamUsersJSONBody

// CreateTopicJSONRequestBody defines body for CreateTopic for application/json ContentType.
type CreateTopicJSONRequestBody = CreateTopic

// CreateOrUpdateTopicJSONRequestBody defines body for CreateOrUpdateTopic for application/json ContentType.
type CreateOrUpdateTopicJSONRequestBody = CreateTopic

// PatchTopicApplicationJSONPatchPlusJSONRequestBody defines body for PatchTopic for application/json-patch+json ContentType.
type PatchTopicApplicationJSONPatchPlusJSONRequestBody = PatchTopicApplicationJSONPatchPlusJSONBody

// Restore38JSONRequestBody defines body for Restore38 for application/json ContentType.
type Restore38JSONRequestBody = RestoreEntity

// PatchTopic1ApplicationJSONPatchPlusJSONRequestBody defines body for PatchTopic1 for application/json-patch+json ContentType.
type PatchTopic1ApplicationJSONPatchPlusJSONRequestBody = PatchTopic1ApplicationJSONPatchPlusJSONBody

// AddFollower8JSONRequestBody defines body for AddFollower8 for application/json ContentType.
type AddFollower8JSONRequestBody = AddFollower8JSONBody

// AddSampleData2JSONRequestBody defines body for AddSampleData2 for application/json ContentType.
type AddSampleData2JSONRequestBody = TopicSampleData

// UpdateVoteForEntity15JSONRequestBody defines body for UpdateVoteForEntity15 for application/json ContentType.
type UpdateVoteForEntity15JSONRequestBody = VoteRequest

// ReportEntityUsageWithFQNJSONRequestBody defines body for ReportEntityUsageWithFQN for application/json ContentType.
type ReportEntityUsageWithFQNJSONRequestBody = DailyCount

// ReportEntityUsageWithFQN1JSONRequestBody defines body for ReportEntityUsageWithFQN1 for application/json ContentType.
type ReportEntityUsageWithFQN1JSONRequestBody = DailyCount

// ReportEntityUsageWithIDJSONRequestBody defines body for ReportEntityUsageWithID for application/json ContentType.
type ReportEntityUsageWithIDJSONRequestBody = DailyCount

// ReportEntityUsageWithID1JSONRequestBody defines body for ReportEntityUsageWithID1 for application/json ContentType.
type ReportEntityUsageWithID1JSONRequestBody = DailyCount

// CreateUserJSONRequestBody defines body for CreateUser for application/json ContentType.
type CreateUserJSONRequestBody = CreateUser

// CreateOrUpdateUserJSONRequestBody defines body for CreateOrUpdateUser for application/json ContentType.
type CreateOrUpdateUserJSONRequestBody = CreateUser

// ChangeUserPasswordJSONRequestBody defines body for ChangeUserPassword for application/json ContentType.
type ChangeUserPasswordJSONRequestBody = ChangePasswordRequest

// CheckEmailInUseJSONRequestBody defines body for CheckEmailInUse for application/json ContentType.
type CheckEmailInUseJSONRequestBody = EmailRequest

// CheckEmailIsVerifiedJSONRequestBody defines body for CheckEmailIsVerified for application/json ContentType.
type CheckEmailIsVerifiedJSONRequestBody = EmailRequest

// GeneratePasswordResetLinkJSONRequestBody defines body for GeneratePasswordResetLink for application/json ContentType.
type GeneratePasswordResetLinkJSONRequestBody = EmailRequest

// GenerateJWTTokenForBotUserJSONRequestBody defines body for GenerateJWTTokenForBotUser for application/json ContentType.
type GenerateJWTTokenForBotUserJSONRequestBody = GenerateTokenRequest

// ImportTeams1TextRequestBody defines body for ImportTeams1 for text/plain ContentType.
type ImportTeams1TextRequestBody = ImportTeams1TextBody

// ImportTeamsAsync1TextRequestBody defines body for ImportTeamsAsync1 for text/plain ContentType.
type ImportTeamsAsync1TextRequestBody = ImportTeamsAsync1TextBody

// LoginUserWithPwdJSONRequestBody defines body for LoginUserWithPwd for application/json ContentType.
type LoginUserWithPwdJSONRequestBody = LoginRequest

// LogoutUserJSONRequestBody defines body for LogoutUser for application/json ContentType.
type LogoutUserJSONRequestBody = LogoutRequest

// ResetUserPasswordJSONRequestBody defines body for ResetUserPassword for application/json ContentType.
type ResetUserPasswordJSONRequestBody = PasswordResetRequest

// RefreshTokenJSONRequestBody defines body for RefreshToken for application/json ContentType.
type RefreshTokenJSONRequestBody = TokenRefreshRequest

// Restore37JSONRequestBody defines body for Restore37 for application/json ContentType.
type Restore37JSONRequestBody = RestoreEntity

// RevokeJWTTokenForBotUserJSONRequestBody defines body for RevokeJWTTokenForBotUser for application/json ContentType.
type RevokeJWTTokenForBotUserJSONRequestBody = RevokeTokenRequest

// CreatePersonalAccessTokenJSONRequestBody defines body for CreatePersonalAccessToken for application/json ContentType.
type CreatePersonalAccessTokenJSONRequestBody = CreatePersonalToken

// RevokePersonalAccessTokenJSONRequestBody defines body for RevokePersonalAccessToken for application/json ContentType.
type RevokePersonalAccessTokenJSONRequestBody = RevokePersonalTokenRequest

// RegisterUserJSONRequestBody defines body for RegisterUser for application/json ContentType.
type RegisterUserJSONRequestBody = RegistrationRequest

// PatchUserApplicationJSONPatchPlusJSONRequestBody defines body for PatchUser for application/json-patch+json ContentType.
type PatchUserApplicationJSONPatchPlusJSONRequestBody = PatchUserApplicationJSONPatchPlusJSONBody
